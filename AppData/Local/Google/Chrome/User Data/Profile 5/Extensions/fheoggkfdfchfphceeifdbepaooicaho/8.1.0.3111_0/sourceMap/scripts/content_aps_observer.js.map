{"version":3,"file":"scripts/content_aps_observer.js","mappings":"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KACvBC,gBAAiB,KACjBC,UAAW,KACXC,mBAAmB,EACnBC,gBAAiB,KACjBC,qBAAsB,gDACtBC,gBAAiB,KACjBC,oBAAqB,GACrBC,WAAY,SACZC,YAAanI,GACbyC,WAAY,KACZ2F,YAAa,KACbC,iBAAkB,KAClBC,UAAW,KACXC,OAAQ,KACRC,SAAU,KACVC,kBAAmB,KACnBC,KAAM,KACNC,QAAS,IAAI7G,GACb8G,qBAAsB,IAAIC,IAC1BC,iBAAiB,EACjBC,KAAM,KACNC,kBAAmB,KACnBC,oBAAqB9I,GACrB+I,UAAW,KACXC,gBPrB6B,CAC7B,wBACA,2CACA,8BACA,+BACA,wBACA,wBACA,2BACA,yBACA,+BACA,0BACA,gCACA,sCACA,8BACA,uBACA,yBACA,qBACA,wCACA,mCACA,0BACA,4BACA,iCACA,8BACA,+BACA,0BACA,0CACA,2BACA,kBACA,oCACA,6BACA,4BACA,wBACA,2BACA,0BACA,wBACA,2BACA,8BACA,2CACA,yBACA,wBACA,6BACA,sBACA,oBACA,+CACA,wBACA,2BACA,4BACA,6BACA,2BACA,wBACA,2BACA,qCACA,0BACA,2BACA,oCACA,uCACA,yBACA,4BACA,wBACA,4BACA,2BACA,8BACA,6BACA,gCACA,mCACA,4BACA,gCACA,4BACA,kCACA,+BACA,4BACA,wCACA,mBACA,0BACA,8BACA,2BACA,6BACA,2BACA,qBACA,+BACA,iCACA,2CACA,8BACA,6BACA,sCACA,0CACA,4BACA,2BACA,+BACA,2BACA,oCACA,0BACA,uBACA,qCACA,+BACA,+BACA,6BACA,yBACA,uBACA,qCACA,2BACA,4BACA,yBACA,6BACA,2BACA,6BACA,8BACA,2BACA,2BACA,sDACA,4BACA,8BACA,sBACA,0BACA,0BACA,0BACA,yBACA,+BACA,yBACA,6BACA,gCACA,4BACA,6CACA,wBACA,2BACA,2BACA,uBACA,iDACA,4BACA,oCACA,yBACA,4BACA,wCACA,yBACA,8BACA,wBACA,qBACA,0BACA,yBACA,0BACA,qCACA,uBACA,2BACA,2BACA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","sources":["webpack:///./extension/common/commands.js","webpack:///./extension/scripts/content_base.js","webpack:///./extension/common/constants.js","webpack:///./extension/common/background_constants.js","webpack:///./extension/common/webextension.js","webpack:///./extension/common/sma_variables.js","webpack:///./extension/common/annotation_variables.js","webpack:///./extension/common/cache_store_variables.js","webpack:///./extension/common/tab_data.js","webpack:///./extension/background/dispatchers/native/native_settings.js","webpack:///./extension/background/background_globals.js","webpack:///./extension/ui/foreground/foreground_globals.js","webpack:///./extension/common/logger.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/globals.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/resource_manager.js","webpack:///./extension/common/background_common.js","webpack:///./extension/common/url_parser.js","webpack:///./extension/common/handle_promise.js","webpack:///./extension/common/background_ipc.js","webpack:///./extension/scripts/content_aps_observer.js"],"sourcesContent":["/**\r\n * The command ids supported for IPC between content process and chrome/background process.\r\n */\r\n\r\nexport const BackgroundCommands = {\r\n  // Generic Commands\r\n  CACHE_STORE: 'CACHE_STORE',\r\n  CONTENT_HANDLER: 'CONTENT_HANDLER',\r\n  EXECUTE_COMMAND: 'EXECUTE_COMMAND',\r\n  FOCUS_OR_CREATE_TAB: 'FOCUS_OR_CREATE_TAB',\r\n  GET_BK_GLOBALS: 'GET_BK_GLOBALS',\r\n  GET_EXTENSION_STATUS: 'GET_EXTENSION_STATUS',\r\n  GET_TAB_DATA: 'GET_TAB_DATA',\r\n  TI_REQUEST: 'TI_REQUEST',\r\n  INSTALL_EXTENSION: 'INSTALL_EXTENSION',\r\n  PLACEHOLDER_TEXT: 'PLACEHOLDER_TEXT',\r\n  REMOVE_TAB: 'REMOVE_TAB',\r\n  SEND_TELEMETRY: 'SEND_TELEMETRY',\r\n  SET_VIEWPORT: 'SET_VIEWPORT',\r\n  WHITELIST: 'WHITELIST',\r\n  RESET_NATIVE_SETTING: 'RESET_NATIVE_SETTING',\r\n  UPDATE_BK_NATIVE_SETTINGS: 'UPDATE_BK_NATIVE_SETTINGS',\r\n\r\n  // Options Menu / Settings Page\r\n  SHOW_SIDEBAR_MAIN: 'SHOW_SIDEBAR_MAIN',\r\n  GET_POPUP_DATA: 'GET_POPUP_DATA',\r\n  GET_SETTINGS_DATA: 'GET_SETTINGS_DATA',\r\n  RESET_SETTINGS: 'RESET_SETTINGS',\r\n\r\n  // Autoplay video\r\n  AUTO_RUN_VIDEO_SITE: 'AUTO_RUN_VIDEO_SITE',\r\n  GET_CLICK_EVENT_TIME: 'GET_CLICK_EVENT_TIME',\r\n  SAVE_CLICK_EVENT_TIME: 'SAVE_CLICK_EVENT_TIME',\r\n\r\n  // Typosquatting\r\n  GET_TYPOSQUATTING_DATA: 'GET_TYPOSQUATTING_DATA',\r\n\r\n  // Block Page / Iframe / Site Report\r\n  IS_FRAME_BLOCKED: 'IS_FRAME_BLOCKED',\r\n  IS_WHITELISTED: 'IS_WHITELISTED',\r\n  ANY_BLOCKED_IFRAMES: 'ANY_BLOCKED_IFRAMES',\r\n  ANY_BLOCKED_CRYPTOSCRIPTS: 'ANY_BLOCKED_CRYPTOSCRIPTS',\r\n  UNBLOCK_ALL_IFRAMES: 'UNBLOCK_ALL_IFRAMES',\r\n  VIEW_SITE_REPORT: 'VIEW_SITE_REPORT',\r\n\r\n  // Annotations\r\n  SEARCH_ANNOTATION: 'SEARCH_ANNOTATION',\r\n  UPDATE_ENGINE_STATS: 'UPDATE_ENGINE_STATS',\r\n\r\n  // SMA\r\n  SOCIAL_MEDIA_ANNOTATION: 'SOCIAL_MEDIA_ANNOTATION',\r\n\r\n  // RAT Detection\r\n  UPDATE_RAT_DETECTION_SHOWING_FLAG: 'UPDATE_RAT_DETECTION_SHOWING_FLAG',\r\n\r\n  // Search Suggestion\r\n  SEARCH_SUGGEST: 'SEARCH_SUGGEST',\r\n\r\n  // Form detection\r\n  SAVE_FORM_INFO: 'SAVE_FORM_INFO',\r\n  GET_FORM_INFO_CACHE: 'GET_FORM_INFO_CACHE',\r\n  CLEAR_FORM_INFO_CACHE: 'CLEAR_FORM_INFO_CACHE',\r\n  SAVE_MULTISTEP_LOGIN: 'SAVE_MULTISTEP_LOGIN',\r\n  GET_FD_WEIGHTS: 'GET_FD_WEIGHTS',\r\n  GET_FD_EXCEPTIONS: 'GET_FD_EXCEPTIONS',\r\n  GET_FD_CRF_PARAMS: 'GET_FD_CRF_PARAMS',\r\n\r\n  // DWS\r\n  CLEAR_CACHED_DWS_INFO: 'CLEAR_DWS_INFO',\r\n  GET_CACHED_DWS_INFO: 'GET_CACHED_DWS_INFO',\r\n  UPDATE_DWS_WHITELIST: 'UPDATE_DWS_WHITELIST',\r\n  LAUNCH_IDPS_LOGIN: 'LAUNCH_IDPS_LOGIN',\r\n  UPDATE_DWS_SHOWN: 'UPDATE_DWS_SHOWN',\r\n\r\n  // APS\r\n  GET_APS_DETAILS: 'GET_APS_DETAILS',\r\n  FORM_PRE_CHECK_PASSED: 'FORM_PRE_CHECK_PASSED',\r\n  SIGN_UP_FORM_DETECTED: 'SIGN_UP_FORM_DETECTED',\r\n\r\n  // Firefox Policy Consent\r\n  SET_FF_POLICY_COLLECTION: 'SET_FF_POLICY_COLLECTION',\r\n  SET_FF_POLICY_LAST_SHOWN: 'SET_FF_POLICY_LAST_SHOWN',\r\n};\r\n\r\nexport const ContentCommands = {\r\n  // Commands handled by iframes\r\n  UNBLOCK_IFRAME: 'UNBLOCK_IFRAME',\r\n\r\n  // Content UI Handler Commands\r\n  BALLOON_MESSAGE: 'BALLOON_MESSAGE',\r\n  PAGE_OVERLAY: 'PAGE_OVERLAY',\r\n  SIDEBAR: 'SIDEBAR',\r\n  TOPBAR: 'TOPBAR',\r\n\r\n  // Ping\r\n  PING_CONTENT_ANNOTATION: 'PING_CONTENT_ANNOTATION',\r\n  PING_CONTENT_RAT_DETECTION: 'PING_CONTENT_RAT_DETECTION',\r\n  PING_CONTENT_IFRAME_BANNER: 'PING_CONTENT_IFRAME_BANNER',\r\n  PING_CONTENT_AUTOPLAY_DETECTION: 'PING_CONTENT_AUTOPLAY_DETECTION',\r\n  PING_CONTENT_SIDEBAR_MAIN: 'PING_CONTENT_SIDEBAR_MAIN',\r\n  PING_CONTENT_FF_DL_OVERLAY: 'PING_CONTENT_FF_DL_OVERLAY',\r\n  PING_CONTENT_CRYPTO_BLOCK: 'PING_CONTENT_CRYPTO_BLOCK',\r\n  PING_CONTENT_FF_VIEWPORTS: 'PING_CONTENT_FF_VIEWPORTS',\r\n  PING_CONTENT_IDPS: 'PING_CONTENT_IDPS',\r\n  PING_CONTENT_APS_TOAST: 'PING_CONTENT_APS_TOAST',\r\n  PING_CONTENT_APS_BALLOON: 'PING_CONTENT_APS_BALLOON',\r\n  PING_CONTENT_APS_OBSERVER: 'PING_CONTENT_APS_OBSERVER',\r\n  PING_CONTENT_SITE_LISTENER: 'PING_CONTENT_SITE_LISTENER',\r\n  PING_IFRAME_FORM_CHECK: 'PING_IFRAME_FORM_CHECK',\r\n  PING_IFRAME_FORM_DETECTION: 'PING_IFRAME_FORM_DETECTION',\r\n  PING_IFRAME_BLOCK: 'PING_IFRAME_BLOCK',\r\n\r\n  // APS\r\n  APS_REGISTRATION_PAGE: 'APS_REGISTRATION_PAGE',\r\n\r\n  // Broadcast to foreground\r\n  BROADCAST_TO_FOREGROUND: 'BROADCAST_TO_FOREGROUND',\r\n\r\n  // Annotation Journey Toast\r\n  TRIGGER_AJ_TOAST: 'TRIGGER_AJ_TOAST'\r\n};\r\n\r\n// **********************************************\r\n// SUB-COMMANDS USED BY CONTENT HANDLER COMMANDS:\r\n// **********************************************\r\n\r\nexport const SideBarCommands = {\r\n  MAIN: 'MAIN',\r\n  RELOAD: 'RELOAD',\r\n  SMA: 'SMA',\r\n  RAT_DETECTION: 'RAT_DETECTION',\r\n};\r\n\r\nexport const BalloonMessageCommands = {\r\n  ADVANCED_PROTECTION_SIGNAL: 'ADVANCED_PROTECTION_SIGNAL',\r\n  ADVANCED_PROTECTION_SIGNAL_TOAST: 'ADVANCED_PROTECTION_SIGNAL_TOAST',\r\n  DWS: 'DWS',\r\n};\r\n\r\nexport const TopBarCommands = {\r\n  CRYPTO_BLOCK: 'CRYPTO_BLOCK',\r\n  IFRAME_BLOCK: 'IFRAME_BLOCK',\r\n  TRIGGER_ALLOW: 'TRIGGER_ALLOW',\r\n};\r\n\r\nexport const PageOverlayCommands = {\r\n  SEARCH_EXTENSION_OVERLAY: 'SEARCH_EXTENSION_OVERLAY',\r\n  FINISH_DOWNLOAD: 'FINISH_DOWNLOAD',\r\n};\r\n\r\nexport const ExternalCommands = {\r\n  // Legacy\r\n  PING: 0,\r\n  DISCONNECT_NATIVE: 1,\r\n  SET_PROPERTY_EX: 2, //  For automation\r\n  SET_PROPERTY: 3, // For automation\r\n  GET_PROPERTY: 4, // For automation\r\n  CLEAR_GTI_CACHE: 5, // For automation\r\n  RESET_CRYPTO: 6, // For automation\r\n  CLEAN_TYPOSQUATING_WHITELIST: 7, // For automation\r\n  CLEAR_TYPOSQUATING_CACHE: 8, // For automation\r\n  CLEAN_CRYPTO_WHITELIST: 10, // For automation\r\n  CLEAN_RAT_WHITELIST: 12, // For automation\r\n  CLEAN_RAT_CACHE: 13, // For automation\r\n  REPLACE_TRUSTED_DOMAIN: 15, // For automation\r\n  VERIFY_GTI_REQUEST: 17, // For automation\r\n  VERIFY_TYPOSQUAT_SERVER: 18, // For watchdog automation\r\n  GET_ALL_WA_SETTINGS: 19, // For automation extension\r\n  SET_STORAGE_PROPERTY: 20, // Set a local storage property within WA\r\n  GET_STORAGE_PROPERTY: 21, // Get a local storage property within WA (for automation)\r\n  REINIT_SCHEDULED_TASKS: 22,\r\n  OPEN_SETTINGS: 23, // For personal protection hub\r\n  OPEN_ACTION_PANEL: 24, // For personal protection hub\r\n  GET_MEMORY_FOOTPRINT: 26, // For automation, endurance run\r\n  ENDURANCE_TEST_RESET: 27, // For automation, endurance run\r\n  FORM_DETECTION_RESULT: 28,\r\n  SHOW_UNUSED_SELECTORS: 29, // For automation\r\n  SET_MTI_GLOBALS: 30\r\n};\r\n\r\nexport const ExternalResponse = {\r\n  PONG: 0,\r\n};\r\n","export default class ScriptBase\r\n{\r\n  constructor(pingCommand)\r\n  {\r\n    this.pingCommand = pingCommand;\r\n    this.basePingListener();\r\n  }\r\n\r\n  basePingListener(callback = null)\r\n  {\r\n    chrome.runtime.onMessage.addListener((request, sender, responseCb) =>\r\n    {\r\n      if (sender.id !== chrome.runtime.id)\r\n      {\r\n        return;\r\n      }\r\n\r\n      const { command } = request;\r\n      if (command === this.pingCommand)\r\n      {\r\n        responseCb({ content: true });\r\n        if (typeof callback === 'function') callback();\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\r\n * The different webpage/url states that exists within WebAdvisor\r\n */\r\nexport const BlockState = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  TYPOSQUATTING: 5,\r\n  PHISHING: 6,\r\n  * [Symbol.iterator]() // Create an iterable that returns all the \"bad\" states\r\n  {\r\n    for (const prop of Object.keys(this))\r\n    {\r\n      if (prop !== 'GREEN' && prop !== 'UNKNOWN')\r\n      {\r\n        yield this[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * The browsers that WebAdvisor supports\r\n */\r\nexport const BrowserType = {\r\n  UNKNOWN: -1,\r\n  FIREFOX: 1,\r\n  CHROME: 2,\r\n  EDGE: 3\r\n};\r\n\r\n/**\r\n * The default settings for extension. These settings are overrided at build time\r\n */\r\nexport const BuildSettings = {\r\n  /* eslint-disable no-undef */\r\n  BROWSER_TYPE: WEBPACK_BROWSER_TYPE,\r\n  DEBUG_MODE: WEBPACK_DEBUG_MODE,\r\n  EXTENSION_VERSION: WEBPACK_EXTN_VERSION,\r\n  LOG_LEVEL: WEBPACK_LOG_LEVEL,\r\n  ENGINES_VERSION: WEBPACK_ENGINES_VERSION,\r\n  YEAR: WEBPACK_YEAR,\r\n  /* eslint-enable no-undef */\r\n};\r\n\r\n/**\r\n * Values to let the native know which Block Page type was shown\r\n */\r\nexport const WPSBlockPageType = {\r\n  Red: 1,\r\n  Yellow: 2,\r\n  Phishing: 3,\r\n  Typoquatting: 4,\r\n  iFrame: 5,\r\n  Crypto: 6,\r\n};\r\n\r\n/**\r\n * Every possible color status shown on WebAdvisor\r\n */\r\nexport const Color = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  DISABLED: 5,\r\n};\r\n\r\n/**\r\n * The different commands that can be executed in the application\r\n */\r\nexport const ExecuteCommands = {\r\n  RAISE_NEW_TAB_EVENT: 3,\r\n  UPDATE_CACHE_STATS: 4 // deprecated.\r\n};\r\n\r\n/**\r\n * The corresponding color values for browser action icon\r\n */\r\nexport const BrowseActionColors = {\r\n  [Color.GREEN]: 'GREEN',\r\n  [Color.YELLOW]: 'YELLOW',\r\n  [Color.RED]: 'RED',\r\n  [Color.UNKNOWN]: 'WHITE',\r\n  [Color.DISABLED]: 'DISABLED',\r\n};\r\n\r\n/**\r\n * The score value ranges that determine the outcome of a webpage's safety\r\n */\r\nexport const Score = {\r\n  CLEAN: 70, // Green\r\n  UNVERIFIED: 30, // Yellow\r\n  DIRTY: 1, // Red\r\n}; // Default Grey (0)\r\n\r\n/**\r\n * Constructs a new object with the object key and values swapped.\r\n * @param   {Object} original - The original object to swap the key and values\r\n * @returns {Object} - The new constructed object with the key and values swapped\r\n */\r\nexport const swapObjectPropertyAndValues = (original) =>\r\n{\r\n  const swapped = {};\r\n\r\n  Object.keys(original).forEach((prop) =>\r\n  {\r\n    swapped[original[prop]] = prop;\r\n  });\r\n\r\n  return swapped;\r\n};\r\n\r\nexport const SEARCH_EXTENSION_DOWNLOAD_URLS = {\r\n  FF: 'https://sadownload.mcafee.com/products/SA/Win/xpi/searchextension/searchextension.xpi',\r\n};\r\n\r\nexport const SEARCH_EXTENSION_STORE_URLS = {\r\n  CH: 'https://chrome.google.com/webstore/detail/mcafee%C2%AE-secure-search/enppghjcblldgigemljohkgpcompnjgh',\r\n  ED: 'https://microsoftedge.microsoft.com/addons/detail/dbghilognjpbmkdcpjgodiieiflmlaeb'\r\n};\r\n\r\n// generate a range of numbers for using in WhitelistedKeys' codes\r\nexport const KEY_CODES_RANGE = (start, end) => Array.from(Array(end + 1).keys()).slice(start);\r\n\r\nexport const SEARCH_URL = {\r\n  YAHOO: 'https://search.yahoo.com/search?fr=mcafee&type=C040US0D19700101&p=',\r\n  BING: 'https://www.bing.com/search?partnercode=MC99&q=',\r\n};\r\n","export const BackgroundConstants = {\r\n  MAX_CACHE_RECORDS: 1000,\r\n  MAX_RESERVED_CALLBACK_ID: 5,\r\n  PHISHING_CATEGORY: 'ph',\r\n  SITE_ADVISOR_URL: 'www.siteadvisor.com/',\r\n  GTI_SERVER: 'https://webadvisorc.rest.gti.mcafee.com/1',\r\n  TYPOSQUATTING_SERVER: 'https://mip.api.mcafeewebadvisor.com/v1/typosquatting?',\r\n  ENGINE_VERSION_URL: 'https://sadownload.mcafee.com/products/SA/Win/extensions/engines/update.json',\r\n  HTI_SERVER: 'https://threat.api.mcafee.com/',\r\n};\r\n\r\n// Add 'watlab1.mcafee.int' to the list for testing.\r\nexport const TrustedDomains = new Set([\r\n  'www.mcafee.com',\r\n]);\r\n\r\nexport const CryptoBlacklist = [\r\n  'wss://*.gasolina.ml/*',\r\n  '*://kissdoujin.com/Content/js/c-hive.js*',\r\n  'wss://*.sen-to-zdrowie.ml/*',\r\n  '*://cookiescript.info/libs/*',\r\n  '*://rocks.io/assets/*',\r\n  '*://coin-have.com/c/*',\r\n  '*://coinnebula.com/lib/*',\r\n  'wss://*.coin-have.com/',\r\n  'ws://digger.cryptobara.com/*',\r\n  'ws://*.webminepool.tk/*',\r\n  '*://*.lewd.ninja/static/m.js*',\r\n  '*://tokyodrift.ga/dropyoulike/a-o/*',\r\n  '*://*.2giga.link/hive/lib/*',\r\n  '*://papoto.com/lib/*',\r\n  '*://load.jsecoin.com/*',\r\n  'ws://*.1q2w3.fun/*',\r\n  '*://*/*plugins/ajcryptominer/assets/*',\r\n  '*://monerominer.rocks/miner.php*',\r\n  '*://minemytraffic.com/*',\r\n  '*://*.monerise.com/core/*',\r\n  '*://*.cookiescript.info/libs/*',\r\n  'ws://hive.tubetitties.com/*',\r\n  'wss://*.freecontent.racing/*',\r\n  'wss://*.hodling.faith/*',\r\n  'ws://gtg02.bestsecurepractice.com/proxy',\r\n  '*://cryptoloot.pro/lib/*',\r\n  '*://lmodr.biz/*',\r\n  '*://*.webminepool.com/lib/base.js',\r\n  'ws://*.sen-to-zdrowie.ml/*',\r\n  'ws://*.morningdigit.com/*',\r\n  '*://mine.nahnoji.cz/*',\r\n  '*://*.minescripts.info/*',\r\n  '*://jsecoin.com/server*',\r\n  '*://coinhive.com/lib*',\r\n  'wss://*.webminepool.tk/*',\r\n  'ws://*.monerise.com/proxy/*',\r\n  '*://kisshentai.net/Content/js/c-hive.js*',\r\n  '*://mataharirama.xyz/*',\r\n  '*://*.coinpirate.cf/*',\r\n  'ws://*.playerassets.info/*',\r\n  'wss://*.1q2w3.fun/*',\r\n  '*://*.1q2w3.fun/*',\r\n  '*://anime.reactor.cc/js/ch/cryptonight.wasm*',\r\n  '*://webmine.cz/miner*',\r\n  'wss://ws.l33tsite.info/*',\r\n  '*://coinhive.com/captcha*',\r\n  'wss://www.mutuza.win/proxy',\r\n  '*://*.morningdigit.com/*',\r\n  'ws://*.host.d-ns.ga/*',\r\n  '*://*.doubleclick5.xyz/*',\r\n  '*://miner.pr0gramm.com/xmr.min.js*',\r\n  '*://*.freecontent.bid/*',\r\n  'ws://lewd.ninja/comics/*',\r\n  'wss://*.monerise.com:9333/proxy/*',\r\n  '*://*.webminepool.com/lib/captcha.js',\r\n  '*://coinerra.com/lib/*',\r\n  '*://*.playerassets.info/*',\r\n  'wss://*.webmine.pro/*',\r\n  'wss://lewd.ninja/comics/*',\r\n  '*://*.doubleclick1.xyz/*',\r\n  'ws://*.freecontent.racing/*',\r\n  '*://*.googleanalytcs.com/*',\r\n  'wss://*.coinnebula.com/proxy*',\r\n  'ws://*.monerise.com:9333/proxy/*',\r\n  'ws://*.freecontent.loan/*',\r\n  '*://party-nngvitbizn.now.sh/*',\r\n  'wss://api.l33tsite.info/*',\r\n  '*://coinlab.biz/lib/coinlab.js*',\r\n  'wss://*.monerise.com/proxy/*',\r\n  'ws://www.mutuza.win/proxy',\r\n  '*://jscdndel.com/content/vidm.min.js*',\r\n  '*://listat.biz/*',\r\n  '*://minecrunch.co/web/*',\r\n  'ws://*.chainblock.science/*',\r\n  '*://baiduccdn1.com/lib/*',\r\n  '*://*.mutuza.win/worker.js',\r\n  '*://*.load.jsecoin.com/*',\r\n  '*://ppoi.org/lib/*',\r\n  'wss://*.chainblock.science/*',\r\n  'wss://*.crypto-loot.com/proxy*',\r\n  'wss://gtg02.bestsecurepractice.com/proxy',\r\n  'wss://*.coinhive.com/proxy*',\r\n  '*://coin-hive.com/captcha*',\r\n  '*://jsccnn.com/content/vidm.min.js*',\r\n  '*://monerominer.rocks/scripts/miner.js*',\r\n  '*://*.jsecoin.com/server*',\r\n  '*://server.jsecoin.com/*',\r\n  'wss://*.coin-hive.com/proxy*',\r\n  '*://*.doubleclick4.xyz/*',\r\n  '*://miner.cryptobara.com/client/*',\r\n  '*://*.rocks.io/assets/*',\r\n  '*://*.ppoi.org/lib/*',\r\n  '*://you.tubetitties.com/worker.js*',\r\n  'wss://*.googleanalytcs.com/*',\r\n  'wss://hive.tubetitties.com/*',\r\n  '*://static.reasedoper.pw/*',\r\n  '*://*.ppoi.org/token/*',\r\n  'ws://*.webmine.pro/*',\r\n  '*://you.tubetitties.com/hash.wasm*',\r\n  '*://*.doubleclick3.xyz/*',\r\n  '*://*.turnsocial.com/m.js',\r\n  'ws://*.hodling.faith/*',\r\n  'wss://*.morningdigit.com/*',\r\n  '*://*.ad-miner.com/lib/*',\r\n  'wss://*.2giga.link/wproxy*',\r\n  'ws://*.googleanalytcs.com/*',\r\n  '*://*.doubleclick6.xyz/*',\r\n  'ws://turnsocial.now.sh/*',\r\n  '*://cdn.cloudcoins.co/javascript/cloudcoins.min.js*',\r\n  '*://joyreactor.cc/ws/ch/*',\r\n  '*://minero.pw/miner.min.js*',\r\n  '*://*.webmine.pro/*',\r\n  '*://punchsub.net/chm.js',\r\n  'wss://mine.nahnoji.cz/*',\r\n  'wss://mine.torrent.pw/*',\r\n  '*://*.mutuza.win/lib/*',\r\n  '*://*.kickass.cd/power2/m.js',\r\n  'ws://*.cpu2cash.link/*',\r\n  '*://*.server.jsecoin.com/*',\r\n  '*://*.mutuza.win/processor.js',\r\n  'wss://turnsocial.now.sh/*',\r\n  '*://kiwifarms.net/js/Jawsh/xmr/xmr.min.js*',\r\n  '*://*.rocks.io/proxy*',\r\n  '*://crypto-loot.com/lib*',\r\n  '*://*.chmproxy.bid/lib/*',\r\n  'ws://*.gasolina.ml/*',\r\n  '*://*.stackpathdns.com/assets/javascript/cr.js',\r\n  '*://*.coinblind.com/lib/*',\r\n  '*://miner.pr0gramm.com/pm.min.js*',\r\n  '*://*.bewhoyouare.gq/*',\r\n  'wss://*.zlx.com.br/proxy*',\r\n  '*://a-o.ninja/apk-AO/kingofthenorth/*',\r\n  '*://ad-miner.com/lib/*',\r\n  '*://*.webminepool.com/api/*',\r\n  '*://*.cpu2cash.link/*',\r\n  '*://*.hemnes.win/*',\r\n  'wss://*.cpu2cash.link/*',\r\n  'ws://*.coinpirate.cf/*',\r\n  'ws://ws.l33tsite.info/*',\r\n  '*://digger.cryptobara.com/client/*',\r\n  '*://kickass.cd/m.js*',\r\n  'ws://*.zlx.com.br/proxy*',\r\n  '*://*.doubleclick2.xyz/*',\r\n  '*://*.amazonaws.com/doubleclick13/*',\r\n  'wss://*.freecontent.loan/*',\r\n  '*://*.host.d-ns.ga/*',\r\n  '*://*.candid.zone/youtube.com/*',\r\n  'ws://api.l33tsite.info/*',\r\n  '*://gtg2.bestsecurepractice.com/lib/*',\r\n  'wss://*.host.d-ns.ga/*',\r\n  '*://coin-hive.com/lib*',\r\n  'ws://mine.nahnoji.cz/*',\r\n  'wss://*.playerassets.info/*',\r\n  '*://*.afminer.com/code/*',\r\n  'wss://*.coinpirate.cf/*',\r\n  '*://cookiescriptcdn.pro/libs/*',\r\n  '*://*.goredirect.party/assets/*',\r\n  '*://*.ZLX.COM.BR/assets/min.js*',\r\n  '*://*.ZLX.COM.BR/assets/playermon.js*',\r\n  '*://p.hemnes.win/lib/*',\r\n  '*://gtg02.bestsecurepractice.com/proxy2/*',\r\n  '*://gtg02.bestsecurepractice.com/meri.js',\r\n  '*://gtg02.bestsecurepractice.com/lv.js',\r\n  '*://gtg02.bestsecurepractice.com/worker.js',\r\n  '*://gtg02.bestsecurepractice.com/processor.js',\r\n  '*://gtg02.bestsecurepractice.com/demo.html',\r\n  '*://*.turnsocial.com/c.wasm*',\r\n  '*://*.turnsocial.com/m.js*',\r\n  '*://cdn.minescripts.info/c/*',\r\n  '*://tokyodrift.ga/dropyoulike/backup/c.wasm*',\r\n  '*://punchsub.net/chm2.js',\r\n  '*://*.kickass.cd/webmr4.js',\r\n  '*://*.kickass.cd/m.js',\r\n  'wss://*.authedmine.com/proxy'\r\n];\r\n\r\nexport const RatBlacklist = [\r\n  {\r\n    domain: 'www.beamyourscreen.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.connectwise.com',\r\n    urls: [\r\n      'www.connectwise.com/platform/unified-management/control'\r\n    ],\r\n  },\r\n  {\r\n    domain: 'get.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'fastsupport.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.join.me',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.de',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.securelink.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'join.zoho.com',\r\n    urls: [],\r\n  }\r\n];\r\n\r\nexport const ApsUrlList = {\r\n  shopping:\r\n  {\r\n    'www.amazon.com':\r\n    {\r\n      paths: ['buy/payselect/handlers', 'buy/addressselect/handlers']\r\n    }\r\n  },\r\n  email:\r\n  {\r\n    'mail.google.com/mail':\r\n    {\r\n      selector: 'table[role=presentation] > tr div[data-message-id] a'\r\n    },\r\n    'outlook.live.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office365.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'mail.yahoo.com':\r\n    {\r\n      selector: 'div[role=main] ul li a'\r\n    },\r\n  }\r\n};\r\n","export const extension = WEBPACK_BROWSER_NAME === 'chrome' || WEBPACK_BROWSER_NAME === 'edge' ? chrome : browser; // eslint-disable-line no-undef\r\n","export const SocialMediaTypes = {\r\n  NONE: 0,\r\n  LINKEDIN: 1,\r\n  INSTAGRAM: 2,\r\n  YOUTUBE: 4,\r\n  FACEBOOK: 8,\r\n  TWITTER: 16,\r\n  REDDIT: 32\r\n};\r\n\r\n// Sum of all Social Media Types\r\nexport const SocialMediaAllTypes = Object.values(SocialMediaTypes).reduce((sum, value) => sum + value);\r\n\r\nexport const SocialMediaActions = {\r\n  TOGGLE_ON: 'TOGGLE_ON',\r\n  TOGGLE_OFF: 'TOGGLE_OFF',\r\n  ANNOTATION_ENABLE_ALL: 'ANNOTATION_ENABLE_ALL',\r\n  ANNOTATION_DISABLE_ALL: 'ANNOTATION_DISABLE_ALL',\r\n  ANNOTATION_ENABLE: 'ANNOTATION_ENABLE',\r\n  ANNOTATION_DISABLE: 'ANNOTATION_DISABLE',\r\n  GET: 'GET',\r\n};\r\n","export const SearchAnnotationActions = {\r\n  GET: 'GET',\r\n  SET: 'SET',\r\n};\r\n\r\nexport const AnnotationOptions = {\r\n  NONE: 'NONE',\r\n  ONLY_SECURE_SEARCH: 'ONLY_SECURE_SEARCH',\r\n  ALL: 'ALL',\r\n  * [Symbol.iterator]() // Override the iterable protocol to allow spreading of keys (...AnnotationOptions)\r\n  {\r\n    for (const key of Object.keys(this))\r\n    {\r\n      yield key;\r\n    }\r\n  }\r\n};\r\n\r\n// DO NOT CHANGE the number for the search engine types\r\n// Some of these numbers are mapped to native's search providers\r\nexport const SearchEngineTypes = {\r\n  UNKNOWN: 0,\r\n  // Search engine annotations\r\n  GOOGLE: 1,\r\n  YAHOO: 2,\r\n  AOL: 3,\r\n  ASK: 4,\r\n  UOL: 5,\r\n  GOO: 6,\r\n  MYWAY: 7,\r\n  TERRA: 8,\r\n  WEB: 9,\r\n  BIGLOBE: 10,\r\n  GMX: 11,\r\n  EXCITE: 12,\r\n  SKY: 13,\r\n  NAVER: 14,\r\n  NIFTY: 15,\r\n  RAKUTEN: 16,\r\n  IXQUICK: 17,\r\n  XFINITY: 18,\r\n  SOGOU: 19,\r\n  DOGPILE: 20,\r\n  SEARCH: 21,\r\n  WEBCRAWLER: 22,\r\n  BING: 23,\r\n  INFO: 24,\r\n  YANDEX: 25,\r\n  YIPPY: 26, // No longer supported\r\n  WOW: 27,\r\n  HAOSO: 28,\r\n  DUCKDUCKGO: 30,\r\n  ONESEARCH: 31,\r\n  // Social media annotations\r\n  LINKEDIN: 100,\r\n  FACEBOOK: 101,\r\n  YOUTUBE: 102,\r\n  INSTAGRAM: 103,\r\n  REDDIT: 104,\r\n  TWITTER: 105,\r\n};\r\n\r\nexport const EngineType = {\r\n  SEARCH: 0,\r\n  SOCIALMEDIA: 1,\r\n};\r\n","import { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\n\r\nconst { NONE, ...NonZeroSocialMediaTypes } = SocialMediaTypes;\r\n\r\nexport const CacheStoreActions = {\r\n  SET: 'SET',\r\n  GET: 'GET',\r\n  CLEAR: 'CLEAR',\r\n};\r\n\r\n// All keys must be same as value\r\n// Stored in browser storage\r\nexport const LocalStorageVariables = {\r\n  // Number of times the first variant of yellow block page sidebar has been shown\r\n  BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Did user accept SS in the past\r\n  // Sidebar Action Panels related\r\n  BLOCK_PAGE_RED_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_RED_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Whitelist related\r\n  BLOCK_PAGE_WHITELIST: {\r\n    name: 'BLOCK_PAGE_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Number of times the first variant of red block page sidebar has been shown\r\n  BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // blockpage whitelisted sites\r\n  CRYPTO_WHITELIST: {\r\n    name: 'CRYPTO_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Telemetry related\r\n  ENGINE_DOWNLOAD_TASK: {\r\n    name: 'ENGINE_DOWNLOAD_TASK',\r\n    type: 'object'\r\n  },\r\n  // Engine JSON\r\n  ENGINES: {\r\n    name: 'ENGINES',\r\n    type: 'object'\r\n  },\r\n  ENGINES_FUTURE_TIME: { // TODO: Might not need - not being used\r\n    name: 'ENGINES_FUTURE_TIME',\r\n    type: 'object'\r\n  },\r\n  ENGINES_VERSION: {\r\n    name: 'ENGINES_VERSION',\r\n    type: 'string'\r\n  },\r\n  EXTENSION_LOGGING: {\r\n    name: 'EXTENSION_LOGGING',\r\n    options: [0, 1, 2, 3, 4],\r\n    type: 'number'\r\n  },\r\n  USE_NATIVE_LOGGER: {\r\n    name: 'USE_NATIVE_LOGGER',\r\n    type: 'boolean'\r\n  },\r\n  EXTN_UUID2: {\r\n    name: 'EXTN_UUID2',\r\n    type: 'string'\r\n  },\r\n\r\n  IFRAME_BLOCK_FIRST_TIME: {\r\n    name: 'IFRAME_BLOCK_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  LAST_HEARTBEAT_SENT: { // TODO: Might not need - not being used\r\n    name: 'LAST_HEARTBEAT_SENT',\r\n    type: 'object'\r\n  },\r\n  POPUP_STATS: {\r\n    name: 'POPUP_STATS',\r\n    type: 'object'\r\n  },\r\n  POST_INSTALLATION_PAGE_SHOWED: { // TODO: Might not need - not being used\r\n    name: 'POST_INSTALLATION_PAGE_SHOWED',\r\n    type: 'object'\r\n  },\r\n  RAT_DETECTION_WHITELIST: {\r\n    name: 'RAT_DETECTION_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  SEARCH_ANNOTATION_OPTION: {\r\n    name: 'SEARCH_ANNOTATION_OPTION',\r\n    options: [...AnnotationOptions],\r\n    type: 'string'\r\n  },\r\n  // Used as a flag to show SMA Notification for the first time only\r\n  SMA_ANNOTATION_OPTIONS: {\r\n    name: 'SMA_ANNOTATION_OPTIONS',\r\n    options: { ...NonZeroSocialMediaTypes }, // Objects signify checkboxes\r\n    type: 'number'\r\n  },\r\n  // SMA options the user has selected\r\n  SMA_USER_TOGGLE: {\r\n    name: 'SMA_USER_TOGGLE',\r\n    type: 'boolean'\r\n  },\r\n  TELEMETRY_HEARTBEAT_TASK: { // TODO: Complete definition\r\n    name: 'TELEMETRY_HEARTBEAT_TASK',\r\n    type: 'object'\r\n  },\r\n  TYPOSQUATTING_WHITELIST: {\r\n    name: 'TYPOSQUATTING_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  CACHE_TYPOSQUATTING: {\r\n    name: 'CACHE_TYPOSQUATTING',\r\n    type: 'object'\r\n  },\r\n  CACHE_GTI: {\r\n    name: 'CACHE_GTI',\r\n    type: 'object'\r\n  },\r\n  CACHE_TAB_DATA: {\r\n    name: 'CACHE_TAB_DATA',\r\n    type: 'object'\r\n  },\r\n  // Flag to indicate whether to retrieve block page whitelist from native\r\n  USER_NATIVE_STATS: {\r\n    name: 'USER_NATIVE_STATS',\r\n    type: 'boolean'\r\n  },\r\n  // stats for what we have done for the user - shown on popup\r\n  WHITELIST_FLAG: {\r\n    name: 'WHITELIST_FLAG',\r\n    type: 'boolean'\r\n  },\r\n  // DWS Info\r\n  DWS_INFO: {\r\n    name: 'DWS_INFO',\r\n    type: 'object'\r\n  },\r\n  // list of emails already monitored or whitelisted by the user.\r\n  DWS_WHITELIST: {\r\n    name: 'DWS_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  DWS_UNIQUE_EMAILS: {\r\n    name: 'DWS_UNIQUE_EMAILS',\r\n    type: 'array'\r\n  },\r\n  APS_TOAST_FIRST_TIME: {\r\n    name: 'APS_TOAST_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  APS_FULL_MSG_SHOWN_ARRAY: {\r\n    name: 'APS_FULL_MSG_SHOWN_ARRAY',\r\n    type: 'array'\r\n  },\r\n  // Firefox user policy consent\r\n  FF_POLICY_PERSONAL_COLLECTION: {\r\n    name: 'FF_POLICY_PERSONAL_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_ACTIVITY_COLLECTION: {\r\n    name: 'FF_POLICY_ACTIVITY_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_LAST_SHOWN: {\r\n    name: 'FF_POLICY_LAST_SHOWN',\r\n    type: 'number'\r\n  },\r\n  // WA Affid\r\n  WA_AFFID: {\r\n    name: 'WA_AFFID',\r\n    type: 'number'\r\n  },\r\n  // APS TOGGLE SETTING\r\n  APS_TOGGLE_SETTING: {\r\n    name: 'APS_TOGGLE_SETTING',\r\n    type: 'boolean'\r\n  },\r\n  // ANNOTATION JOURNEY TOAST\r\n  AJ_TOAST: {\r\n    name: 'AJ_TOAST',\r\n    type: 'boolean'\r\n  },\r\n  AJ_APS_ENABLE: {\r\n    name: 'AJ_APS_ENABLE',\r\n    type: 'number'\r\n  },\r\n\r\n  HTI_THROTTLE: {\r\n    name: 'HTI_THROTTLE',\r\n    type: 'number'\r\n  },\r\n\r\n  IS_HTI: {\r\n    name: 'IS_HTI',\r\n    type: 'boolean'\r\n  },\r\n};\r\n\r\n// In memory only, not in browser storage, reset upon browser restart\r\nexport const CacheStorageVariables = {\r\n  // RAT Detection related:\r\n  RAT_DETECTION_SHOWING: {\r\n    name: 'RAT_DETECTION_SHOWING',\r\n    type: 'object'\r\n  },\r\n  // Form detection\r\n  FORM_INFO: {\r\n    name: 'FORM_INFO',\r\n    type: 'object'\r\n  },\r\n  SAVE_MULTI_STEP_LOGIN: {\r\n    name: 'SAVE_MULTI_STEP_LOGIN',\r\n    type: 'object'\r\n  },\r\n  APS_EMAIL_LINKS: {\r\n    name: 'APS_EMAIL_LINKS',\r\n    type: 'array'\r\n  },\r\n  WSS_EMAIL: {\r\n    name: 'WSS_EMAIL',\r\n    type: 'string'\r\n  }\r\n};\r\n","import { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n\r\n/**\r\n * Tab data class and it's helper functions\r\n */\r\nexport default class TabData\r\n{\r\n  // Values that will get reset everytime we nativagate to a new page\r\n  static getResetValues()\r\n  {\r\n    return { blockedIframes: [], cryptoBlockData: null, tabDomainTrusted: false };\r\n  }\r\n\r\n  static getDefaultValues()\r\n  {\r\n    return TabData.getResetValues();\r\n  }\r\n\r\n  reset(tabId)\r\n  {\r\n    this.update(tabId, TabData.getResetValues());\r\n  }\r\n\r\n  get(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    return cache[tabId] || TabData.getDefaultValues();\r\n  }\r\n\r\n  set(tabId, newTabData)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    cache[tabId] = newTabData;\r\n    BackgroundGlobals.cacheStore.set(LocalStorageVariables.CACHE_TAB_DATA.name, cache);\r\n  }\r\n\r\n  delete(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    delete (cache[tabId]);\r\n  }\r\n\r\n  update(tabId, newTabData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, ...newTabData });\r\n  }\r\n\r\n  setTabBlockPageData(tabId, blockPageData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, blockPageData });\r\n  }\r\n\r\n  addBlockedFrame(tabId, value)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes.push(value);\r\n  }\r\n\r\n  getBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    return currentTabData.blockedIframes;\r\n  }\r\n\r\n  resetBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes = [];\r\n  }\r\n}\r\n","import { BrowserType, BuildSettings } from '@extension/common/constants';\r\n\r\nclass NativeSettingsPreprocess\r\n{\r\n  static PreprocessSecureSearchRegEx(value)\r\n  {\r\n    return value.trim().split('\\n');\r\n  }\r\n\r\n  static getBrowserSuffix()\r\n  {\r\n    const BROWSER_SUFFIX = {\r\n      CH: '_ch',\r\n      FF: '_ff',\r\n      IE: '_ie',\r\n      EDGE: '_ed',\r\n    };\r\n\r\n    const { CH, FF, EDGE } = BROWSER_SUFFIX;\r\n    const suffixBrowserMap = {};\r\n    suffixBrowserMap[BrowserType.EDGE] = EDGE;\r\n    suffixBrowserMap[BrowserType.FIREFOX] = FF;\r\n    suffixBrowserMap[BrowserType.CHROME] = CH;\r\n\r\n    return suffixBrowserMap[BuildSettings.BROWSER_TYPE];\r\n  }\r\n}\r\n\r\nexport const SCOPE = {\r\n  SYSTEM: 0,\r\n  USER: 1,\r\n};\r\nconst { SYSTEM, USER } = SCOPE;\r\n\r\nexport const SETTINGS_TYPE = {\r\n  NONE: 0,\r\n  INT: 1,\r\n  INT64: 2,\r\n  BOOL: 3,\r\n  STRING: 4,\r\n};\r\n\r\nexport const NativeConstants = {\r\n  WEBBOOST_AUTO_PLAY_NOTIFICATION: 'AutoPlayNotificationRequired',\r\n  WEBBOOST_UPSELL_DISABLED: 'WBUpsellDisabled', // TODO: re-introduce for WB Upsell\r\n  USE_NATIVE_LOGGER: 'UseNativeLogger',\r\n};\r\n\r\n// For retrieving native settings just change the one json object below. Access the nativeSettings value as eg BkGlobals.nativeSettings.AFF_ID.value\r\nconst _browser = NativeSettingsPreprocess.getBrowserSuffix();\r\nexport const NativeSettings = {\r\n  // Dev\r\n  DEV_MODE: { scope: SYSTEM, name: 'dev_mode', value: false },\r\n\r\n  // Product\r\n  AFF_ID: { scope: SYSTEM, name: '*Affid', value: 0 },\r\n  BINARY_VERSION: { scope: SYSTEM, name: 'version', value: null },\r\n  EXTENSION_VERSION_CH: { scope: SYSTEM, name: 'ChromeExtVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_FF: { scope: SYSTEM, name: '*FirefoxXPIVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_ED: { scope: SYSTEM, name: 'EdgeExtVersion', value: '', writeOnly: true },\r\n\r\n  // Machine\r\n  BROWSER_TYPE: { scope: SYSTEM, name: 'browsertype', value: '', writeOnly: true },\r\n  USER_AGENT: { scope: SYSTEM, name: 'useragent', value: '', writeOnly: true },\r\n\r\n  // Secure Search\r\n  SUGGESTION_URL: { scope: SYSTEM, name: 'suggestion_url', value: '' },\r\n  SCRIPT_GENERATED_DEFAULT_SS_URL: { scope: USER, name: `SCRIPT_GENERATED_DEFAULT_SS_URL${_browser}`, value: '' },\r\n  SECURE_SEARCH_REGEXES: { scope: USER, name: 'SECURE_SEARCH_REGEXES', value: '', preprocess: NativeSettingsPreprocess.PreprocessSecureSearchRegEx },\r\n  SHOW_SEARCH_SETTINGS: { scope: SYSTEM, name: '*ShowSearchSettings', value: true },\r\n  SECURE_SEARCH_TOAST_STAMP: { scope: USER, name: `*SSDateStampShowedToast${_browser}`, value: 0 },\r\n  SECURE_SEARCH_ANNOTATION_ONLY: { scope: SYSTEM, name: '*OnlyShowAnnotationsOnSecureSearch', value: true },\r\n  SECURE_SEARCH_SHOW_ICONS: { scope: USER, name: '*Icons', value: true },\r\n  SECURE_SEARCH_CHOICE: { scope: USER, name: `*SSToastChoice${_browser}`, value: false },\r\n  SS_DEF: { scope: SYSTEM, name: `*SS_DEF${_browser}`, value: 0 },\r\n  ANNOTATIONS_CHOICE_EXPLICIT: { scope: SYSTEM, name: `*AnnotationsChoiceExplicit${_browser}`, value: false },\r\n  CURRENT_SAO_IN_EXTENSION: { scope: USER, name: `*CurrentSAOInExtension${_browser}`, value: '' },\r\n\r\n  // Firefox Toast\r\n  FF_EXTENSION_LAST_TOAST_TIME: { scope: USER, name: 'ff_extension_last_toast_time', value: 0, writeOnly: true },\r\n  FF_EXTENSION_TOAST_COUNT: { scope: USER, name: 'ff_extension_toast_count', value: 0, writeOnly: true },\r\n\r\n  // Checklist Settings\r\n  CHECKLIST_START_INGORE_DATE_AV: { scope: SYSTEM, name: 'startIgnoreDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_START_IGNORE_DATE_FW: { scope: SYSTEM, name: 'startIgnoreDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_IGNORE_DURACTION: { scope: SYSTEM, name: 'ignoreDuration', value: '14', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_AV: { scope: SYSTEM, name: 'fixGracePeriodStartDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_FW: { scope: SYSTEM, name: 'fixGracePeriodStartDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_DURATION: { scope: SYSTEM, name: 'fixGracePeriodDuration', value: '24', writeOnly: true },\r\n\r\n  // Crypto\r\n  CRYPTOJACKING_DISABLED: { scope: SYSTEM, name: 'CryptojackingDisabled', value: false },\r\n\r\n  // SMA\r\n  SMA_USER_TOGGLE: { scope: SYSTEM, name: `sma_user_toggle${_browser}`, value: false, writeOnly: true },\r\n  SMA_ANNOTATION_OPTIONS: { scope: SYSTEM, name: `sma_annotation_options${_browser}`, value: 0, writeOnly: true },\r\n\r\n  // Stats\r\n  PAGES_SCANNED: { scope: SYSTEM, name: '*CounterPagesScanned', value: 0 },\r\n  PAGES_BLOCKED: { scope: SYSTEM, name: '*CounterPagesBlocked', value: 0 },\r\n  DOWNLOADS_SCANNED: { scope: SYSTEM, name: '*CounterDownloadsScanned', value: 0 },\r\n  DOWNLOADS_BLOCKED: { scope: SYSTEM, name: '*CounterDownloadsBlocked', value: 0 },\r\n  CRYPTO_BLOCKED: { scope: SYSTEM, name: '*CounterCryptoJackingBlocked', value: 0 },\r\n\r\n  // Native Whitelist\r\n  BLOCKPAGE_WHITELIST: { scope: USER, name: '*WhiteList', value: '' },\r\n  TS_WHITELIST: { scope: USER, name: '*TListWhiteList', value: '' },\r\n\r\n  // GTI\r\n  CSP_ID_SETTING: { scope: SYSTEM, name: 'CSPIdValue', value: '__not_available__' },\r\n\r\n  // Uninstall URL\r\n  UNINSTALL_SURVEY_ENABLED: { scope: SYSTEM, name: 'uninstall_survey_enabled', value: false },\r\n  UNINSTALL_SURVEY_URL: { scope: SYSTEM, name: 'uninstall_survey_url', value: '' },\r\n\r\n  // RAT Detection\r\n  RAT_DETECTION_ENABLED: { scope: SYSTEM, name: 'rat_detection_enabled', value: true },\r\n\r\n  // IDPS - enum type (0 = feature turned off | 1 = feature partially on, only for sending telemetry | 2 = feature turned on completely)\r\n  IDPS_FEATURE_ENABLED: { scope: SYSTEM, name: 'idps_feature_enabled', value: 0 },\r\n\r\n  // Advanced Protection Signal\r\n  APS_COHORT: { scope: SYSTEM, name: 'aps_cohort', value: 0 },\r\n  APS_TOGGLE_SETTING: { scope: SYSTEM, name: 'aps_toggle_setting', value: true },\r\n\r\n  // Alternative triggers\r\n  ALT_TRIGGER: { scope: SYSTEM, name: 'alt_triggers_cohort', value: 0 },\r\n\r\n  // Form detection optimization feature\r\n  IFRAME_FORM_CHECK_ENABLED: { scope: SYSTEM, name: 'iframe_form_check_enabled', value: true },\r\n\r\n  ANNOTATION_JOURNEY_COHORT: { scope: SYSTEM, name: `annotation_journey_cohort${_browser}`, value: 0 },\r\n  ANNOTATION_JOURNEY_TOAST: { scope: USER, name: `aj_toast${_browser}`, value: null },\r\n\r\n  // The throttle percentage for extension\r\n  HTI_THROTTLE: { scope: SYSTEM, name: 'hti_throttle', value: 0 },\r\n  MTI_CLIENT_ID: { scope: SYSTEM, name: 'gti_client_id', value: '' },\r\n};\r\n","// Background\r\n\r\nimport TabData from '@extension/common/tab_data';\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { BackgroundConstants, CryptoBlacklist, TrustedDomains, RatBlacklist, ApsUrlList } from '@extension/common/background_constants';\r\nimport { NativeSettings } from '@extension/background/dispatchers/native/native_settings';\r\n\r\nexport const BackgroundGlobals = {\r\n  // This flag is set to false by automation to avoid isTrusted check in shadowDOM.\r\n  // Since WA use custom shadowDOM access in automation without using Selenium, isTrusted is false\r\n  // hence for tests to succeed automation will set this flag to false before running tests.\r\n  isTrustCheckRequired: true,\r\n  ExtensionTelemetryUrl: null,\r\n  scheduleManager: null,\r\n  schedules: null,\r\n  isNativeConnected: true,\r\n  telemetryEngine: null,\r\n  postInstallationPage: 'https://www.mcafee.com/consumer/v/wa-how.html',\r\n  listenerManager: null,\r\n  firefoxInternalUUID: '',\r\n  shadowMode: 'closed',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  cacheStore: null,\r\n  ffViewports: null,\r\n  garbageCollector: null,\r\n  typoCache: null,\r\n  logger: null,\r\n  loglevel: null,\r\n  messageDispatcher: null, // The message handler for native messaging\r\n  port: null,\r\n  tabData: new TabData(), // Information about all the tab\r\n  tabIdToLastClickTime: new Map(),\r\n  useNativeLogger: false,\r\n  wasm: null, // webassembly module\r\n  userAgentInBase64: null,\r\n  typoSquattingServer: BackgroundConstants.TYPOSQUATTING_SERVER,\r\n  tldParser: null,\r\n  cryptoBlacklist: CryptoBlacklist,\r\n  trustedDomains: TrustedDomains,\r\n  nativeSettings: NativeSettings,\r\n  searchSuggest: null,\r\n  ratBlacklist: RatBlacklist,\r\n  updatedByNative: false, // flag indicate whether these global variables have been updated by native\r\n\r\n  // WSS\r\n  wssMessageDispatcher: null, // The message handler for WSS native messaging\r\n  wssNativeClient: null,\r\n  WSS_INSTALLED: false,\r\n  isWPSInstalled: false,\r\n\r\n  // Engines JSON\r\n  searchEngines: null,\r\n  enginesVersionUrl: BackgroundConstants.ENGINE_VERSION_URL,\r\n  engineCheckInterval: 1000 * 60 * 60 * 24,\r\n  ENGINES_VERSION: BuildSettings.ENGINES_VERSION,\r\n\r\n  // Feature flags\r\n  AUTO_PLAY_NOTIFICATION_ENABLED: false,\r\n\r\n  // Automation specific flags\r\n  ALLOW_LOCALHOST: false,\r\n\r\n  // Form detection\r\n  IDPS_AUTH_URL: 'https://csptoken.ccs.mcafee.com/auth/token',\r\n  IDPS_BREACH_COUNT_URL: 'https://identity.unifiedapis.mcafee.com/breach/v1/BreachCount',\r\n  IDPS_CSP_CLIENT_ID: null,\r\n  IDPS_IS_ENTITLED: false,\r\n  IDPS_PROVISION_ID: null,\r\n  IDPS_LOGIN_DOMAIN: 'https://protection.mcafee.com',\r\n\r\n  // Unified Auth\r\n  UA_CLIENT: null,\r\n\r\n  // Typosquatting cache variables\r\n  TYPOSQUATTING_MAX_CACHE: 100,\r\n  TYPOSQUATTING_EXPIRY: 1000 * 60 * 60 * 24 * 30, // 1 month\r\n\r\n  // AMWA-11850 CPSIR-83 - Secret code that is appended to image requests to not allow external access to image files\r\n  WA_IMAGE_SECRET: null,\r\n\r\n  // Advanced Protection Signal URLs\r\n  apsUrlList: ApsUrlList,\r\n  apsAnimationTimeout: 5000,\r\n\r\n  downloadUrls: new Set(),\r\n\r\n  // Small Business Integration\r\n  wpsRequestedSettings: new Set(['SMA_USER_TOGGLE', 'SEARCH_ANNOTATION_OPTION', 'SMA_ANNOTATION_OPTIONS']),\r\n\r\n  // Permitted content types . These types are not blocked by URL but passed to native for download scanning.\r\n  permittedContentTypes: ['application/vnd.microsoft.portable-executable',\r\n    'application/octet-stream',\r\n    'application/x-msdos-program',\r\n    'application/x-msdownload',\r\n    'binary/octet-stream',\r\n    'application/x-msdownload'\r\n  ],\r\n\r\n  // supported extenal website connections\r\n  SUPPORTED_WEBSITE_LIST: [\r\n    'protection.mcafee.com',\r\n    'protection-dev-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-dev2-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-qa-roadhouse-int.dvqa.mcafee.com',\r\n  ],\r\n\r\n  // per user use either GTI or HTI. true means set HTI while installing and if false means set GTI\r\n  isHTI: false,\r\n  mtiRequestor: null,\r\n  gtiServer: BackgroundConstants.GTI_SERVER,\r\n  htiServer: BackgroundConstants.HTI_SERVER,\r\n  cspClientId: 'e87c73de-b45e-4427-b590-5124401795b6',\r\n};\r\n","export const ForegroundGlobals = {\r\n  loglevel: null, // specify the current recorded loglevel\r\n};\r\n","// Background\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\n// Common\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n// Foreground\r\nimport { ForegroundGlobals } from '@extension/ui/foreground/foreground_globals';\r\n\r\n/**\r\n * The different log levels considered when detecting / reporting errors in WebAdvisor\r\n * Note that a higher level means that more logs will be printed. (ie, level 3 will print level 2 and 1)\r\n */\r\nexport const LogLevels = {\r\n  NONE: 0,\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * The different log types\r\n */\r\nexport const LogTypes = {\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * Process type to distinguish which process called the logger\r\n */\r\nexport const ProcessTypes = {\r\n  BACKGROUND: 'BACKGROUND',\r\n  CONTENT: 'CONTENT',\r\n  TELEMETRY: 'TELEMETRY',\r\n  SMART_NATIVE_CLIENT: 'SMART_NATIVE_CLIENT'\r\n};\r\n\r\nexport const ProcessStyleMap = {\r\n  DEFAULT: 'color: #000000; font-weight: normal; font-style:normal; background: #FFFFFF;',\r\n  BACKGROUND: 'color: #8D0DBA; font-weight: bold; background: #FFFFFF;',\r\n  CONTENT: 'color: #F54A26; font-weight: bold; background: #FFFFFF;',\r\n  TELEMETRY: 'color: #147831; font-weight: bold; background: #FFFFFF;',\r\n  SMART_NATIVE_CLIENT: 'color: #004d7c; font-weight: bold; background: #FFFFFF;'\r\n};\r\n\r\n// *****************************************************************************\r\n// Set \"ExtensionLogging\" = 1 in registry at the same place we set LogLevel\r\n// will turn on native logging. This will log everything including INFO and ERR.\r\n// *****************************************************************************\r\n// *****************************************************************************\r\n// Type \"chrome.storage.local.set({'EXTENSION_LOGGING': 3});\" into the background\r\n// page console to forcefully turn on or turn off the logs inside extension\r\n// chrome = chrome/browser, # = the log level from 0 to 4\r\n// *****************************************************************************\r\nexport class Logger\r\n{\r\n  static processLog(message, logType, process = undefined)\r\n  {\r\n    if (logType === LogLevels.NONE)\r\n    {\r\n      return;\r\n    }\r\n\r\n    // verify that process is a valid option, else set it undefined\r\n    if (process && !Object.values(ProcessTypes).includes(process))\r\n    {\r\n      process = undefined;\r\n    }\r\n\r\n    // Checking whether native logging is enabled or not.\r\n    chrome.storage.local.get(LocalStorageVariables.USE_NATIVE_LOGGER.name, (useNativeLogger) =>\r\n    {\r\n      if (useNativeLogger[LocalStorageVariables.USE_NATIVE_LOGGER.name] === true)\r\n      {\r\n        if (!process)\r\n        {\r\n          // Check if the current code is being ran in the background or foreground\r\n          process = isBackground() ? ProcessTypes.BACKGROUND : ProcessTypes.CONTENT;\r\n        }\r\n        const details = {\r\n          processType: process,\r\n          browserType: BuildSettings.BROWSER_TYPE,\r\n          extensionType: 'wa',\r\n          logType,\r\n          message\r\n        };\r\n\r\n        BackgroundGlobals.messageDispatcher && BackgroundGlobals.messageDispatcher.logger(details);\r\n      }\r\n    });\r\n\r\n    // log within extension\r\n    consoleLog(message, logType, process);\r\n  }\r\n\r\n  /**\r\n   * Set the native Logging status\r\n   * @param {*} state\r\n   */\r\n  static setNativeLogging(state)\r\n  {\r\n    BackgroundGlobals.useNativeLogger = state;\r\n    chrome.storage.local.set(LocalStorageVariables.USE_NATIVE_LOGGER, state);\r\n  }\r\n\r\n  // Need to include processType for telemetry logging only.\r\n  static log(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.INFO, processType);\r\n  }\r\n\r\n  static error(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.ERROR, processType);\r\n  }\r\n\r\n  static warn(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.WARN, processType);\r\n  }\r\n\r\n  static debug(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.DEBUG, processType);\r\n  }\r\n}\r\n\r\nconst consoleLog = async (message, logType, process = undefined) =>\r\n{\r\n  const logLevel = await getLogLevel();\r\n  if (logLevel === LogLevels.NONE)\r\n  {\r\n    return;\r\n  }\r\n\r\n  const processType = process || (isBackground() ? ProcessTypes.BACKGROUND\r\n    : ProcessTypes.CONTENT);\r\n  const nowDate = new Date();\r\n  const logMessage = `%c[${processType} ${nowDate.toLocaleString([], { hour: '2-digit', minute: '2-digit', hour12: true })}]: %c${message}`;\r\n\r\n  const styleRegular = ProcessStyleMap.DEFAULT;\r\n  let hightlight = ProcessStyleMap[processType];\r\n\r\n  if (!hightlight)\r\n  {\r\n    hightlight = styleRegular;\r\n  }\r\n\r\n  if (logLevel >= LogLevels.ERROR && logType === LogTypes.ERROR)\r\n  {\r\n    console.error(logMessage, styleRegular, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.INFO && logType === LogTypes.INFO)\r\n  {\r\n    console.log(logMessage, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.WARN && logType === LogTypes.WARN)\r\n  {\r\n    const uniqueHighlight = 'color: #FFA500; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cWARN - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.DEBUG && logType === LogTypes.DEBUG)\r\n  {\r\n    const uniqueHighlight = 'color: #FF33D7; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cDEBUG - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n};\r\n\r\nconst isBackground = () =>\r\n{\r\n  const isBackground = BackgroundGlobals.cacheStore !== null;\r\n  return isBackground;\r\n};\r\n\r\nconst getLogLevel = async () =>\r\n{\r\n  // Check if the current code is being ran in the background or foreground\r\n  const context = isBackground() ? BackgroundGlobals : ForegroundGlobals;\r\n\r\n  // get loglevel from the current context\r\n  let level = context.loglevel;\r\n\r\n  // if current context loglevel is null (aka not set, we will retrieve the level from storage)\r\n  if (context.loglevel === null)\r\n  {\r\n    level = await getStorageLogLevelAsync();\r\n    context.loglevel = (level === null || level === undefined) ? BuildSettings.LOG_LEVEL : level;\r\n  }\r\n\r\n  if (Number.isInteger(level) && Object.values(LogLevels).includes(level))\r\n  {\r\n    return level;\r\n  }\r\n\r\n  return BuildSettings.LOG_LEVEL;\r\n};\r\n\r\nconst getStorageLogLevelAsync = async () =>\r\n{\r\n  const storageLocalGetAsync = new Promise((resolve) => chrome.storage.local.get(LocalStorageVariables.EXTENSION_LOGGING.name, resolve));\r\n  const response = await storageLocalGetAsync;\r\n  const storageLogLevel = response[LocalStorageVariables.EXTENSION_LOGGING.name];\r\n  if (Number.isInteger(storageLogLevel) && Object.values(LogLevels).includes(storageLogLevel))\r\n  {\r\n    return storageLogLevel;\r\n  }\r\n  return null;\r\n};\r\n","export const Globals = {\r\n  ANNOTATION: {},\r\n  BackgroundIPC: null,\r\n  BackgroundCommons: null,\r\n  ContextTelemetry: null,\r\n  TelemetryEventNames: null,\r\n  UrlParser: null,\r\n  Utils: null,\r\n  Commands: {},\r\n  CommonConstants: {},\r\n  extension: null,\r\n  SearchEngineHelper: null,\r\n  prevLink: null,\r\n  Logger: null\r\n};\r\n","import { Globals } from './globals';\r\n\r\nexport default class ResourceManager\r\n{\r\n  /**\r\n   * Obtain the corresponding string for the resource name\r\n   * @param {String}   name     - The name of the resource\r\n   * @param {Function} callback - Handles the localized string returned\r\n   */\r\n  static getResString(name, callback)\r\n  {\r\n    Globals.ANNOTATION.resourceRequestor.getResStr(name, (value) =>\r\n    {\r\n      if (!value)\r\n      {\r\n        Globals.Logger.error(`Resource string ${name} failed to fetch through resource requestor`);\r\n      }\r\n      else\r\n      {\r\n        callback(value);\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Background\nimport { BackgroundGlobals } from '@extension/background/background_globals';\n// Common\nimport { BlockState, BrowserType, BuildSettings, Color, Score } from '@extension/common/constants';\nimport { BackgroundConstants } from '@extension/common/background_constants';\nimport { extension } from '@extension/common/webextension';\nimport { Logger } from '@extension/common/logger';\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\n// @mcafee\nimport ResourceManager from '@mcafee/wa-annotations/Common/resource_manager';\n\n/**\n * TODO: Comments\n */\nexport default class BackgroundCommon\n{\n  static async toGTICategoriesString(categories, includeDescription = false)\n  {\n    const getRes = (l10nId) => new Promise((resolve) =>\n    {\n      ResourceManager.getResString(l10nId, (res) => resolve(res));\n    });\n\n    const getCategoryStrings = async (categoryId, includeDescription) =>\n    {\n      const newCategory = {};\n\n      const name = await getRes(`category_id_${categoryId}_name`);\n      newCategory.name = name;\n\n      if (includeDescription)\n      {\n        const description = await getRes(`category_id_${categoryId}_description`);\n        newCategory.description = description;\n      }\n\n      return newCategory;\n    };\n\n    const promises = [];\n    for (const category of categories)\n    {\n      promises.push(getCategoryStrings(category, includeDescription));\n    }\n\n    const newCategories = await Promise.all(promises);\n    return newCategories;\n  }\n\n  /**\n   * Determine the shorthand browser type name based on its corresponding index value.\n   * @returns {String} - The browser name (shorthand)\n   */\n  static browserTypeToString(toLowerCase = false)\n  {\n    let browserType = '';\n    switch (BuildSettings.BROWSER_TYPE)\n    {\n      case 1:\n        browserType = 'FF';\n        break;\n      case 2:\n        browserType = 'CH';\n        break;\n      case 3:\n        browserType = 'ED';\n        break;\n      default:\n        browserType = 'UN';\n    }\n\n    return toLowerCase ? browserType.toLowerCase() : browserType;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toImagePaths(imageName)\n  {\n    let imagePath = 'images/browser_action/';\n\n    const legacyImageName = imageName.startsWith('small_') ? imageName : `small_${imageName}`;\n\n    switch (legacyImageName)\n    {\n      case 'small_button_green.gif':\n        imagePath += 'green';\n        break;\n      case 'small_button_yellow.gif':\n        imagePath += 'yellow';\n        break;\n      case 'small_button_red.gif':\n        imagePath += 'red';\n        break;\n      case 'small_button_grey.gif':\n        imagePath += 'white';\n        break;\n      case 'small_button_disabled.gif':\n        imagePath += 'disabled';\n        break;\n      default:\n        imagePath += imageName;\n        break;\n    }\n\n    // 16 and 32 used by Chrome/Firefox, 20 and 40 used by Edge\n    const imagePaths = {\n      size16: `${imagePath}_16.png`,\n      size20: `${imagePath}_20.png`,\n      size32: `${imagePath}_32.png`,\n      size40: `${imagePath}_40.png`\n    };\n\n    return imagePaths;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static colorToImagePaths(color)\n  {\n    let imageName = 'white';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageName = 'green';\n        break;\n      case Color.YELLOW:\n        imageName = 'yellow';\n        break;\n      case Color.RED:\n        imageName = 'red';\n        break;\n      case Color.UNKNOWN:\n        imageName = 'white';\n        break;\n      case Color.DISABLED:\n        imageName = 'disabled';\n        break;\n    }\n\n    return BackgroundCommon.toImagePaths(imageName);\n  }\n\n  /**\n   * Return the appropriate class for the annotation item\n   * @param {Object} annotationItem - Reputation object returned by the GTI server\n   */\n  static toAnnotationImageClass(annotationItem)\n  {\n    const color = BackgroundCommon.toColor(annotationItem);\n\n    let imageClass = '';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageClass = 'OK';\n        break;\n      case Color.RED:\n        imageClass = 'WARN';\n        break;\n      case Color.YELLOW:\n        imageClass = 'INFO';\n        break;\n      case Color.UNKNOWN:\n        imageClass = 'UNKNOWN';\n        break;\n    }\n\n    return imageClass;\n  }\n\n  /**\n  * Determines if the URL provided is malicious or not.\n  * @param   {Object} categories - Url info deemed phishing / malicious\n  * @returns {boolean} - Outcome of the phishing site check\n  */\n  static isPhishingURI(categories)\n  {\n    return categories && categories.includes(BackgroundConstants.PHISHING_CATEGORY);\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toBlockState(annItem)\n  {\n    const colorVal = BackgroundCommon.toColor(annItem);\n\n    if (colorVal === Color.RED || colorVal === Color.YELLOW)\n    {\n      if (BackgroundCommon.isPhishingURI(annItem.category))\n      {\n        return BlockState.PHISHING;\n      }\n    }\n\n    // Because the color and block state values correspond to the numbers, you can simply return the color value\n    return isNaN(colorVal) ? BlockState.UNKNOWN : colorVal;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toColor(annItem)\n  {\n    let color = Color.UNKNOWN;\n\n    if (annItem === undefined || annItem.trust === undefined)\n    {\n      return color;\n    }\n\n    if (annItem.trust >= Score.CLEAN)\n    {\n      color = Color.GREEN;\n    }\n    else if (annItem.trust > Score.UNVERIFIED)\n    {\n      color = Color.YELLOW;\n    }\n    else if (annItem.trust >= Score.DIRTY)\n    {\n      color = Color.RED;\n    }\n    else\n    {\n      color = Color.UNKNOWN;\n    }\n\n    return color;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toSiteReportUrl(url)\n  {\n    const siteReportUrl = extension.runtime.getURL('html/site_status_site_report.html');\n    return `${siteReportUrl}?url=${escape(url)}`;\n  }\n\n  static isExtensionUrl(url)\n  {\n    // Chrome/Edge Internal Pages\n    if ((BrowserType.CHROME === BuildSettings.BROWSER_TYPE && url.startsWith(`chrome-extension://${extension.runtime.id}`))\n    || (BrowserType.EDGE === BuildSettings.BROWSER_TYPE && url.startsWith(`ms-browser-extension://${extension.runtime.id}`)))\n    {\n      return true;\n    }\n\n    // Firefox Internal Pages\n    if (BrowserType.FIREFOX === BuildSettings.BROWSER_TYPE)\n    {\n      let firefoxInternalUUID = extension.i18n.getMessage('@@extension_id');\n      if (!firefoxInternalUUID)\n      {\n        const internalPageUrl = extension.runtime.getURL('images/web_advisor/logo.png');\n        // get internal uuid from resource url extracting characters between 'moz-extension://' and '/'\n        // sample url: moz-extension://ABCDE/images/web_advisor/logo.png => ABCDE\n        const urlSplit = internalPageUrl.split('/');\n        firefoxInternalUUID = (urlSplit.length >= 3) ? urlSplit[2] : '';\n      }\n\n      return firefoxInternalUUID && url.startsWith(`moz-extension://${firefoxInternalUUID}`);\n    }\n\n    return false;\n  }\n\n  // Check whether a url is a siteadvisor url or our own extension url\n  static isSafeUrl(url)\n  {\n    return BackgroundCommon.isSiteAdvisorUrl(url) || BackgroundCommon.isExtensionUrl(url);\n  }\n\n  static isSiteAdvisorUrl(url)\n  {\n    return (url.startsWith(`http://${BackgroundConstants.SITE_ADVISOR_URL}`)\n    || url.startsWith(`https://${BackgroundConstants.SITE_ADVISOR_URL}`));\n  }\n\n  static isPropertRedirectUrl(url)\n  {\n    return BackgroundCommon.isPropertyWebURL(url) || url.startsWith('edge://') || url.startsWith('chrome://');\n  }\n\n  // Check whether a url is a proper web url\n  static isProperWebURL(url)\n  {\n    if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('ftp://'))\n    {\n      return true;\n    }\n\n    return false;\n  }\n\n  static getUINumber(number)\n  {\n    // sample output:\n    // 0: 0\n    // 999: 999\n    // 1010: 1k+\n    // 1251: 1.2k+\n    // 9999: 9.9k+\n    // > 10000: 10k+\n    const THOUSAND = 1000;\n    const TEN_THOUSAND = 10000;\n    if (number >= TEN_THOUSAND) return '10k+';\n    if (number >= THOUSAND)\n    {\n      let decimal = (number / THOUSAND).toFixed(1);\n      decimal = decimal.substring(2, 3) === '0' ? decimal.substring(0, 1) : decimal;\n      return `${decimal}k+`;\n    }\n    return `${number}`;\n  }\n\n  static hasEpochTimeElapsed(initialEpochInSeconds, timePassedinSeconds)\n  {\n    const nowInSeconds = (new Date()).getTime() / 1000;\n    if (nowInSeconds > initialEpochInSeconds + timePassedinSeconds) return true;\n    return false;\n  }\n\n  static isPersonalPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static isActivityPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static blockRequest(tabId, url, message)\n  {\n    extension.declarativeNetRequest.getDynamicRules(\n      (rules) =>\n      {\n        const found = rules.filter((rule) => rule.condition.urlFilter === url);\n\n        if (found.length === 0)\n        {\n          extension.declarativeNetRequest.updateDynamicRules(\n            {\n              addRules: [{\n                id: rules.length + 1,\n                condition: {\n                  domains: ['<all_urls>'],\n                  urlFilter: url,\n                  resourceTypes: ['main_frame']\n                },\n                action: {\n                  type: 'block'\n                }\n              }]\n            },\n            () =>\n            {\n              Logger.log(`${message} ${url} ${tabId}`);\n            }\n          );\n        }\n      }\n    );\n  }\n}\n","// Parses the passed URI to read out the value of a particular\r\n// query string parameter within the URI string.\r\nexport default class UrlParser\r\n// this is because we declare the function in both contentplg and iframeplg,\r\n// using const will throw double declaration error here\r\n{\r\n  // get meaningful part of an uri (the part before ? or #)\r\n  static getURI(uri)\r\n  {\r\n    let parts = uri.split('?');\r\n    if (parts.length > 1)\r\n    {\r\n      return parts[0];\r\n    }\r\n    parts = uri.split('#');\r\n    if (parts.length > 1)\r\n    {\r\n      return parts[0];\r\n    }\r\n    return uri;\r\n  }\r\n\r\n  // get a clean URI (subdomain + domain only)\r\n  static getCleanURI(uri)\r\n  {\r\n    let cleanURI = uri;\r\n    if (cleanURI.endsWith('/'))\r\n    {\r\n      cleanURI = cleanURI.slice(0, -1);\r\n    }\r\n    if (cleanURI.startsWith('http://'))\r\n    {\r\n      cleanURI = cleanURI.slice(7);\r\n    }\r\n    else if (cleanURI.startsWith('https://'))\r\n    {\r\n      cleanURI = cleanURI.slice(8);\r\n    }\r\n    return this.getURI(cleanURI);\r\n  }\r\n\r\n  static getParam(uri, paramName)\r\n  {\r\n    const qpos = uri.indexOf('?');\r\n    if (qpos === -1)\r\n    {\r\n      return null;\r\n    }\r\n    const qString = uri.substring(qpos + 1);\r\n\r\n    // Now split each param delimited by &\r\n    const params = qString.split('&');\r\n    for (let index = 0; index < params.length; ++index)\r\n    {\r\n      // Now separate out each param name and value delimited by =.\r\n      const position = params[index].indexOf('=');\r\n      if (position === -1)\r\n      {\r\n        continue;\r\n      }\r\n      const name = params[index].substring(0, position);\r\n      if (name === paramName)\r\n      {\r\n        const value = params[index].substring(position + 1);\r\n        return value;\r\n      }\r\n    }\r\n    return null; // param not found.\r\n  }\r\n\r\n  static getDomain(url)\r\n  {\r\n    // there must be http(s) in the url, if not then return empty\r\n    if (url === undefined || !/^https?:\\/\\//.test(url))\r\n    {\r\n      return '';\r\n    }\r\n    const domainURL = new URL(url);\r\n    return domainURL.hostname;\r\n  }\r\n\r\n  static decodeQueryParam(p)\r\n  {\r\n    return decodeURIComponent(p.replace(/\\+/g, ' '));\r\n  }\r\n}\r\n","export default class HandlePromise\r\n{\r\n  static handlePromiseMessage(message, customCallback = null)\r\n  {\r\n    const defaultCallback = (resolve, reject, data) =>\r\n    {\r\n      if (chrome.runtime.lastError) reject(chrome.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      chrome.runtime.sendMessage(message, (data) =>\r\n      {\r\n        if (typeof customCallback === 'function') customCallback(resolve, reject, data);\r\n        else defaultCallback(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\r\nimport { BackgroundCommands, ContentCommands } from '@extension/common/commands';\r\nimport HandlePromise from '@extension/common/handle_promise';\r\n\r\n/**\r\n * Handles communication from content process to the background process.\r\n */\r\nexport default class BackgroundIPC\r\n{\r\n  static cacheStore(action, data)\r\n  {\r\n    const command = BackgroundCommands.CACHE_STORE;\r\n    return HandlePromise.handlePromiseMessage({ command, action, data });\r\n  }\r\n\r\n  static isFrameBlocked(url)\r\n  {\r\n    const command = BackgroundCommands.IS_FRAME_BLOCKED;\r\n    return HandlePromise.handlePromiseMessage({ command, url });\r\n  }\r\n\r\n  static makeMTIRequest(requestData, referer)\r\n  {\r\n    const command = BackgroundCommands.TI_REQUEST;\r\n    const request = { command, requestData, referer };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static executeCommand(commandId, params)\r\n  {\r\n    const command = BackgroundCommands.EXECUTE_COMMAND;\r\n    extension.runtime.sendMessage({ command, commandId, params });\r\n  }\r\n\r\n  static focusOrCreateTab(url)\r\n  {\r\n    const command = BackgroundCommands.FOCUS_OR_CREATE_TAB;\r\n    extension.runtime.sendMessage({ command, url });\r\n  }\r\n\r\n  static closeTab()\r\n  {\r\n    const command = BackgroundCommands.REMOVE_TAB;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static whitelist(action, type, data)\r\n  {\r\n    const command = BackgroundCommands.WHITELIST;\r\n    return HandlePromise.handlePromiseMessage({ action, command, type, data });\r\n  }\r\n\r\n  static getPopupData()\r\n  {\r\n    const command = BackgroundCommands.GET_POPUP_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getSettingsData()\r\n  {\r\n    const command = BackgroundCommands.GET_SETTINGS_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static searchAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static socialMediaAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SOCIAL_MEDIA_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static async getBkGlobals(bIncludeSearchEngines = false)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const command = BackgroundCommands.GET_BK_GLOBALS;\r\n      const promise = HandlePromise.handlePromiseMessage({ command, bIncludeSearchEngines });\r\n      promise.then((val) => { resolve(JSON.parse(val)); });\r\n    });\r\n  }\r\n\r\n  static viewSiteReport(url = null, showInNewTab = false)\r\n  {\r\n    const command = BackgroundCommands.VIEW_SITE_REPORT;\r\n    extension.runtime.sendMessage({ command, url, showInNewTab });\r\n  }\r\n\r\n  static getTypoSquattingData(domain)\r\n  {\r\n    const command = BackgroundCommands.GET_TYPOSQUATTING_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command, domain });\r\n  }\r\n\r\n  static getPlaceholderText(id)\r\n  {\r\n    const command = BackgroundCommands.PLACEHOLDER_TEXT;\r\n    return HandlePromise.handlePromiseMessage({ command, id });\r\n  }\r\n\r\n  static setViewPort(x, y)\r\n  {\r\n    const command = BackgroundCommands.SET_VIEWPORT;\r\n    extension.runtime.sendMessage({ command, x, y });\r\n  }\r\n\r\n  static sendTelemetry(telemetry)\r\n  {\r\n    const command = BackgroundCommands.SEND_TELEMETRY;\r\n    extension.runtime.sendMessage({ command, telemetry });\r\n  }\r\n\r\n  static anyBlockedIframes(frameUrls)\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_IFRAMES;\r\n    return HandlePromise.handlePromiseMessage({ command, frameUrls });\r\n  }\r\n\r\n  static anyBlockedCryptoScripts()\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_CRYPTOSCRIPTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static resetSettings()\r\n  {\r\n    const command = BackgroundCommands.RESET_SETTINGS;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static sendEngineStat(engine)\r\n  {\r\n    extension.runtime.sendMessage({ command: BackgroundCommands.UPDATE_ENGINE_STATS, engine });\r\n  }\r\n\r\n  static contentHandler(message)\r\n  {\r\n    const command = BackgroundCommands.CONTENT_HANDLER;\r\n    extension.runtime.sendMessage({ command, message });\r\n  }\r\n\r\n  static getTabData(payload = {})\r\n  {\r\n    const command = BackgroundCommands.GET_TAB_DATA;\r\n    const request = { command, ...payload };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static isWhitelisted(url)\r\n  {\r\n    const command = BackgroundCommands.IS_WHITELISTED;\r\n    const request = { command, url };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static getExtensionStatus(id)\r\n  {\r\n    return HandlePromise.handlePromiseMessage({ command: BackgroundCommands.GET_EXTENSION_STATUS, extension_id: id });\r\n  }\r\n\r\n  static unblockAllIframes()\r\n  {\r\n    const command = BackgroundCommands.UNBLOCK_ALL_IFRAMES;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateRatDetectionShowingFlag(showed)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_RAT_DETECTION_SHOWING_FLAG;\r\n    extension.runtime.sendMessage({ command, showed });\r\n  }\r\n\r\n  /**\r\n   * Send a message to the background to retrieve the results from Search Suggestion for the search term\r\n   *\r\n   * @param {String} searchTerm\r\n   */\r\n  static getSearchSuggest(searchTerm)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_SUGGEST;\r\n    const request = { command, searchTerm };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static resetNativeSetting(setting)\r\n  {\r\n    const command = BackgroundCommands.RESET_NATIVE_SETTING;\r\n    extension.runtime.sendMessage({ command, setting });\r\n  }\r\n\r\n  /**\r\n   * Save form info (logging info)\r\n   * @param {string} username - username entered in the form.\r\n   * @param {string} hostname - hostname of the page the form was submitted on.\r\n   */\r\n  static saveFormInfo(username, hostname)\r\n  {\r\n    const command = BackgroundCommands.SAVE_FORM_INFO;\r\n    extension.runtime.sendMessage({ command, username, hostname });\r\n  }\r\n\r\n  /**\r\n   * Send message to the backend to save login from multi-step detection\r\n   * @param {Object} data - Object containing the neccesary info from the form.\r\n   * @param {string} data.username - (optional) username entered into the form. Only supplied if login not complete, ie first step of multistep form.\r\n   * @param {string} data.hostanme - hostname of the page the form was submitted on.\r\n   * @param {Boolean} completeLogin - Whether or not the multistep login process is completed or not.\r\n   */\r\n  static saveMultiStepLogin(data, completeLogin)\r\n  {\r\n    const command = BackgroundCommands.SAVE_MULTISTEP_LOGIN;\r\n    extension.runtime.sendMessage({ command, data, completeLogin });\r\n  }\r\n\r\n  static getFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.GET_FORM_INFO_CACHE;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static clearFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.CLEAR_FORM_INFO_CACHE;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  /**\r\n   * Update list of emails to be excluded from DWS offering.\r\n   * The email is whitelisted either because the user said not to offer it again, or because the user\r\n   * added it to be monitored in the web portal.\r\n   * @param {*} email\r\n   */\r\n  static updateDWSWhitelist(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_WHITELIST;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.GET_CACHED_DWS_INFO;\r\n    const request = { command, email };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static clearCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.CLEAR_CACHED_DWS_INFO;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static updateDWSShown(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_SHOWN;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getAPSDetails()\r\n  {\r\n    const command = BackgroundCommands.GET_APS_DETAILS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static signUpFormDetected()\r\n  {\r\n    const command = BackgroundCommands.SIGN_UP_FORM_DETECTED;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateBkNativeSettings(name, value)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_BK_NATIVE_SETTINGS;\r\n    extension.runtime.sendMessage({ command, name, value });\r\n  }\r\n\r\n  static launchIDPSLogin()\r\n  {\r\n    const command = BackgroundCommands.LAUNCH_IDPS_LOGIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static showSidebarMain()\r\n  {\r\n    const command = BackgroundCommands.SHOW_SIDEBAR_MAIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static setFFPolicyCollection({ personal, activity })\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_COLLECTION;\r\n    extension.runtime.sendMessage({ command, personal, activity });\r\n  }\r\n\r\n  static setFFPolicyLastShown()\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_LAST_SHOWN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  // This will broadcast a sendMessage to all page owned by us\r\n  // For example, to all foreground pages. A message will be sent to\r\n  // background as well but it will not be processed\r\n  static broadcastToForeground(payload)\r\n  {\r\n    const command = ContentCommands.BROADCAST_TO_FOREGROUND;\r\n    extension.runtime.sendMessage({ command, payload });\r\n  }\r\n\r\n  static getFDWeights()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_WEIGHTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDExceptions()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_EXCEPTIONS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDCrfParams()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_CRF_PARAMS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n}\r\n","import { ContentCommands } from '@extension/common/commands';\r\nimport ScriptBase from '@extension/scripts/content_base';\r\nimport BackgroundCommon from '@extension/common/background_common';\r\nimport UrlParser from '@extension/common/url_parser';\r\nimport { CacheStorageVariables, CacheStoreActions } from '@extension/common/cache_store_variables';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n\r\nexport default class ContentAPSObserver extends ScriptBase\r\n{\r\n  constructor()\r\n  {\r\n    super(ContentCommands.PING_CONTENT_APS_OBSERVER);\r\n  }\r\n\r\n  async main()\r\n  {\r\n    const url = document.location.href;\r\n\r\n    const setting = CacheStorageVariables.APS_EMAIL_LINKS.name;\r\n    const settings = await BackgroundIPC.cacheStore(CacheStoreActions.GET, { [setting]: [] });\r\n    const apsEmailLinks = settings[setting];\r\n\r\n    const { apsUrlList } = await BackgroundIPC.getBkGlobals();\r\n    const apsEmailList = apsUrlList.email;\r\n    const emailObjectKeys = Object.keys(apsEmailList);\r\n\r\n    const emailService = emailObjectKeys.find((emailServiceUrl) => url.includes(emailServiceUrl));\r\n\r\n    if (emailService)\r\n    {\r\n      const emailSelector = apsEmailList[emailService].selector;\r\n      this.initEmailObserver(emailSelector, apsEmailLinks);\r\n      return;\r\n    }\r\n\r\n    this.initEmailObserver();\r\n  }\r\n\r\n  initEmailObserver(selector, apsEmailLinks)\r\n  {\r\n    const attachLinkclickListener = () =>\r\n    {\r\n      const links = document.querySelectorAll(selector);\r\n      if (!links.length)\r\n      {\r\n        return;\r\n      }\r\n\r\n      links.forEach((link) =>\r\n      {\r\n        const href = link.getAttribute('href');\r\n\r\n        if (link.getAttribute('mcafee_aps') === 'true' || !href || !BackgroundCommon.isProperWebURL(href))\r\n        {\r\n          // continue checking subsequent links\r\n          return;\r\n        }\r\n\r\n        link.setAttribute('mcafee_aps', 'true');\r\n        link.addEventListener('click', () =>\r\n        {\r\n          const domain = UrlParser.getDomain(href);\r\n          apsEmailLinks.push(domain);\r\n          BackgroundIPC.cacheStore(CacheStoreActions.SET, { [CacheStorageVariables.APS_EMAIL_LINKS.name]: apsEmailLinks });\r\n        });\r\n      });\r\n    };\r\n\r\n    const observer = new MutationObserver(() =>\r\n    {\r\n      // Check if we found any links within the email content page\r\n      attachLinkclickListener();\r\n    });\r\n\r\n    // Perform initial check\r\n    attachLinkclickListener();\r\n    // Observer for changes in the dom\r\n    observer.observe(document, { childList: true, subtree: true });\r\n  }\r\n}\r\n\r\nconst contentAPSObserver = new ContentAPSObserver();\r\ncontentAPSObserver.main();\r\n"],"names":["BackgroundCommands","ContentCommands","ScriptBase","constructor","pingCommand","this","basePingListener","callback","chrome","runtime","onMessage","addListener","request","sender","responseCb","id","command","content","BlockState","GREEN","YELLOW","RED","UNKNOWN","HACKERSAFE","TYPOSQUATTING","PHISHING","Symbol","iterator","prop","Object","keys","BrowserType","BuildSettings","Color","Score","BackgroundConstants","TrustedDomains","Set","extension","SocialMediaTypes","NONE","LINKEDIN","INSTAGRAM","YOUTUBE","FACEBOOK","TWITTER","REDDIT","AnnotationOptions","values","reduce","sum","value","ONLY_SECURE_SEARCH","ALL","key","NonZeroSocialMediaTypes","CacheStoreActions","LocalStorageVariables","name","options","type","CacheStorageVariables","TabData","static","blockedIframes","cryptoBlockData","tabDomainTrusted","getResetValues","reset","tabId","update","get","BackgroundGlobals","cacheStore","getDefaultValues","set","newTabData","cache","delete","currentTabData","setTabBlockPageData","blockPageData","addBlockedFrame","push","getBlockedFrames","resetBlockedFrames","NativeSettingsPreprocess","trim","split","CH","FF","EDGE","IE","suffixBrowserMap","SYSTEM","USER","_browser","getBrowserSuffix","NativeSettings","DEV_MODE","scope","AFF_ID","BINARY_VERSION","EXTENSION_VERSION_CH","writeOnly","EXTENSION_VERSION_FF","EXTENSION_VERSION_ED","BROWSER_TYPE","USER_AGENT","SUGGESTION_URL","SCRIPT_GENERATED_DEFAULT_SS_URL","SECURE_SEARCH_REGEXES","preprocess","PreprocessSecureSearchRegEx","SHOW_SEARCH_SETTINGS","SECURE_SEARCH_TOAST_STAMP","SECURE_SEARCH_ANNOTATION_ONLY","SECURE_SEARCH_SHOW_ICONS","SECURE_SEARCH_CHOICE","SS_DEF","ANNOTATIONS_CHOICE_EXPLICIT","CURRENT_SAO_IN_EXTENSION","FF_EXTENSION_LAST_TOAST_TIME","FF_EXTENSION_TOAST_COUNT","CHECKLIST_START_INGORE_DATE_AV","CHECKLIST_START_IGNORE_DATE_FW","CHECKLIST_IGNORE_DURACTION","CHECKLIST_GRACE_PERIOD_AV","CHECKLIST_GRACE_PERIOD_FW","CHECKLIST_GRACE_PERIOD_DURATION","CRYPTOJACKING_DISABLED","SMA_USER_TOGGLE","SMA_ANNOTATION_OPTIONS","PAGES_SCANNED","PAGES_BLOCKED","DOWNLOADS_SCANNED","DOWNLOADS_BLOCKED","CRYPTO_BLOCKED","BLOCKPAGE_WHITELIST","TS_WHITELIST","CSP_ID_SETTING","UNINSTALL_SURVEY_ENABLED","UNINSTALL_SURVEY_URL","RAT_DETECTION_ENABLED","IDPS_FEATURE_ENABLED","APS_COHORT","APS_TOGGLE_SETTING","ALT_TRIGGER","IFRAME_FORM_CHECK_ENABLED","ANNOTATION_JOURNEY_COHORT","ANNOTATION_JOURNEY_TOAST","HTI_THROTTLE","MTI_CLIENT_ID","isTrustCheckRequired","ExtensionTelemetryUrl","scheduleManager","schedules","isNativeConnected","telemetryEngine","postInstallationPage","listenerManager","firefoxInternalUUID","shadowMode","browserType","ffViewports","garbageCollector","typoCache","logger","loglevel","messageDispatcher","port","tabData","tabIdToLastClickTime","Map","useNativeLogger","wasm","userAgentInBase64","typoSquattingServer","tldParser","cryptoBlacklist","trustedDomains","nativeSettings","searchSuggest","ratBlacklist","domain","urls","updatedByNative","wssMessageDispatcher","wssNativeClient","WSS_INSTALLED","isWPSInstalled","searchEngines","enginesVersionUrl","engineCheckInterval","ENGINES_VERSION","AUTO_PLAY_NOTIFICATION_ENABLED","ALLOW_LOCALHOST","IDPS_AUTH_URL","IDPS_BREACH_COUNT_URL","IDPS_CSP_CLIENT_ID","IDPS_IS_ENTITLED","IDPS_PROVISION_ID","IDPS_LOGIN_DOMAIN","UA_CLIENT","TYPOSQUATTING_MAX_CACHE","TYPOSQUATTING_EXPIRY","WA_IMAGE_SECRET","apsUrlList","shopping","paths","email","selector","apsAnimationTimeout","downloadUrls","wpsRequestedSettings","permittedContentTypes","SUPPORTED_WEBSITE_LIST","isHTI","mtiRequestor","gtiServer","htiServer","cspClientId","ForegroundGlobals","LogLevels","INFO","ERROR","WARN","DEBUG","LogTypes","ProcessTypes","BACKGROUND","CONTENT","TELEMETRY","SMART_NATIVE_CLIENT","ProcessStyleMap","DEFAULT","Logger","message","logType","process","includes","undefined","storage","local","isBackground","details","processType","extensionType","consoleLog","state","processLog","async","logLevel","getLogLevel","logMessage","Date","toLocaleString","hour","minute","hour12","styleRegular","hightlight","console","error","log","uniqueHighlight","context","level","getStorageLogLevelAsync","Number","isInteger","storageLocalGetAsync","Promise","resolve","storageLogLevel","Globals","ANNOTATION","BackgroundIPC","BackgroundCommons","ContextTelemetry","TelemetryEventNames","UrlParser","Utils","Commands","CommonConstants","SearchEngineHelper","prevLink","ResourceManager","resourceRequestor","getResStr","BackgroundCommon","categories","includeDescription","getRes","l10nId","getResString","res","getCategoryStrings","categoryId","newCategory","description","promises","category","all","toLowerCase","imageName","imagePath","startsWith","size16","size20","size32","size40","color","toImagePaths","annotationItem","imageClass","toColor","annItem","colorVal","isPhishingURI","isNaN","trust","url","getURL","escape","i18n","getMessage","urlSplit","length","isSiteAdvisorUrl","isExtensionUrl","isPropertyWebURL","number","decimal","toFixed","substring","initialEpochInSeconds","timePassedinSeconds","getTime","declarativeNetRequest","getDynamicRules","rules","filter","rule","condition","urlFilter","updateDynamicRules","addRules","domains","resourceTypes","action","uri","parts","cleanURI","endsWith","slice","getURI","paramName","qpos","indexOf","params","index","position","test","URL","hostname","p","decodeURIComponent","replace","HandlePromise","customCallback","reject","sendMessage","data","lastError","defaultCallback","handlePromiseMessage","requestData","referer","commandId","bIncludeSearchEngines","then","val","JSON","parse","showInNewTab","x","y","telemetry","frameUrls","engine","payload","extension_id","showed","searchTerm","setting","username","completeLogin","personal","activity","super","document","location","href","apsEmailLinks","getBkGlobals","apsEmailList","emailService","find","emailServiceUrl","emailSelector","initEmailObserver","attachLinkclickListener","links","querySelectorAll","forEach","link","getAttribute","isProperWebURL","setAttribute","addEventListener","getDomain","observer","MutationObserver","observe","childList","subtree","main"],"sourceRoot":""}
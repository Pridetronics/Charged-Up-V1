{"version":3,"file":"scripts/content_idps.js","mappings":"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,cAAe,CAAEpD,MAAON,GAAQxG,KAAM,gBAAiBC,MAAO,KCjInD2D,GAAoB,CAI/BuG,sBAAsB,EACtBC,sBAAuB,KACvBC,gBAAiB,KACjBC,UAAW,KACXC,mBAAmB,EACnBC,gBAAiB,KACjBC,qBAAsB,gDACtBC,gBAAiB,KACjBC,oBAAqB,GACrBC,WAAY,SACZC,YAAazF,GACbvB,WAAY,KACZiH,YAAa,KACbC,iBAAkB,KAClBC,UAAW,KACXC,OAAQ,KACRC,SAAU,KACVC,kBAAmB,KACnBC,KAAM,KACNC,QAAS,IAAIlI,GACbmI,qBAAsB,IAAIC,IAC1BC,iBAAiB,EACjBC,KAAM,KACNC,kBAAmB,KACnBC,oBAAqB9F,GACrB+F,UAAW,KACXC,gBFrB6B,CAC7B,wBACA,2CACA,8BACA,+BACA,wBACA,wBACA,2BACA,yBACA,+BACA,0BACA,gCACA,sCACA,8BACA,uBACA,yBACA,qBACA,wCACA,mCACA,0BACA,4BACA,iCACA,8BACA,+BACA,0BACA,0CACA,2BACA,kBACA,oCACA,6BACA,4BACA,wBACA,2BACA,0BACA,wBACA,2BACA,8BACA,2CACA,yBACA,wBACA,6BACA,sBACA,oBACA,+CACA,wBACA,2BACA,4BACA,6BACA,2BACA,wBACA,2BACA,qCACA,0BACA,2BACA,oCACA,uCACA,yBACA,4BACA,wBACA,4BACA,2BACA,8BACA,6BACA,gCACA,mCACA,4BACA,gCACA,4BACA,kCACA,+BACA,4BACA,wCACA,mBACA,0BACA,8BACA,2BACA,6BACA,2BACA,qBACA,+BACA,iCACA,2CACA,8BACA,6BACA,sCACA,0CACA,4BACA,2BACA,+BACA,2BACA,oCACA,0BACA,uBACA,qCACA,+BACA,+BACA,6BACA,yBACA,uBACA,qCACA,2BACA,4BACA,yBACA,6BACA,2BACA,6BACA,8BACA,2BACA,2BACA,sDACA,4BACA,8BACA,sBACA,0BACA,0BACA,0BACA,yBACA,+BACA,yBACA,6BACA,gCACA,4BACA,6CACA,wBACA,2BACA,2BACA,uBACA,iDACA,4BACA,o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","sources":["webpack:///./extension/common/webextension.js","webpack:///./extension/common/commands.js","webpack:///./extension/common/handle_promise.js","webpack:///./extension/common/background_ipc.js","webpack:///./extension/scripts/content_base.js","webpack:///./extension/common/http_service.js","webpack:///./extension/common/sma_variables.js","webpack:///./extension/common/annotation_variables.js","webpack:///./extension/common/cache_store_variables.js","webpack:///./extension/common/tab_data.js","webpack:///./extension/common/constants.js","webpack:///./extension/common/background_constants.js","webpack:///./extension/background/dispatchers/native/native_settings.js","webpack:///./extension/background/background_globals.js","webpack:///./extension/ui/foreground/foreground_globals.js","webpack:///./extension/common/logger.js","webpack:///./extension/utilities/ui_content_utils.js","webpack:///./coreengine/globals.js","webpack:///./coreengine/external_msg_dispatcher.js","webpack:///./extension/components/shadow_dom_container.js","webpack:///./extension/components/interactive_balloon.js","webpack:///./extension/components/balloon_message_container.js","webpack:///./extension/telemetry/common_telemetry.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/globals.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/resource_manager.js","webpack:///./extension/common/background_common.js","webpack:///./extension/telemetry/telemetry_message_modifiers.js","webpack:///./extension/utilities/utils.js","webpack:///./extension/telemetry/context_telemetry.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/utils.js","webpack:///./coreengine/resource_requestor.js","webpack:///./extension/utilities/ui_strings.js","webpack:///./extension/ui/balloon_message/dws.js","webpack:///./extension/ui/balloon_message/advanced_protection_signal.js","webpack:///./extension/ui/balloon_message/advanced_protection_signal_toast.js","webpack:///./extension/scripts/ui_handler/balloon_message_ui_handler.js","webpack:///./extension/scripts/content_idps.js"],"sourcesContent":["export const extension = WEBPACK_BROWSER_NAME === 'chrome' || WEBPACK_BROWSER_NAME === 'edge' ? chrome : browser; // eslint-disable-line no-undef\r\n","/**\r\n * The command ids supported for IPC between content process and chrome/background process.\r\n */\r\n\r\nexport const BackgroundCommands = {\r\n  // Generic Commands\r\n  CACHE_STORE: 'CACHE_STORE',\r\n  CONTENT_HANDLER: 'CONTENT_HANDLER',\r\n  EXECUTE_COMMAND: 'EXECUTE_COMMAND',\r\n  FOCUS_OR_CREATE_TAB: 'FOCUS_OR_CREATE_TAB',\r\n  GET_BK_GLOBALS: 'GET_BK_GLOBALS',\r\n  GET_EXTENSION_STATUS: 'GET_EXTENSION_STATUS',\r\n  GET_TAB_DATA: 'GET_TAB_DATA',\r\n  TI_REQUEST: 'TI_REQUEST',\r\n  INSTALL_EXTENSION: 'INSTALL_EXTENSION',\r\n  PLACEHOLDER_TEXT: 'PLACEHOLDER_TEXT',\r\n  REMOVE_TAB: 'REMOVE_TAB',\r\n  SEND_TELEMETRY: 'SEND_TELEMETRY',\r\n  SET_VIEWPORT: 'SET_VIEWPORT',\r\n  WHITELIST: 'WHITELIST',\r\n  RESET_NATIVE_SETTING: 'RESET_NATIVE_SETTING',\r\n  UPDATE_BK_NATIVE_SETTINGS: 'UPDATE_BK_NATIVE_SETTINGS',\r\n\r\n  // Options Menu / Settings Page\r\n  SHOW_SIDEBAR_MAIN: 'SHOW_SIDEBAR_MAIN',\r\n  GET_POPUP_DATA: 'GET_POPUP_DATA',\r\n  GET_SETTINGS_DATA: 'GET_SETTINGS_DATA',\r\n  RESET_SETTINGS: 'RESET_SETTINGS',\r\n\r\n  // Autoplay video\r\n  AUTO_RUN_VIDEO_SITE: 'AUTO_RUN_VIDEO_SITE',\r\n  GET_CLICK_EVENT_TIME: 'GET_CLICK_EVENT_TIME',\r\n  SAVE_CLICK_EVENT_TIME: 'SAVE_CLICK_EVENT_TIME',\r\n\r\n  // Typosquatting\r\n  GET_TYPOSQUATTING_DATA: 'GET_TYPOSQUATTING_DATA',\r\n\r\n  // Block Page / Iframe / Site Report\r\n  IS_FRAME_BLOCKED: 'IS_FRAME_BLOCKED',\r\n  IS_WHITELISTED: 'IS_WHITELISTED',\r\n  ANY_BLOCKED_IFRAMES: 'ANY_BLOCKED_IFRAMES',\r\n  ANY_BLOCKED_CRYPTOSCRIPTS: 'ANY_BLOCKED_CRYPTOSCRIPTS',\r\n  UNBLOCK_ALL_IFRAMES: 'UNBLOCK_ALL_IFRAMES',\r\n  VIEW_SITE_REPORT: 'VIEW_SITE_REPORT',\r\n\r\n  // Annotations\r\n  SEARCH_ANNOTATION: 'SEARCH_ANNOTATION',\r\n  UPDATE_ENGINE_STATS: 'UPDATE_ENGINE_STATS',\r\n\r\n  // SMA\r\n  SOCIAL_MEDIA_ANNOTATION: 'SOCIAL_MEDIA_ANNOTATION',\r\n\r\n  // RAT Detection\r\n  UPDATE_RAT_DETECTION_SHOWING_FLAG: 'UPDATE_RAT_DETECTION_SHOWING_FLAG',\r\n\r\n  // Search Suggestion\r\n  SEARCH_SUGGEST: 'SEARCH_SUGGEST',\r\n\r\n  // Form detection\r\n  SAVE_FORM_INFO: 'SAVE_FORM_INFO',\r\n  GET_FORM_INFO_CACHE: 'GET_FORM_INFO_CACHE',\r\n  CLEAR_FORM_INFO_CACHE: 'CLEAR_FORM_INFO_CACHE',\r\n  SAVE_MULTISTEP_LOGIN: 'SAVE_MULTISTEP_LOGIN',\r\n  GET_FD_WEIGHTS: 'GET_FD_WEIGHTS',\r\n  GET_FD_EXCEPTIONS: 'GET_FD_EXCEPTIONS',\r\n  GET_FD_CRF_PARAMS: 'GET_FD_CRF_PARAMS',\r\n\r\n  // DWS\r\n  CLEAR_CACHED_DWS_INFO: 'CLEAR_DWS_INFO',\r\n  GET_CACHED_DWS_INFO: 'GET_CACHED_DWS_INFO',\r\n  UPDATE_DWS_WHITELIST: 'UPDATE_DWS_WHITELIST',\r\n  LAUNCH_IDPS_LOGIN: 'LAUNCH_IDPS_LOGIN',\r\n  UPDATE_DWS_SHOWN: 'UPDATE_DWS_SHOWN',\r\n\r\n  // APS\r\n  GET_APS_DETAILS: 'GET_APS_DETAILS',\r\n  FORM_PRE_CHECK_PASSED: 'FORM_PRE_CHECK_PASSED',\r\n  SIGN_UP_FORM_DETECTED: 'SIGN_UP_FORM_DETECTED',\r\n\r\n  // Firefox Policy Consent\r\n  SET_FF_POLICY_COLLECTION: 'SET_FF_POLICY_COLLECTION',\r\n  SET_FF_POLICY_LAST_SHOWN: 'SET_FF_POLICY_LAST_SHOWN',\r\n};\r\n\r\nexport const ContentCommands = {\r\n  // Commands handled by iframes\r\n  UNBLOCK_IFRAME: 'UNBLOCK_IFRAME',\r\n\r\n  // Content UI Handler Commands\r\n  BALLOON_MESSAGE: 'BALLOON_MESSAGE',\r\n  PAGE_OVERLAY: 'PAGE_OVERLAY',\r\n  SIDEBAR: 'SIDEBAR',\r\n  TOPBAR: 'TOPBAR',\r\n\r\n  // Ping\r\n  PING_CONTENT_ANNOTATION: 'PING_CONTENT_ANNOTATION',\r\n  PING_CONTENT_RAT_DETECTION: 'PING_CONTENT_RAT_DETECTION',\r\n  PING_CONTENT_IFRAME_BANNER: 'PING_CONTENT_IFRAME_BANNER',\r\n  PING_CONTENT_AUTOPLAY_DETECTION: 'PING_CONTENT_AUTOPLAY_DETECTION',\r\n  PING_CONTENT_SIDEBAR_MAIN: 'PING_CONTENT_SIDEBAR_MAIN',\r\n  PING_CONTENT_FF_DL_OVERLAY: 'PING_CONTENT_FF_DL_OVERLAY',\r\n  PING_CONTENT_CRYPTO_BLOCK: 'PING_CONTENT_CRYPTO_BLOCK',\r\n  PING_CONTENT_FF_VIEWPORTS: 'PING_CONTENT_FF_VIEWPORTS',\r\n  PING_CONTENT_IDPS: 'PING_CONTENT_IDPS',\r\n  PING_CONTENT_APS_TOAST: 'PING_CONTENT_APS_TOAST',\r\n  PING_CONTENT_APS_BALLOON: 'PING_CONTENT_APS_BALLOON',\r\n  PING_CONTENT_APS_OBSERVER: 'PING_CONTENT_APS_OBSERVER',\r\n  PING_CONTENT_SITE_LISTENER: 'PING_CONTENT_SITE_LISTENER',\r\n  PING_IFRAME_FORM_CHECK: 'PING_IFRAME_FORM_CHECK',\r\n  PING_IFRAME_FORM_DETECTION: 'PING_IFRAME_FORM_DETECTION',\r\n  PING_IFRAME_BLOCK: 'PING_IFRAME_BLOCK',\r\n\r\n  // APS\r\n  APS_REGISTRATION_PAGE: 'APS_REGISTRATION_PAGE',\r\n\r\n  // Broadcast to foreground\r\n  BROADCAST_TO_FOREGROUND: 'BROADCAST_TO_FOREGROUND',\r\n\r\n  // Annotation Journey Toast\r\n  TRIGGER_AJ_TOAST: 'TRIGGER_AJ_TOAST'\r\n};\r\n\r\n// **********************************************\r\n// SUB-COMMANDS USED BY CONTENT HANDLER COMMANDS:\r\n// **********************************************\r\n\r\nexport const SideBarCommands = {\r\n  MAIN: 'MAIN',\r\n  RELOAD: 'RELOAD',\r\n  SMA: 'SMA',\r\n  RAT_DETECTION: 'RAT_DETECTION',\r\n};\r\n\r\nexport const BalloonMessageCommands = {\r\n  ADVANCED_PROTECTION_SIGNAL: 'ADVANCED_PROTECTION_SIGNAL',\r\n  ADVANCED_PROTECTION_SIGNAL_TOAST: 'ADVANCED_PROTECTION_SIGNAL_TOAST',\r\n  DWS: 'DWS',\r\n};\r\n\r\nexport const TopBarCommands = {\r\n  CRYPTO_BLOCK: 'CRYPTO_BLOCK',\r\n  IFRAME_BLOCK: 'IFRAME_BLOCK',\r\n  TRIGGER_ALLOW: 'TRIGGER_ALLOW',\r\n};\r\n\r\nexport const PageOverlayCommands = {\r\n  SEARCH_EXTENSION_OVERLAY: 'SEARCH_EXTENSION_OVERLAY',\r\n  FINISH_DOWNLOAD: 'FINISH_DOWNLOAD',\r\n};\r\n\r\nexport const ExternalCommands = {\r\n  // Legacy\r\n  PING: 0,\r\n  DISCONNECT_NATIVE: 1,\r\n  SET_PROPERTY_EX: 2, //  For automation\r\n  SET_PROPERTY: 3, // For automation\r\n  GET_PROPERTY: 4, // For automation\r\n  CLEAR_GTI_CACHE: 5, // For automation\r\n  RESET_CRYPTO: 6, // For automation\r\n  CLEAN_TYPOSQUATING_WHITELIST: 7, // For automation\r\n  CLEAR_TYPOSQUATING_CACHE: 8, // For automation\r\n  CLEAN_CRYPTO_WHITELIST: 10, // For automation\r\n  CLEAN_RAT_WHITELIST: 12, // For automation\r\n  CLEAN_RAT_CACHE: 13, // For automation\r\n  REPLACE_TRUSTED_DOMAIN: 15, // For automation\r\n  VERIFY_GTI_REQUEST: 17, // For automation\r\n  VERIFY_TYPOSQUAT_SERVER: 18, // For watchdog automation\r\n  GET_ALL_WA_SETTINGS: 19, // For automation extension\r\n  SET_STORAGE_PROPERTY: 20, // Set a local storage property within WA\r\n  GET_STORAGE_PROPERTY: 21, // Get a local storage property within WA (for automation)\r\n  REINIT_SCHEDULED_TASKS: 22,\r\n  OPEN_SETTINGS: 23, // For personal protection hub\r\n  OPEN_ACTION_PANEL: 24, // For personal protection hub\r\n  GET_MEMORY_FOOTPRINT: 26, // For automation, endurance run\r\n  ENDURANCE_TEST_RESET: 27, // For automation, endurance run\r\n  FORM_DETECTION_RESULT: 28,\r\n  SHOW_UNUSED_SELECTORS: 29, // For automation\r\n  SET_MTI_GLOBALS: 30\r\n};\r\n\r\nexport const ExternalResponse = {\r\n  PONG: 0,\r\n};\r\n","export default class HandlePromise\r\n{\r\n  static handlePromiseMessage(message, customCallback = null)\r\n  {\r\n    const defaultCallback = (resolve, reject, data) =>\r\n    {\r\n      if (chrome.runtime.lastError) reject(chrome.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      chrome.runtime.sendMessage(message, (data) =>\r\n      {\r\n        if (typeof customCallback === 'function') customCallback(resolve, reject, data);\r\n        else defaultCallback(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\r\nimport { BackgroundCommands, ContentCommands } from '@extension/common/commands';\r\nimport HandlePromise from '@extension/common/handle_promise';\r\n\r\n/**\r\n * Handles communication from content process to the background process.\r\n */\r\nexport default class BackgroundIPC\r\n{\r\n  static cacheStore(action, data)\r\n  {\r\n    const command = BackgroundCommands.CACHE_STORE;\r\n    return HandlePromise.handlePromiseMessage({ command, action, data });\r\n  }\r\n\r\n  static isFrameBlocked(url)\r\n  {\r\n    const command = BackgroundCommands.IS_FRAME_BLOCKED;\r\n    return HandlePromise.handlePromiseMessage({ command, url });\r\n  }\r\n\r\n  static makeMTIRequest(requestData, referer)\r\n  {\r\n    const command = BackgroundCommands.TI_REQUEST;\r\n    const request = { command, requestData, referer };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static executeCommand(commandId, params)\r\n  {\r\n    const command = BackgroundCommands.EXECUTE_COMMAND;\r\n    extension.runtime.sendMessage({ command, commandId, params });\r\n  }\r\n\r\n  static focusOrCreateTab(url)\r\n  {\r\n    const command = BackgroundCommands.FOCUS_OR_CREATE_TAB;\r\n    extension.runtime.sendMessage({ command, url });\r\n  }\r\n\r\n  static closeTab()\r\n  {\r\n    const command = BackgroundCommands.REMOVE_TAB;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static whitelist(action, type, data)\r\n  {\r\n    const command = BackgroundCommands.WHITELIST;\r\n    return HandlePromise.handlePromiseMessage({ action, command, type, data });\r\n  }\r\n\r\n  static getPopupData()\r\n  {\r\n    const command = BackgroundCommands.GET_POPUP_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getSettingsData()\r\n  {\r\n    const command = BackgroundCommands.GET_SETTINGS_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static searchAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static socialMediaAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SOCIAL_MEDIA_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static async getBkGlobals(bIncludeSearchEngines = false)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const command = BackgroundCommands.GET_BK_GLOBALS;\r\n      const promise = HandlePromise.handlePromiseMessage({ command, bIncludeSearchEngines });\r\n      promise.then((val) => { resolve(JSON.parse(val)); });\r\n    });\r\n  }\r\n\r\n  static viewSiteReport(url = null, showInNewTab = false)\r\n  {\r\n    const command = BackgroundCommands.VIEW_SITE_REPORT;\r\n    extension.runtime.sendMessage({ command, url, showInNewTab });\r\n  }\r\n\r\n  static getTypoSquattingData(domain)\r\n  {\r\n    const command = BackgroundCommands.GET_TYPOSQUATTING_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command, domain });\r\n  }\r\n\r\n  static getPlaceholderText(id)\r\n  {\r\n    const command = BackgroundCommands.PLACEHOLDER_TEXT;\r\n    return HandlePromise.handlePromiseMessage({ command, id });\r\n  }\r\n\r\n  static setViewPort(x, y)\r\n  {\r\n    const command = BackgroundCommands.SET_VIEWPORT;\r\n    extension.runtime.sendMessage({ command, x, y });\r\n  }\r\n\r\n  static sendTelemetry(telemetry)\r\n  {\r\n    const command = BackgroundCommands.SEND_TELEMETRY;\r\n    extension.runtime.sendMessage({ command, telemetry });\r\n  }\r\n\r\n  static anyBlockedIframes(frameUrls)\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_IFRAMES;\r\n    return HandlePromise.handlePromiseMessage({ command, frameUrls });\r\n  }\r\n\r\n  static anyBlockedCryptoScripts()\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_CRYPTOSCRIPTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static resetSettings()\r\n  {\r\n    const command = BackgroundCommands.RESET_SETTINGS;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static sendEngineStat(engine)\r\n  {\r\n    extension.runtime.sendMessage({ command: BackgroundCommands.UPDATE_ENGINE_STATS, engine });\r\n  }\r\n\r\n  static contentHandler(message)\r\n  {\r\n    const command = BackgroundCommands.CONTENT_HANDLER;\r\n    extension.runtime.sendMessage({ command, message });\r\n  }\r\n\r\n  static getTabData(payload = {})\r\n  {\r\n    const command = BackgroundCommands.GET_TAB_DATA;\r\n    const request = { command, ...payload };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static isWhitelisted(url)\r\n  {\r\n    const command = BackgroundCommands.IS_WHITELISTED;\r\n    const request = { command, url };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static getExtensionStatus(id)\r\n  {\r\n    return HandlePromise.handlePromiseMessage({ command: BackgroundCommands.GET_EXTENSION_STATUS, extension_id: id });\r\n  }\r\n\r\n  static unblockAllIframes()\r\n  {\r\n    const command = BackgroundCommands.UNBLOCK_ALL_IFRAMES;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateRatDetectionShowingFlag(showed)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_RAT_DETECTION_SHOWING_FLAG;\r\n    extension.runtime.sendMessage({ command, showed });\r\n  }\r\n\r\n  /**\r\n   * Send a message to the background to retrieve the results from Search Suggestion for the search term\r\n   *\r\n   * @param {String} searchTerm\r\n   */\r\n  static getSearchSuggest(searchTerm)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_SUGGEST;\r\n    const request = { command, searchTerm };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static resetNativeSetting(setting)\r\n  {\r\n    const command = BackgroundCommands.RESET_NATIVE_SETTING;\r\n    extension.runtime.sendMessage({ command, setting });\r\n  }\r\n\r\n  /**\r\n   * Save form info (logging info)\r\n   * @param {string} username - username entered in the form.\r\n   * @param {string} hostname - hostname of the page the form was submitted on.\r\n   */\r\n  static saveFormInfo(username, hostname)\r\n  {\r\n    const command = BackgroundCommands.SAVE_FORM_INFO;\r\n    extension.runtime.sendMessage({ command, username, hostname });\r\n  }\r\n\r\n  /**\r\n   * Send message to the backend to save login from multi-step detection\r\n   * @param {Object} data - Object containing the neccesary info from the form.\r\n   * @param {string} data.username - (optional) username entered into the form. Only supplied if login not complete, ie first step of multistep form.\r\n   * @param {string} data.hostanme - hostname of the page the form was submitted on.\r\n   * @param {Boolean} completeLogin - Whether or not the multistep login process is completed or not.\r\n   */\r\n  static saveMultiStepLogin(data, completeLogin)\r\n  {\r\n    const command = BackgroundCommands.SAVE_MULTISTEP_LOGIN;\r\n    extension.runtime.sendMessage({ command, data, completeLogin });\r\n  }\r\n\r\n  static getFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.GET_FORM_INFO_CACHE;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static clearFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.CLEAR_FORM_INFO_CACHE;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  /**\r\n   * Update list of emails to be excluded from DWS offering.\r\n   * The email is whitelisted either because the user said not to offer it again, or because the user\r\n   * added it to be monitored in the web portal.\r\n   * @param {*} email\r\n   */\r\n  static updateDWSWhitelist(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_WHITELIST;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.GET_CACHED_DWS_INFO;\r\n    const request = { command, email };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static clearCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.CLEAR_CACHED_DWS_INFO;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static updateDWSShown(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_SHOWN;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getAPSDetails()\r\n  {\r\n    const command = BackgroundCommands.GET_APS_DETAILS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static signUpFormDetected()\r\n  {\r\n    const command = BackgroundCommands.SIGN_UP_FORM_DETECTED;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateBkNativeSettings(name, value)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_BK_NATIVE_SETTINGS;\r\n    extension.runtime.sendMessage({ command, name, value });\r\n  }\r\n\r\n  static launchIDPSLogin()\r\n  {\r\n    const command = BackgroundCommands.LAUNCH_IDPS_LOGIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static showSidebarMain()\r\n  {\r\n    const command = BackgroundCommands.SHOW_SIDEBAR_MAIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static setFFPolicyCollection({ personal, activity })\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_COLLECTION;\r\n    extension.runtime.sendMessage({ command, personal, activity });\r\n  }\r\n\r\n  static setFFPolicyLastShown()\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_LAST_SHOWN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  // This will broadcast a sendMessage to all page owned by us\r\n  // For example, to all foreground pages. A message will be sent to\r\n  // background as well but it will not be processed\r\n  static broadcastToForeground(payload)\r\n  {\r\n    const command = ContentCommands.BROADCAST_TO_FOREGROUND;\r\n    extension.runtime.sendMessage({ command, payload });\r\n  }\r\n\r\n  static getFDWeights()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_WEIGHTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDExceptions()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_EXCEPTIONS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDCrfParams()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_CRF_PARAMS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n}\r\n","export default class ScriptBase\r\n{\r\n  constructor(pingCommand)\r\n  {\r\n    this.pingCommand = pingCommand;\r\n    this.basePingListener();\r\n  }\r\n\r\n  basePingListener(callback = null)\r\n  {\r\n    chrome.runtime.onMessage.addListener((request, sender, responseCb) =>\r\n    {\r\n      if (sender.id !== chrome.runtime.id)\r\n      {\r\n        return;\r\n      }\r\n\r\n      const { command } = request;\r\n      if (command === this.pingCommand)\r\n      {\r\n        responseCb({ content: true });\r\n        if (typeof callback === 'function') callback();\r\n      }\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Wrapper class making the http request call (using the built-in Fetch api).\r\n * Handling normal and exception cases.\r\n */\r\nexport default class HttpService\r\n{\r\n  onHttpResponse(response)\r\n  {\r\n    if (!response.ok)\r\n    {\r\n      const message = `HttpService Status: ${response.status}\\nError Text: ${response.statusText}`;\r\n      return Promise.reject(new Error(message));\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  sendHttpRequest({ url, headers, body, method = 'GET' })\r\n  {\r\n    return fetch(url, { headers, method, body }).then(this.onHttpResponse);\r\n  }\r\n}\r\n","export const SocialMediaTypes = {\r\n  NONE: 0,\r\n  LINKEDIN: 1,\r\n  INSTAGRAM: 2,\r\n  YOUTUBE: 4,\r\n  FACEBOOK: 8,\r\n  TWITTER: 16,\r\n  REDDIT: 32\r\n};\r\n\r\n// Sum of all Social Media Types\r\nexport const SocialMediaAllTypes = Object.values(SocialMediaTypes).reduce((sum, value) => sum + value);\r\n\r\nexport const SocialMediaActions = {\r\n  TOGGLE_ON: 'TOGGLE_ON',\r\n  TOGGLE_OFF: 'TOGGLE_OFF',\r\n  ANNOTATION_ENABLE_ALL: 'ANNOTATION_ENABLE_ALL',\r\n  ANNOTATION_DISABLE_ALL: 'ANNOTATION_DISABLE_ALL',\r\n  ANNOTATION_ENABLE: 'ANNOTATION_ENABLE',\r\n  ANNOTATION_DISABLE: 'ANNOTATION_DISABLE',\r\n  GET: 'GET',\r\n};\r\n","export const SearchAnnotationActions = {\r\n  GET: 'GET',\r\n  SET: 'SET',\r\n};\r\n\r\nexport const AnnotationOptions = {\r\n  NONE: 'NONE',\r\n  ONLY_SECURE_SEARCH: 'ONLY_SECURE_SEARCH',\r\n  ALL: 'ALL',\r\n  * [Symbol.iterator]() // Override the iterable protocol to allow spreading of keys (...AnnotationOptions)\r\n  {\r\n    for (const key of Object.keys(this))\r\n    {\r\n      yield key;\r\n    }\r\n  }\r\n};\r\n\r\n// DO NOT CHANGE the number for the search engine types\r\n// Some of these numbers are mapped to native's search providers\r\nexport const SearchEngineTypes = {\r\n  UNKNOWN: 0,\r\n  // Search engine annotations\r\n  GOOGLE: 1,\r\n  YAHOO: 2,\r\n  AOL: 3,\r\n  ASK: 4,\r\n  UOL: 5,\r\n  GOO: 6,\r\n  MYWAY: 7,\r\n  TERRA: 8,\r\n  WEB: 9,\r\n  BIGLOBE: 10,\r\n  GMX: 11,\r\n  EXCITE: 12,\r\n  SKY: 13,\r\n  NAVER: 14,\r\n  NIFTY: 15,\r\n  RAKUTEN: 16,\r\n  IXQUICK: 17,\r\n  XFINITY: 18,\r\n  SOGOU: 19,\r\n  DOGPILE: 20,\r\n  SEARCH: 21,\r\n  WEBCRAWLER: 22,\r\n  BING: 23,\r\n  INFO: 24,\r\n  YANDEX: 25,\r\n  YIPPY: 26, // No longer supported\r\n  WOW: 27,\r\n  HAOSO: 28,\r\n  DUCKDUCKGO: 30,\r\n  ONESEARCH: 31,\r\n  // Social media annotations\r\n  LINKEDIN: 100,\r\n  FACEBOOK: 101,\r\n  YOUTUBE: 102,\r\n  INSTAGRAM: 103,\r\n  REDDIT: 104,\r\n  TWITTER: 105,\r\n};\r\n\r\nexport const EngineType = {\r\n  SEARCH: 0,\r\n  SOCIALMEDIA: 1,\r\n};\r\n","import { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\n\r\nconst { NONE, ...NonZeroSocialMediaTypes } = SocialMediaTypes;\r\n\r\nexport const CacheStoreActions = {\r\n  SET: 'SET',\r\n  GET: 'GET',\r\n  CLEAR: 'CLEAR',\r\n};\r\n\r\n// All keys must be same as value\r\n// Stored in browser storage\r\nexport const LocalStorageVariables = {\r\n  // Number of times the first variant of yellow block page sidebar has been shown\r\n  BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Did user accept SS in the past\r\n  // Sidebar Action Panels related\r\n  BLOCK_PAGE_RED_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_RED_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Whitelist related\r\n  BLOCK_PAGE_WHITELIST: {\r\n    name: 'BLOCK_PAGE_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Number of times the first variant of red block page sidebar has been shown\r\n  BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // blockpage whitelisted sites\r\n  CRYPTO_WHITELIST: {\r\n    name: 'CRYPTO_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Telemetry related\r\n  ENGINE_DOWNLOAD_TASK: {\r\n    name: 'ENGINE_DOWNLOAD_TASK',\r\n    type: 'object'\r\n  },\r\n  // Engine JSON\r\n  ENGINES: {\r\n    name: 'ENGINES',\r\n    type: 'object'\r\n  },\r\n  ENGINES_FUTURE_TIME: { // TODO: Might not need - not being used\r\n    name: 'ENGINES_FUTURE_TIME',\r\n    type: 'object'\r\n  },\r\n  ENGINES_VERSION: {\r\n    name: 'ENGINES_VERSION',\r\n    type: 'string'\r\n  },\r\n  EXTENSION_LOGGING: {\r\n    name: 'EXTENSION_LOGGING',\r\n    options: [0, 1, 2, 3, 4],\r\n    type: 'number'\r\n  },\r\n  USE_NATIVE_LOGGER: {\r\n    name: 'USE_NATIVE_LOGGER',\r\n    type: 'boolean'\r\n  },\r\n  EXTN_UUID2: {\r\n    name: 'EXTN_UUID2',\r\n    type: 'string'\r\n  },\r\n\r\n  IFRAME_BLOCK_FIRST_TIME: {\r\n    name: 'IFRAME_BLOCK_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  LAST_HEARTBEAT_SENT: { // TODO: Might not need - not being used\r\n    name: 'LAST_HEARTBEAT_SENT',\r\n    type: 'object'\r\n  },\r\n  POPUP_STATS: {\r\n    name: 'POPUP_STATS',\r\n    type: 'object'\r\n  },\r\n  POST_INSTALLATION_PAGE_SHOWED: { // TODO: Might not need - not being used\r\n    name: 'POST_INSTALLATION_PAGE_SHOWED',\r\n    type: 'object'\r\n  },\r\n  RAT_DETECTION_WHITELIST: {\r\n    name: 'RAT_DETECTION_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  SEARCH_ANNOTATION_OPTION: {\r\n    name: 'SEARCH_ANNOTATION_OPTION',\r\n    options: [...AnnotationOptions],\r\n    type: 'string'\r\n  },\r\n  // Used as a flag to show SMA Notification for the first time only\r\n  SMA_ANNOTATION_OPTIONS: {\r\n    name: 'SMA_ANNOTATION_OPTIONS',\r\n    options: { ...NonZeroSocialMediaTypes }, // Objects signify checkboxes\r\n    type: 'number'\r\n  },\r\n  // SMA options the user has selected\r\n  SMA_USER_TOGGLE: {\r\n    name: 'SMA_USER_TOGGLE',\r\n    type: 'boolean'\r\n  },\r\n  TELEMETRY_HEARTBEAT_TASK: { // TODO: Complete definition\r\n    name: 'TELEMETRY_HEARTBEAT_TASK',\r\n    type: 'object'\r\n  },\r\n  TYPOSQUATTING_WHITELIST: {\r\n    name: 'TYPOSQUATTING_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  CACHE_TYPOSQUATTING: {\r\n    name: 'CACHE_TYPOSQUATTING',\r\n    type: 'object'\r\n  },\r\n  CACHE_GTI: {\r\n    name: 'CACHE_GTI',\r\n    type: 'object'\r\n  },\r\n  CACHE_TAB_DATA: {\r\n    name: 'CACHE_TAB_DATA',\r\n    type: 'object'\r\n  },\r\n  // Flag to indicate whether to retrieve block page whitelist from native\r\n  USER_NATIVE_STATS: {\r\n    name: 'USER_NATIVE_STATS',\r\n    type: 'boolean'\r\n  },\r\n  // stats for what we have done for the user - shown on popup\r\n  WHITELIST_FLAG: {\r\n    name: 'WHITELIST_FLAG',\r\n    type: 'boolean'\r\n  },\r\n  // DWS Info\r\n  DWS_INFO: {\r\n    name: 'DWS_INFO',\r\n    type: 'object'\r\n  },\r\n  // list of emails already monitored or whitelisted by the user.\r\n  DWS_WHITELIST: {\r\n    name: 'DWS_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  DWS_UNIQUE_EMAILS: {\r\n    name: 'DWS_UNIQUE_EMAILS',\r\n    type: 'array'\r\n  },\r\n  APS_TOAST_FIRST_TIME: {\r\n    name: 'APS_TOAST_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  APS_FULL_MSG_SHOWN_ARRAY: {\r\n    name: 'APS_FULL_MSG_SHOWN_ARRAY',\r\n    type: 'array'\r\n  },\r\n  // Firefox user policy consent\r\n  FF_POLICY_PERSONAL_COLLECTION: {\r\n    name: 'FF_POLICY_PERSONAL_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_ACTIVITY_COLLECTION: {\r\n    name: 'FF_POLICY_ACTIVITY_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_LAST_SHOWN: {\r\n    name: 'FF_POLICY_LAST_SHOWN',\r\n    type: 'number'\r\n  },\r\n  // WA Affid\r\n  WA_AFFID: {\r\n    name: 'WA_AFFID',\r\n    type: 'number'\r\n  },\r\n  // APS TOGGLE SETTING\r\n  APS_TOGGLE_SETTING: {\r\n    name: 'APS_TOGGLE_SETTING',\r\n    type: 'boolean'\r\n  },\r\n  // ANNOTATION JOURNEY TOAST\r\n  AJ_TOAST: {\r\n    name: 'AJ_TOAST',\r\n    type: 'boolean'\r\n  },\r\n  AJ_APS_ENABLE: {\r\n    name: 'AJ_APS_ENABLE',\r\n    type: 'number'\r\n  },\r\n\r\n  HTI_THROTTLE: {\r\n    name: 'HTI_THROTTLE',\r\n    type: 'number'\r\n  },\r\n\r\n  IS_HTI: {\r\n    name: 'IS_HTI',\r\n    type: 'boolean'\r\n  },\r\n};\r\n\r\n// In memory only, not in browser storage, reset upon browser restart\r\nexport const CacheStorageVariables = {\r\n  // RAT Detection related:\r\n  RAT_DETECTION_SHOWING: {\r\n    name: 'RAT_DETECTION_SHOWING',\r\n    type: 'object'\r\n  },\r\n  // Form detection\r\n  FORM_INFO: {\r\n    name: 'FORM_INFO',\r\n    type: 'object'\r\n  },\r\n  SAVE_MULTI_STEP_LOGIN: {\r\n    name: 'SAVE_MULTI_STEP_LOGIN',\r\n    type: 'object'\r\n  },\r\n  APS_EMAIL_LINKS: {\r\n    name: 'APS_EMAIL_LINKS',\r\n    type: 'array'\r\n  },\r\n  WSS_EMAIL: {\r\n    name: 'WSS_EMAIL',\r\n    type: 'string'\r\n  }\r\n};\r\n","import { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n\r\n/**\r\n * Tab data class and it's helper functions\r\n */\r\nexport default class TabData\r\n{\r\n  // Values that will get reset everytime we nativagate to a new page\r\n  static getResetValues()\r\n  {\r\n    return { blockedIframes: [], cryptoBlockData: null, tabDomainTrusted: false };\r\n  }\r\n\r\n  static getDefaultValues()\r\n  {\r\n    return TabData.getResetValues();\r\n  }\r\n\r\n  reset(tabId)\r\n  {\r\n    this.update(tabId, TabData.getResetValues());\r\n  }\r\n\r\n  get(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    return cache[tabId] || TabData.getDefaultValues();\r\n  }\r\n\r\n  set(tabId, newTabData)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    cache[tabId] = newTabData;\r\n    BackgroundGlobals.cacheStore.set(LocalStorageVariables.CACHE_TAB_DATA.name, cache);\r\n  }\r\n\r\n  delete(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    delete (cache[tabId]);\r\n  }\r\n\r\n  update(tabId, newTabData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, ...newTabData });\r\n  }\r\n\r\n  setTabBlockPageData(tabId, blockPageData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, blockPageData });\r\n  }\r\n\r\n  addBlockedFrame(tabId, value)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes.push(value);\r\n  }\r\n\r\n  getBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    return currentTabData.blockedIframes;\r\n  }\r\n\r\n  resetBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes = [];\r\n  }\r\n}\r\n","/**\r\n * The different webpage/url states that exists within WebAdvisor\r\n */\r\nexport const BlockState = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  TYPOSQUATTING: 5,\r\n  PHISHING: 6,\r\n  * [Symbol.iterator]() // Create an iterable that returns all the \"bad\" states\r\n  {\r\n    for (const prop of Object.keys(this))\r\n    {\r\n      if (prop !== 'GREEN' && prop !== 'UNKNOWN')\r\n      {\r\n        yield this[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * The browsers that WebAdvisor supports\r\n */\r\nexport const BrowserType = {\r\n  UNKNOWN: -1,\r\n  FIREFOX: 1,\r\n  CHROME: 2,\r\n  EDGE: 3\r\n};\r\n\r\n/**\r\n * The default settings for extension. These settings are overrided at build time\r\n */\r\nexport const BuildSettings = {\r\n  /* eslint-disable no-undef */\r\n  BROWSER_TYPE: WEBPACK_BROWSER_TYPE,\r\n  DEBUG_MODE: WEBPACK_DEBUG_MODE,\r\n  EXTENSION_VERSION: WEBPACK_EXTN_VERSION,\r\n  LOG_LEVEL: WEBPACK_LOG_LEVEL,\r\n  ENGINES_VERSION: WEBPACK_ENGINES_VERSION,\r\n  YEAR: WEBPACK_YEAR,\r\n  /* eslint-enable no-undef */\r\n};\r\n\r\n/**\r\n * Values to let the native know which Block Page type was shown\r\n */\r\nexport const WPSBlockPageType = {\r\n  Red: 1,\r\n  Yellow: 2,\r\n  Phishing: 3,\r\n  Typoquatting: 4,\r\n  iFrame: 5,\r\n  Crypto: 6,\r\n};\r\n\r\n/**\r\n * Every possible color status shown on WebAdvisor\r\n */\r\nexport const Color = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  DISABLED: 5,\r\n};\r\n\r\n/**\r\n * The different commands that can be executed in the application\r\n */\r\nexport const ExecuteCommands = {\r\n  RAISE_NEW_TAB_EVENT: 3,\r\n  UPDATE_CACHE_STATS: 4 // deprecated.\r\n};\r\n\r\n/**\r\n * The corresponding color values for browser action icon\r\n */\r\nexport const BrowseActionColors = {\r\n  [Color.GREEN]: 'GREEN',\r\n  [Color.YELLOW]: 'YELLOW',\r\n  [Color.RED]: 'RED',\r\n  [Color.UNKNOWN]: 'WHITE',\r\n  [Color.DISABLED]: 'DISABLED',\r\n};\r\n\r\n/**\r\n * The score value ranges that determine the outcome of a webpage's safety\r\n */\r\nexport const Score = {\r\n  CLEAN: 70, // Green\r\n  UNVERIFIED: 30, // Yellow\r\n  DIRTY: 1, // Red\r\n}; // Default Grey (0)\r\n\r\n/**\r\n * Constructs a new object with the object key and values swapped.\r\n * @param   {Object} original - The original object to swap the key and values\r\n * @returns {Object} - The new constructed object with the key and values swapped\r\n */\r\nexport const swapObjectPropertyAndValues = (original) =>\r\n{\r\n  const swapped = {};\r\n\r\n  Object.keys(original).forEach((prop) =>\r\n  {\r\n    swapped[original[prop]] = prop;\r\n  });\r\n\r\n  return swapped;\r\n};\r\n\r\nexport const SEARCH_EXTENSION_DOWNLOAD_URLS = {\r\n  FF: 'https://sadownload.mcafee.com/products/SA/Win/xpi/searchextension/searchextension.xpi',\r\n};\r\n\r\nexport const SEARCH_EXTENSION_STORE_URLS = {\r\n  CH: 'https://chrome.google.com/webstore/detail/mcafee%C2%AE-secure-search/enppghjcblldgigemljohkgpcompnjgh',\r\n  ED: 'https://microsoftedge.microsoft.com/addons/detail/dbghilognjpbmkdcpjgodiieiflmlaeb'\r\n};\r\n\r\n// generate a range of numbers for using in WhitelistedKeys' codes\r\nexport const KEY_CODES_RANGE = (start, end) => Array.from(Array(end + 1).keys()).slice(start);\r\n\r\nexport const SEARCH_URL = {\r\n  YAHOO: 'https://search.yahoo.com/search?fr=mcafee&type=C040US0D19700101&p=',\r\n  BING: 'https://www.bing.com/search?partnercode=MC99&q=',\r\n};\r\n","export const BackgroundConstants = {\r\n  MAX_CACHE_RECORDS: 1000,\r\n  MAX_RESERVED_CALLBACK_ID: 5,\r\n  PHISHING_CATEGORY: 'ph',\r\n  SITE_ADVISOR_URL: 'www.siteadvisor.com/',\r\n  GTI_SERVER: 'https://webadvisorc.rest.gti.mcafee.com/1',\r\n  TYPOSQUATTING_SERVER: 'https://mip.api.mcafeewebadvisor.com/v1/typosquatting?',\r\n  ENGINE_VERSION_URL: 'https://sadownload.mcafee.com/products/SA/Win/extensions/engines/update.json',\r\n  HTI_SERVER: 'https://threat.api.mcafee.com/',\r\n};\r\n\r\n// Add 'watlab1.mcafee.int' to the list for testing.\r\nexport const TrustedDomains = new Set([\r\n  'www.mcafee.com',\r\n]);\r\n\r\nexport const CryptoBlacklist = [\r\n  'wss://*.gasolina.ml/*',\r\n  '*://kissdoujin.com/Content/js/c-hive.js*',\r\n  'wss://*.sen-to-zdrowie.ml/*',\r\n  '*://cookiescript.info/libs/*',\r\n  '*://rocks.io/assets/*',\r\n  '*://coin-have.com/c/*',\r\n  '*://coinnebula.com/lib/*',\r\n  'wss://*.coin-have.com/',\r\n  'ws://digger.cryptobara.com/*',\r\n  'ws://*.webminepool.tk/*',\r\n  '*://*.lewd.ninja/static/m.js*',\r\n  '*://tokyodrift.ga/dropyoulike/a-o/*',\r\n  '*://*.2giga.link/hive/lib/*',\r\n  '*://papoto.com/lib/*',\r\n  '*://load.jsecoin.com/*',\r\n  'ws://*.1q2w3.fun/*',\r\n  '*://*/*plugins/ajcryptominer/assets/*',\r\n  '*://monerominer.rocks/miner.php*',\r\n  '*://minemytraffic.com/*',\r\n  '*://*.monerise.com/core/*',\r\n  '*://*.cookiescript.info/libs/*',\r\n  'ws://hive.tubetitties.com/*',\r\n  'wss://*.freecontent.racing/*',\r\n  'wss://*.hodling.faith/*',\r\n  'ws://gtg02.bestsecurepractice.com/proxy',\r\n  '*://cryptoloot.pro/lib/*',\r\n  '*://lmodr.biz/*',\r\n  '*://*.webminepool.com/lib/base.js',\r\n  'ws://*.sen-to-zdrowie.ml/*',\r\n  'ws://*.morningdigit.com/*',\r\n  '*://mine.nahnoji.cz/*',\r\n  '*://*.minescripts.info/*',\r\n  '*://jsecoin.com/server*',\r\n  '*://coinhive.com/lib*',\r\n  'wss://*.webminepool.tk/*',\r\n  'ws://*.monerise.com/proxy/*',\r\n  '*://kisshentai.net/Content/js/c-hive.js*',\r\n  '*://mataharirama.xyz/*',\r\n  '*://*.coinpirate.cf/*',\r\n  'ws://*.playerassets.info/*',\r\n  'wss://*.1q2w3.fun/*',\r\n  '*://*.1q2w3.fun/*',\r\n  '*://anime.reactor.cc/js/ch/cryptonight.wasm*',\r\n  '*://webmine.cz/miner*',\r\n  'wss://ws.l33tsite.info/*',\r\n  '*://coinhive.com/captcha*',\r\n  'wss://www.mutuza.win/proxy',\r\n  '*://*.morningdigit.com/*',\r\n  'ws://*.host.d-ns.ga/*',\r\n  '*://*.doubleclick5.xyz/*',\r\n  '*://miner.pr0gramm.com/xmr.min.js*',\r\n  '*://*.freecontent.bid/*',\r\n  'ws://lewd.ninja/comics/*',\r\n  'wss://*.monerise.com:9333/proxy/*',\r\n  '*://*.webminepool.com/lib/captcha.js',\r\n  '*://coinerra.com/lib/*',\r\n  '*://*.playerassets.info/*',\r\n  'wss://*.webmine.pro/*',\r\n  'wss://lewd.ninja/comics/*',\r\n  '*://*.doubleclick1.xyz/*',\r\n  'ws://*.freecontent.racing/*',\r\n  '*://*.googleanalytcs.com/*',\r\n  'wss://*.coinnebula.com/proxy*',\r\n  'ws://*.monerise.com:9333/proxy/*',\r\n  'ws://*.freecontent.loan/*',\r\n  '*://party-nngvitbizn.now.sh/*',\r\n  'wss://api.l33tsite.info/*',\r\n  '*://coinlab.biz/lib/coinlab.js*',\r\n  'wss://*.monerise.com/proxy/*',\r\n  'ws://www.mutuza.win/proxy',\r\n  '*://jscdndel.com/content/vidm.min.js*',\r\n  '*://listat.biz/*',\r\n  '*://minecrunch.co/web/*',\r\n  'ws://*.chainblock.science/*',\r\n  '*://baiduccdn1.com/lib/*',\r\n  '*://*.mutuza.win/worker.js',\r\n  '*://*.load.jsecoin.com/*',\r\n  '*://ppoi.org/lib/*',\r\n  'wss://*.chainblock.science/*',\r\n  'wss://*.crypto-loot.com/proxy*',\r\n  'wss://gtg02.bestsecurepractice.com/proxy',\r\n  'wss://*.coinhive.com/proxy*',\r\n  '*://coin-hive.com/captcha*',\r\n  '*://jsccnn.com/content/vidm.min.js*',\r\n  '*://monerominer.rocks/scripts/miner.js*',\r\n  '*://*.jsecoin.com/server*',\r\n  '*://server.jsecoin.com/*',\r\n  'wss://*.coin-hive.com/proxy*',\r\n  '*://*.doubleclick4.xyz/*',\r\n  '*://miner.cryptobara.com/client/*',\r\n  '*://*.rocks.io/assets/*',\r\n  '*://*.ppoi.org/lib/*',\r\n  '*://you.tubetitties.com/worker.js*',\r\n  'wss://*.googleanalytcs.com/*',\r\n  'wss://hive.tubetitties.com/*',\r\n  '*://static.reasedoper.pw/*',\r\n  '*://*.ppoi.org/token/*',\r\n  'ws://*.webmine.pro/*',\r\n  '*://you.tubetitties.com/hash.wasm*',\r\n  '*://*.doubleclick3.xyz/*',\r\n  '*://*.turnsocial.com/m.js',\r\n  'ws://*.hodling.faith/*',\r\n  'wss://*.morningdigit.com/*',\r\n  '*://*.ad-miner.com/lib/*',\r\n  'wss://*.2giga.link/wproxy*',\r\n  'ws://*.googleanalytcs.com/*',\r\n  '*://*.doubleclick6.xyz/*',\r\n  'ws://turnsocial.now.sh/*',\r\n  '*://cdn.cloudcoins.co/javascript/cloudcoins.min.js*',\r\n  '*://joyreactor.cc/ws/ch/*',\r\n  '*://minero.pw/miner.min.js*',\r\n  '*://*.webmine.pro/*',\r\n  '*://punchsub.net/chm.js',\r\n  'wss://mine.nahnoji.cz/*',\r\n  'wss://mine.torrent.pw/*',\r\n  '*://*.mutuza.win/lib/*',\r\n  '*://*.kickass.cd/power2/m.js',\r\n  'ws://*.cpu2cash.link/*',\r\n  '*://*.server.jsecoin.com/*',\r\n  '*://*.mutuza.win/processor.js',\r\n  'wss://turnsocial.now.sh/*',\r\n  '*://kiwifarms.net/js/Jawsh/xmr/xmr.min.js*',\r\n  '*://*.rocks.io/proxy*',\r\n  '*://crypto-loot.com/lib*',\r\n  '*://*.chmproxy.bid/lib/*',\r\n  'ws://*.gasolina.ml/*',\r\n  '*://*.stackpathdns.com/assets/javascript/cr.js',\r\n  '*://*.coinblind.com/lib/*',\r\n  '*://miner.pr0gramm.com/pm.min.js*',\r\n  '*://*.bewhoyouare.gq/*',\r\n  'wss://*.zlx.com.br/proxy*',\r\n  '*://a-o.ninja/apk-AO/kingofthenorth/*',\r\n  '*://ad-miner.com/lib/*',\r\n  '*://*.webminepool.com/api/*',\r\n  '*://*.cpu2cash.link/*',\r\n  '*://*.hemnes.win/*',\r\n  'wss://*.cpu2cash.link/*',\r\n  'ws://*.coinpirate.cf/*',\r\n  'ws://ws.l33tsite.info/*',\r\n  '*://digger.cryptobara.com/client/*',\r\n  '*://kickass.cd/m.js*',\r\n  'ws://*.zlx.com.br/proxy*',\r\n  '*://*.doubleclick2.xyz/*',\r\n  '*://*.amazonaws.com/doubleclick13/*',\r\n  'wss://*.freecontent.loan/*',\r\n  '*://*.host.d-ns.ga/*',\r\n  '*://*.candid.zone/youtube.com/*',\r\n  'ws://api.l33tsite.info/*',\r\n  '*://gtg2.bestsecurepractice.com/lib/*',\r\n  'wss://*.host.d-ns.ga/*',\r\n  '*://coin-hive.com/lib*',\r\n  'ws://mine.nahnoji.cz/*',\r\n  'wss://*.playerassets.info/*',\r\n  '*://*.afminer.com/code/*',\r\n  'wss://*.coinpirate.cf/*',\r\n  '*://cookiescriptcdn.pro/libs/*',\r\n  '*://*.goredirect.party/assets/*',\r\n  '*://*.ZLX.COM.BR/assets/min.js*',\r\n  '*://*.ZLX.COM.BR/assets/playermon.js*',\r\n  '*://p.hemnes.win/lib/*',\r\n  '*://gtg02.bestsecurepractice.com/proxy2/*',\r\n  '*://gtg02.bestsecurepractice.com/meri.js',\r\n  '*://gtg02.bestsecurepractice.com/lv.js',\r\n  '*://gtg02.bestsecurepractice.com/worker.js',\r\n  '*://gtg02.bestsecurepractice.com/processor.js',\r\n  '*://gtg02.bestsecurepractice.com/demo.html',\r\n  '*://*.turnsocial.com/c.wasm*',\r\n  '*://*.turnsocial.com/m.js*',\r\n  '*://cdn.minescripts.info/c/*',\r\n  '*://tokyodrift.ga/dropyoulike/backup/c.wasm*',\r\n  '*://punchsub.net/chm2.js',\r\n  '*://*.kickass.cd/webmr4.js',\r\n  '*://*.kickass.cd/m.js',\r\n  'wss://*.authedmine.com/proxy'\r\n];\r\n\r\nexport const RatBlacklist = [\r\n  {\r\n    domain: 'www.beamyourscreen.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.connectwise.com',\r\n    urls: [\r\n      'www.connectwise.com/platform/unified-management/control'\r\n    ],\r\n  },\r\n  {\r\n    domain: 'get.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'fastsupport.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.join.me',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.de',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.securelink.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'join.zoho.com',\r\n    urls: [],\r\n  }\r\n];\r\n\r\nexport const ApsUrlList = {\r\n  shopping:\r\n  {\r\n    'www.amazon.com':\r\n    {\r\n      paths: ['buy/payselect/handlers', 'buy/addressselect/handlers']\r\n    }\r\n  },\r\n  email:\r\n  {\r\n    'mail.google.com/mail':\r\n    {\r\n      selector: 'table[role=presentation] > tr div[data-message-id] a'\r\n    },\r\n    'outlook.live.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office365.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'mail.yahoo.com':\r\n    {\r\n      selector: 'div[role=main] ul li a'\r\n    },\r\n  }\r\n};\r\n","import { BrowserType, BuildSettings } from '@extension/common/constants';\r\n\r\nclass NativeSettingsPreprocess\r\n{\r\n  static PreprocessSecureSearchRegEx(value)\r\n  {\r\n    return value.trim().split('\\n');\r\n  }\r\n\r\n  static getBrowserSuffix()\r\n  {\r\n    const BROWSER_SUFFIX = {\r\n      CH: '_ch',\r\n      FF: '_ff',\r\n      IE: '_ie',\r\n      EDGE: '_ed',\r\n    };\r\n\r\n    const { CH, FF, EDGE } = BROWSER_SUFFIX;\r\n    const suffixBrowserMap = {};\r\n    suffixBrowserMap[BrowserType.EDGE] = EDGE;\r\n    suffixBrowserMap[BrowserType.FIREFOX] = FF;\r\n    suffixBrowserMap[BrowserType.CHROME] = CH;\r\n\r\n    return suffixBrowserMap[BuildSettings.BROWSER_TYPE];\r\n  }\r\n}\r\n\r\nexport const SCOPE = {\r\n  SYSTEM: 0,\r\n  USER: 1,\r\n};\r\nconst { SYSTEM, USER } = SCOPE;\r\n\r\nexport const SETTINGS_TYPE = {\r\n  NONE: 0,\r\n  INT: 1,\r\n  INT64: 2,\r\n  BOOL: 3,\r\n  STRING: 4,\r\n};\r\n\r\nexport const NativeConstants = {\r\n  WEBBOOST_AUTO_PLAY_NOTIFICATION: 'AutoPlayNotificationRequired',\r\n  WEBBOOST_UPSELL_DISABLED: 'WBUpsellDisabled', // TODO: re-introduce for WB Upsell\r\n  USE_NATIVE_LOGGER: 'UseNativeLogger',\r\n};\r\n\r\n// For retrieving native settings just change the one json object below. Access the nativeSettings value as eg BkGlobals.nativeSettings.AFF_ID.value\r\nconst _browser = NativeSettingsPreprocess.getBrowserSuffix();\r\nexport const NativeSettings = {\r\n  // Dev\r\n  DEV_MODE: { scope: SYSTEM, name: 'dev_mode', value: false },\r\n\r\n  // Product\r\n  AFF_ID: { scope: SYSTEM, name: '*Affid', value: 0 },\r\n  BINARY_VERSION: { scope: SYSTEM, name: 'version', value: null },\r\n  EXTENSION_VERSION_CH: { scope: SYSTEM, name: 'ChromeExtVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_FF: { scope: SYSTEM, name: '*FirefoxXPIVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_ED: { scope: SYSTEM, name: 'EdgeExtVersion', value: '', writeOnly: true },\r\n\r\n  // Machine\r\n  BROWSER_TYPE: { scope: SYSTEM, name: 'browsertype', value: '', writeOnly: true },\r\n  USER_AGENT: { scope: SYSTEM, name: 'useragent', value: '', writeOnly: true },\r\n\r\n  // Secure Search\r\n  SUGGESTION_URL: { scope: SYSTEM, name: 'suggestion_url', value: '' },\r\n  SCRIPT_GENERATED_DEFAULT_SS_URL: { scope: USER, name: `SCRIPT_GENERATED_DEFAULT_SS_URL${_browser}`, value: '' },\r\n  SECURE_SEARCH_REGEXES: { scope: USER, name: 'SECURE_SEARCH_REGEXES', value: '', preprocess: NativeSettingsPreprocess.PreprocessSecureSearchRegEx },\r\n  SHOW_SEARCH_SETTINGS: { scope: SYSTEM, name: '*ShowSearchSettings', value: true },\r\n  SECURE_SEARCH_TOAST_STAMP: { scope: USER, name: `*SSDateStampShowedToast${_browser}`, value: 0 },\r\n  SECURE_SEARCH_ANNOTATION_ONLY: { scope: SYSTEM, name: '*OnlyShowAnnotationsOnSecureSearch', value: true },\r\n  SECURE_SEARCH_SHOW_ICONS: { scope: USER, name: '*Icons', value: true },\r\n  SECURE_SEARCH_CHOICE: { scope: USER, name: `*SSToastChoice${_browser}`, value: false },\r\n  SS_DEF: { scope: SYSTEM, name: `*SS_DEF${_browser}`, value: 0 },\r\n  ANNOTATIONS_CHOICE_EXPLICIT: { scope: SYSTEM, name: `*AnnotationsChoiceExplicit${_browser}`, value: false },\r\n  CURRENT_SAO_IN_EXTENSION: { scope: USER, name: `*CurrentSAOInExtension${_browser}`, value: '' },\r\n\r\n  // Firefox Toast\r\n  FF_EXTENSION_LAST_TOAST_TIME: { scope: USER, name: 'ff_extension_last_toast_time', value: 0, writeOnly: true },\r\n  FF_EXTENSION_TOAST_COUNT: { scope: USER, name: 'ff_extension_toast_count', value: 0, writeOnly: true },\r\n\r\n  // Checklist Settings\r\n  CHECKLIST_START_INGORE_DATE_AV: { scope: SYSTEM, name: 'startIgnoreDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_START_IGNORE_DATE_FW: { scope: SYSTEM, name: 'startIgnoreDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_IGNORE_DURACTION: { scope: SYSTEM, name: 'ignoreDuration', value: '14', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_AV: { scope: SYSTEM, name: 'fixGracePeriodStartDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_FW: { scope: SYSTEM, name: 'fixGracePeriodStartDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_DURATION: { scope: SYSTEM, name: 'fixGracePeriodDuration', value: '24', writeOnly: true },\r\n\r\n  // Crypto\r\n  CRYPTOJACKING_DISABLED: { scope: SYSTEM, name: 'CryptojackingDisabled', value: false },\r\n\r\n  // SMA\r\n  SMA_USER_TOGGLE: { scope: SYSTEM, name: `sma_user_toggle${_browser}`, value: false, writeOnly: true },\r\n  SMA_ANNOTATION_OPTIONS: { scope: SYSTEM, name: `sma_annotation_options${_browser}`, value: 0, writeOnly: true },\r\n\r\n  // Stats\r\n  PAGES_SCANNED: { scope: SYSTEM, name: '*CounterPagesScanned', value: 0 },\r\n  PAGES_BLOCKED: { scope: SYSTEM, name: '*CounterPagesBlocked', value: 0 },\r\n  DOWNLOADS_SCANNED: { scope: SYSTEM, name: '*CounterDownloadsScanned', value: 0 },\r\n  DOWNLOADS_BLOCKED: { scope: SYSTEM, name: '*CounterDownloadsBlocked', value: 0 },\r\n  CRYPTO_BLOCKED: { scope: SYSTEM, name: '*CounterCryptoJackingBlocked', value: 0 },\r\n\r\n  // Native Whitelist\r\n  BLOCKPAGE_WHITELIST: { scope: USER, name: '*WhiteList', value: '' },\r\n  TS_WHITELIST: { scope: USER, name: '*TListWhiteList', value: '' },\r\n\r\n  // GTI\r\n  CSP_ID_SETTING: { scope: SYSTEM, name: 'CSPIdValue', value: '__not_available__' },\r\n\r\n  // Uninstall URL\r\n  UNINSTALL_SURVEY_ENABLED: { scope: SYSTEM, name: 'uninstall_survey_enabled', value: false },\r\n  UNINSTALL_SURVEY_URL: { scope: SYSTEM, name: 'uninstall_survey_url', value: '' },\r\n\r\n  // RAT Detection\r\n  RAT_DETECTION_ENABLED: { scope: SYSTEM, name: 'rat_detection_enabled', value: true },\r\n\r\n  // IDPS - enum type (0 = feature turned off | 1 = feature partially on, only for sending telemetry | 2 = feature turned on completely)\r\n  IDPS_FEATURE_ENABLED: { scope: SYSTEM, name: 'idps_feature_enabled', value: 0 },\r\n\r\n  // Advanced Protection Signal\r\n  APS_COHORT: { scope: SYSTEM, name: 'aps_cohort', value: 0 },\r\n  APS_TOGGLE_SETTING: { scope: SYSTEM, name: 'aps_toggle_setting', value: true },\r\n\r\n  // Alternative triggers\r\n  ALT_TRIGGER: { scope: SYSTEM, name: 'alt_triggers_cohort', value: 0 },\r\n\r\n  // Form detection optimization feature\r\n  IFRAME_FORM_CHECK_ENABLED: { scope: SYSTEM, name: 'iframe_form_check_enabled', value: true },\r\n\r\n  ANNOTATION_JOURNEY_COHORT: { scope: SYSTEM, name: `annotation_journey_cohort${_browser}`, value: 0 },\r\n  ANNOTATION_JOURNEY_TOAST: { scope: USER, name: `aj_toast${_browser}`, value: null },\r\n\r\n  // The throttle percentage for extension\r\n  HTI_THROTTLE: { scope: SYSTEM, name: 'hti_throttle', value: 0 },\r\n  MTI_CLIENT_ID: { scope: SYSTEM, name: 'gti_client_id', value: '' },\r\n};\r\n","// Background\r\n\r\nimport TabData from '@extension/common/tab_data';\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { BackgroundConstants, CryptoBlacklist, TrustedDomains, RatBlacklist, ApsUrlList } from '@extension/common/background_constants';\r\nimport { NativeSettings } from '@extension/background/dispatchers/native/native_settings';\r\n\r\nexport const BackgroundGlobals = {\r\n  // This flag is set to false by automation to avoid isTrusted check in shadowDOM.\r\n  // Since WA use custom shadowDOM access in automation without using Selenium, isTrusted is false\r\n  // hence for tests to succeed automation will set this flag to false before running tests.\r\n  isTrustCheckRequired: true,\r\n  ExtensionTelemetryUrl: null,\r\n  scheduleManager: null,\r\n  schedules: null,\r\n  isNativeConnected: true,\r\n  telemetryEngine: null,\r\n  postInstallationPage: 'https://www.mcafee.com/consumer/v/wa-how.html',\r\n  listenerManager: null,\r\n  firefoxInternalUUID: '',\r\n  shadowMode: 'closed',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  cacheStore: null,\r\n  ffViewports: null,\r\n  garbageCollector: null,\r\n  typoCache: null,\r\n  logger: null,\r\n  loglevel: null,\r\n  messageDispatcher: null, // The message handler for native messaging\r\n  port: null,\r\n  tabData: new TabData(), // Information about all the tab\r\n  tabIdToLastClickTime: new Map(),\r\n  useNativeLogger: false,\r\n  wasm: null, // webassembly module\r\n  userAgentInBase64: null,\r\n  typoSquattingServer: BackgroundConstants.TYPOSQUATTING_SERVER,\r\n  tldParser: null,\r\n  cryptoBlacklist: CryptoBlacklist,\r\n  trustedDomains: TrustedDomains,\r\n  nativeSettings: NativeSettings,\r\n  searchSuggest: null,\r\n  ratBlacklist: RatBlacklist,\r\n  updatedByNative: false, // flag indicate whether these global variables have been updated by native\r\n\r\n  // WSS\r\n  wssMessageDispatcher: null, // The message handler for WSS native messaging\r\n  wssNativeClient: null,\r\n  WSS_INSTALLED: false,\r\n  isWPSInstalled: false,\r\n\r\n  // Engines JSON\r\n  searchEngines: null,\r\n  enginesVersionUrl: BackgroundConstants.ENGINE_VERSION_URL,\r\n  engineCheckInterval: 1000 * 60 * 60 * 24,\r\n  ENGINES_VERSION: BuildSettings.ENGINES_VERSION,\r\n\r\n  // Feature flags\r\n  AUTO_PLAY_NOTIFICATION_ENABLED: false,\r\n\r\n  // Automation specific flags\r\n  ALLOW_LOCALHOST: false,\r\n\r\n  // Form detection\r\n  IDPS_AUTH_URL: 'https://csptoken.ccs.mcafee.com/auth/token',\r\n  IDPS_BREACH_COUNT_URL: 'https://identity.unifiedapis.mcafee.com/breach/v1/BreachCount',\r\n  IDPS_CSP_CLIENT_ID: null,\r\n  IDPS_IS_ENTITLED: false,\r\n  IDPS_PROVISION_ID: null,\r\n  IDPS_LOGIN_DOMAIN: 'https://protection.mcafee.com',\r\n\r\n  // Unified Auth\r\n  UA_CLIENT: null,\r\n\r\n  // Typosquatting cache variables\r\n  TYPOSQUATTING_MAX_CACHE: 100,\r\n  TYPOSQUATTING_EXPIRY: 1000 * 60 * 60 * 24 * 30, // 1 month\r\n\r\n  // AMWA-11850 CPSIR-83 - Secret code that is appended to image requests to not allow external access to image files\r\n  WA_IMAGE_SECRET: null,\r\n\r\n  // Advanced Protection Signal URLs\r\n  apsUrlList: ApsUrlList,\r\n  apsAnimationTimeout: 5000,\r\n\r\n  downloadUrls: new Set(),\r\n\r\n  // Small Business Integration\r\n  wpsRequestedSettings: new Set(['SMA_USER_TOGGLE', 'SEARCH_ANNOTATION_OPTION', 'SMA_ANNOTATION_OPTIONS']),\r\n\r\n  // Permitted content types . These types are not blocked by URL but passed to native for download scanning.\r\n  permittedContentTypes: ['application/vnd.microsoft.portable-executable',\r\n    'application/octet-stream',\r\n    'application/x-msdos-program',\r\n    'application/x-msdownload',\r\n    'binary/octet-stream',\r\n    'application/x-msdownload'\r\n  ],\r\n\r\n  // supported extenal website connections\r\n  SUPPORTED_WEBSITE_LIST: [\r\n    'protection.mcafee.com',\r\n    'protection-dev-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-dev2-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-qa-roadhouse-int.dvqa.mcafee.com',\r\n  ],\r\n\r\n  // per user use either GTI or HTI. true means set HTI while installing and if false means set GTI\r\n  isHTI: false,\r\n  mtiRequestor: null,\r\n  gtiServer: BackgroundConstants.GTI_SERVER,\r\n  htiServer: BackgroundConstants.HTI_SERVER,\r\n  cspClientId: 'e87c73de-b45e-4427-b590-5124401795b6',\r\n};\r\n","export const ForegroundGlobals = {\r\n  loglevel: null, // specify the current recorded loglevel\r\n};\r\n","// Background\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\n// Common\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n// Foreground\r\nimport { ForegroundGlobals } from '@extension/ui/foreground/foreground_globals';\r\n\r\n/**\r\n * The different log levels considered when detecting / reporting errors in WebAdvisor\r\n * Note that a higher level means that more logs will be printed. (ie, level 3 will print level 2 and 1)\r\n */\r\nexport const LogLevels = {\r\n  NONE: 0,\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * The different log types\r\n */\r\nexport const LogTypes = {\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * Process type to distinguish which process called the logger\r\n */\r\nexport const ProcessTypes = {\r\n  BACKGROUND: 'BACKGROUND',\r\n  CONTENT: 'CONTENT',\r\n  TELEMETRY: 'TELEMETRY',\r\n  SMART_NATIVE_CLIENT: 'SMART_NATIVE_CLIENT'\r\n};\r\n\r\nexport const ProcessStyleMap = {\r\n  DEFAULT: 'color: #000000; font-weight: normal; font-style:normal; background: #FFFFFF;',\r\n  BACKGROUND: 'color: #8D0DBA; font-weight: bold; background: #FFFFFF;',\r\n  CONTENT: 'color: #F54A26; font-weight: bold; background: #FFFFFF;',\r\n  TELEMETRY: 'color: #147831; font-weight: bold; background: #FFFFFF;',\r\n  SMART_NATIVE_CLIENT: 'color: #004d7c; font-weight: bold; background: #FFFFFF;'\r\n};\r\n\r\n// *****************************************************************************\r\n// Set \"ExtensionLogging\" = 1 in registry at the same place we set LogLevel\r\n// will turn on native logging. This will log everything including INFO and ERR.\r\n// *****************************************************************************\r\n// *****************************************************************************\r\n// Type \"chrome.storage.local.set({'EXTENSION_LOGGING': 3});\" into the background\r\n// page console to forcefully turn on or turn off the logs inside extension\r\n// chrome = chrome/browser, # = the log level from 0 to 4\r\n// *****************************************************************************\r\nexport class Logger\r\n{\r\n  static processLog(message, logType, process = undefined)\r\n  {\r\n    if (logType === LogLevels.NONE)\r\n    {\r\n      return;\r\n    }\r\n\r\n    // verify that process is a valid option, else set it undefined\r\n    if (process && !Object.values(ProcessTypes).includes(process))\r\n    {\r\n      process = undefined;\r\n    }\r\n\r\n    // Checking whether native logging is enabled or not.\r\n    chrome.storage.local.get(LocalStorageVariables.USE_NATIVE_LOGGER.name, (useNativeLogger) =>\r\n    {\r\n      if (useNativeLogger[LocalStorageVariables.USE_NATIVE_LOGGER.name] === true)\r\n      {\r\n        if (!process)\r\n        {\r\n          // Check if the current code is being ran in the background or foreground\r\n          process = isBackground() ? ProcessTypes.BACKGROUND : ProcessTypes.CONTENT;\r\n        }\r\n        const details = {\r\n          processType: process,\r\n          browserType: BuildSettings.BROWSER_TYPE,\r\n          extensionType: 'wa',\r\n          logType,\r\n          message\r\n        };\r\n\r\n        BackgroundGlobals.messageDispatcher && BackgroundGlobals.messageDispatcher.logger(details);\r\n      }\r\n    });\r\n\r\n    // log within extension\r\n    consoleLog(message, logType, process);\r\n  }\r\n\r\n  /**\r\n   * Set the native Logging status\r\n   * @param {*} state\r\n   */\r\n  static setNativeLogging(state)\r\n  {\r\n    BackgroundGlobals.useNativeLogger = state;\r\n    chrome.storage.local.set(LocalStorageVariables.USE_NATIVE_LOGGER, state);\r\n  }\r\n\r\n  // Need to include processType for telemetry logging only.\r\n  static log(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.INFO, processType);\r\n  }\r\n\r\n  static error(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.ERROR, processType);\r\n  }\r\n\r\n  static warn(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.WARN, processType);\r\n  }\r\n\r\n  static debug(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.DEBUG, processType);\r\n  }\r\n}\r\n\r\nconst consoleLog = async (message, logType, process = undefined) =>\r\n{\r\n  const logLevel = await getLogLevel();\r\n  if (logLevel === LogLevels.NONE)\r\n  {\r\n    return;\r\n  }\r\n\r\n  const processType = process || (isBackground() ? ProcessTypes.BACKGROUND\r\n    : ProcessTypes.CONTENT);\r\n  const nowDate = new Date();\r\n  const logMessage = `%c[${processType} ${nowDate.toLocaleString([], { hour: '2-digit', minute: '2-digit', hour12: true })}]: %c${message}`;\r\n\r\n  const styleRegular = ProcessStyleMap.DEFAULT;\r\n  let hightlight = ProcessStyleMap[processType];\r\n\r\n  if (!hightlight)\r\n  {\r\n    hightlight = styleRegular;\r\n  }\r\n\r\n  if (logLevel >= LogLevels.ERROR && logType === LogTypes.ERROR)\r\n  {\r\n    console.error(logMessage, styleRegular, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.INFO && logType === LogTypes.INFO)\r\n  {\r\n    console.log(logMessage, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.WARN && logType === LogTypes.WARN)\r\n  {\r\n    const uniqueHighlight = 'color: #FFA500; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cWARN - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.DEBUG && logType === LogTypes.DEBUG)\r\n  {\r\n    const uniqueHighlight = 'color: #FF33D7; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cDEBUG - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n};\r\n\r\nconst isBackground = () =>\r\n{\r\n  const isBackground = BackgroundGlobals.cacheStore !== null;\r\n  return isBackground;\r\n};\r\n\r\nconst getLogLevel = async () =>\r\n{\r\n  // Check if the current code is being ran in the background or foreground\r\n  const context = isBackground() ? BackgroundGlobals : ForegroundGlobals;\r\n\r\n  // get loglevel from the current context\r\n  let level = context.loglevel;\r\n\r\n  // if current context loglevel is null (aka not set, we will retrieve the level from storage)\r\n  if (context.loglevel === null)\r\n  {\r\n    level = await getStorageLogLevelAsync();\r\n    context.loglevel = (level === null || level === undefined) ? BuildSettings.LOG_LEVEL : level;\r\n  }\r\n\r\n  if (Number.isInteger(level) && Object.values(LogLevels).includes(level))\r\n  {\r\n    return level;\r\n  }\r\n\r\n  return BuildSettings.LOG_LEVEL;\r\n};\r\n\r\nconst getStorageLogLevelAsync = async () =>\r\n{\r\n  const storageLocalGetAsync = new Promise((resolve) => chrome.storage.local.get(LocalStorageVariables.EXTENSION_LOGGING.name, resolve));\r\n  const response = await storageLocalGetAsync;\r\n  const storageLogLevel = response[LocalStorageVariables.EXTENSION_LOGGING.name];\r\n  if (Number.isInteger(storageLogLevel) && Object.values(LogLevels).includes(storageLogLevel))\r\n  {\r\n    return storageLogLevel;\r\n  }\r\n  return null;\r\n};\r\n","import { extension } from '@extension/common/webextension';\nimport HttpService from '@extension/common/http_service';\nimport BackgroundIPC from '@extension/common/background_ipc';\nimport { Logger } from '@extension/common/logger';\n/////////////////////////////////\n////////\n//////////////////////////////////////////////////////////\n//////////\n\nexport default class UIContentUtils\n{\n  /**\n   * Load HTML templates into Shadow Dom\n   * @param {object} properties                 - properties used by the host node\n   * @param {object} properties.hostStyles      - css object to be applied on the host node\n   * @param {object} baseTemplate               - main template to render\n   * @param {string} baseTemplate.htmlPath      - path to the html file\n   * @param {string} baseTemplate.cssPath       - path to the css file\n   * @param {object} childTemplate              - (optional) inner template to render (if one is provided)\n   * @param {string} childTemplate.htmlPath     - path to the html file\n   * @param {string} childTemplate.cssPath      - path to the css file\n   * @param {string} childTemplate.containerId  - append the html into this containerId from base html path\n   */\n  static async loadTemplate(properties, baseTemplate, childTemplate = null)\n  {\n    const { hostStyles } = properties;\n\n    // Create and attach shadow DOM node to regular DOM\n    const hostNode = document.createElement('div');\n    for (const property in hostStyles)\n    {\n      hostNode.style[property] = hostStyles[property];\n    }\n\n    const bkGlobals = await BackgroundIPC.getBkGlobals();\n\n    const mode = bkGlobals.shadowMode;\n\n    const shadowRoot = hostNode.attachShadow({ mode });\n\n    // Handle base template\n    await UIContentUtils.populateContainer(baseTemplate, shadowRoot);\n\n    // Handle child template (if one is provided)\n    if (childTemplate) await UIContentUtils.populateContainer(childTemplate, shadowRoot);\n\n    document.body.appendChild(hostNode);\n    return { hostNode, shadowRoot };\n  }\n\n  static async populateContainer(templateData, shadowRoot)\n  {\n    const { htmlPath, cssPath, containerId, waImageSecret } = templateData;\n    const template = await UIContentUtils.getTemplate(htmlPath, cssPath, waImageSecret);\n    const container = containerId ? shadowRoot.querySelector(`#${containerId}`) : shadowRoot;\n    container.appendChild(template);\n  }\n\n  static async reloadTemplate(templateData, baseTemplateData, shadowRoot)\n  {\n    // remove all data within the shadow root\n    shadowRoot.innerHTML = '';\n\n    // repopulate base container (if one is provided)\n    if (baseTemplateData) await UIContentUtils.populateContainer(baseTemplateData, shadowRoot);\n\n    // repopulate container\n    await UIContentUtils.populateContainer(templateData, shadowRoot);\n  }\n\n  static async getTemplate(htmlPath, cssPath = null, waImageSecret)\n  {\n    const httpService = new HttpService();\n    const template = document.createElement('template');\n\n    // Grab markup and inject into the base template\n    const responseText = await httpService.sendHttpRequest({ url: extension.runtime.getURL(htmlPath) });\n    const htmlText = await responseText.text();\n\n    // Grab styles and inject into the base template as a new style tag\n    let stylesText = '';\n    if (cssPath)\n    {\n      const responseStyles = await httpService.sendHttpRequest({ url: extension.runtime.getURL(cssPath) });\n      stylesText = await responseStyles.text();\n///////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////\n////////////////////////////////////////////////////////////////\n      stylesText = `<style>${stylesText}</style>`;\n////////////////\n    }\n    let cleanHTML = '';\n    // Wrapper template element\n/////////////////////////////////////\n///////////////////////////////////////\n//////////////\n//////////////////////////////////////////////////////////////\n    cleanHTML = htmlText;\n//////////////\n    template.innerHTML = `${stylesText}${cleanHTML}`;\n\n    // Resolve images\n    for (const image of template.content.querySelectorAll('img[x-mcsrc]'))\n    {\n      const source = image.getAttribute('src');\n      const secretParam = `?secret=${waImageSecret}`;\n      image.src = extension.runtime.getURL(source + secretParam);\n    }\n\n    return template.content.cloneNode(true);\n  }\n\n  static async initFontOnDocument()\n  {\n    // Add custom typefaces and inject into the main document because shadow DOM does not load custom fonts.\n    // For example Google Fonts must be added to the main document (light DOM) for typeface to work.\n    try\n    {\n      // Poppins\n      const poppinsUrl = extension.runtime.getURL('fonts/Poppins-Regular.ttf');\n      const poppinsFont = new FontFace('mcafeePoppins', `url(${poppinsUrl})`);\n      const poppinsPromise = poppinsFont.load(); // wait for font to be loaded\n\n      // OpenSans\n      const openSansUrl = extension.runtime.getURL('fonts/OpenSans-Regular.ttf');\n      const openSansFont = new FontFace('mcafeeOpenSans', `url(${openSansUrl})`);\n      const openSansPromise = openSansFont.load(); // wait for font to be loaded\n\n      const [poppins, openSans] = await Promise.all([poppinsPromise, openSansPromise]);\n      document.fonts.add(poppins); // add font to document\n      document.fonts.add(openSans); // add font to document\n    }\n    catch (error)\n    {\n      Logger.error(error);\n    }\n  }\n\n  static fadeIn(element)\n  {\n    element.style.opacity = 0;\n    element.style.display = 'block';\n\n    function fade()\n    {\n      const opacity = +element.style.opacity + 0.1;\n      if (opacity < 1)\n      {\n        element.style.opacity = opacity;\n        window.requestAnimationFrame(fade);\n      }\n    }\n\n    fade();\n  }\n\n  static fadeOut(element, cb)\n  {\n    let stopTransition = false;\n    element.style.opacity = 1;\n\n    function fade()\n    {\n      // Sometimes the event queue isn't all cleared in time for fadeIn to begin\n    // and a delayed invocation causes an infinite recursion battle between fadeIn & fadeOut\n    // This flag acts as an official kill switch.\n      if (stopTransition) return;\n\n      const opacity = +element.style.opacity - 0.1;\n      if (opacity <= 0)\n      {\n        stopTransition = true;\n        element.style.display = 'none';\n        cb();\n      }\n      else\n      {\n        element.style.opacity = opacity;\n        window.requestAnimationFrame(fade);\n      }\n    }\n\n    fade();\n  }\n}\n","// This global object is used by core to store the properites that are shared across multiple objects in core.\r\n// Most of the properties set in this object are set during initialization of coreengine.\r\n\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\nimport ExternalMsgDispatcher from '@core-engine/external_msg_dispatcher';\r\n\r\nexport const Globals = {\r\n  uid: '0DE9E47C-871A-4F90-8440-B190C216800A',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  externalMsgDispatcher: new ExternalMsgDispatcher(),\r\n  reputationReqCount: 5,\r\n  imageCounter: 0,\r\n  isSearchHitSend: false,\r\n  resourceRequestor: null,\r\n  clientFunctions: null,\r\n  activeURI: null,\r\n  eventHandler: null,\r\n  bkGlobals: null,\r\n  searchEngine: null,\r\n  searchAnnotationOption: AnnotationOptions.ONLY_SECURE_SEARCH,\r\n  socialMediaOption: SocialMediaTypes.NONE,\r\n  socialMediaToggle: false,\r\n\r\n  // Show \"view site report\" link on annotation balloon\r\n  hasReportPage: true,\r\n};\r\n","import { extension } from '@extension/common/webextension';\r\nimport { ExternalCommands } from '@extension/common/commands';\r\nimport { Logger } from '@extension/common/logger';\r\n\r\nexport default class ExternalMsgDispatcher\r\n{\r\n  isvalidRequestType(requestType)\r\n  {\r\n    let valid = false;\r\n    for (const type in ExternalCommands)\r\n    {\r\n      if (ExternalCommands[type] === requestType)\r\n      {\r\n        valid = true;\r\n      }\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  validateMsg(requestType, payload)\r\n  {\r\n    if (\r\n      requestType === undefined\r\n      || payload === undefined\r\n      || !this.isvalidRequestType(requestType)\r\n    )\r\n    {\r\n      Logger.error('Invalid msg to be sent externally');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  sendExtnMsg(extnId, message, cb)\r\n  {\r\n    const defaultCb = (resolve, reject, data) =>\r\n    {\r\n      if (extension.runtime.lastError) reject(extension.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      const { request_type: requestType, payload } = message;\r\n      if (!this.validateMsg(requestType, payload))\r\n      {\r\n        reject(Error('sendExtnMsg: Invalid Message'));\r\n      }\r\n\r\n      extension.runtime.sendMessage(extnId, message, (data) =>\r\n      {\r\n        if (typeof cb === 'function') cb(resolve, reject, data);\r\n        else defaultCb(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","// Utilities\r\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\r\nimport { Globals } from '@core-engine/globals';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n\r\n/**\r\n * Base class handling the sidebar action panel markup, styles and event listeners.\r\n */\r\nexport default class ShadowDomContainer\r\n{\r\n  constructor(hostStyles, baseTemplate = null)\r\n  {\r\n    this.closing = false; // flag to indicate ui is closing\r\n    this.showing = false; // flag to indicate ui is showing\r\n    this.animateReload = true; // flag to animate slide out/in when reloading content\r\n    this.allowReplace = true; // flag to allow content to be replaced or not\r\n    this.componentData = null; // variable used for preventing same content to be re-rendered\r\n    this.template = null; // variable used for preventing same template to be re-rendered (used along with allowReplace)\r\n\r\n    this.hostNode = null;\r\n    this.shadowRoot = null;\r\n    this.hostStyles = hostStyles;\r\n    this.baseTemplate = baseTemplate;\r\n\r\n    // Exposed functions for extendee to use\r\n    this.showContainer = this.showContainer.bind(this);\r\n    this.closeContainer = this.closeContainer.bind(this);\r\n    this.query = this.query.bind(this);\r\n    this.clickListener = this.clickListener.bind(this);\r\n\r\n    // feature\r\n    this.bgGrayout = false; // for adding a background grayout overlay on top of the page\r\n    this.bgGrayoutElement = null;\r\n  }\r\n\r\n  /**\r\n   * Load HTML templates into Shadow Dom\r\n   * @param {object}  template\r\n   * @param {string}  template.htmlPath       - path to the html file\r\n   * @param {string}  template.cssPath        - path to the css file\r\n   * @param {string}  template.containerId    - (optional): append the html into this containerId from base html path\r\n   * @param {bool}    template.allowReplace   - (default = true) set to false content cannot be replaced unless the template is different\r\n   * @param {bool}    template.animateReload  - (default = true) when reloading the content, slide out/in when changing the content\r\n   * @param {object}  template.componentData  - (default == null) - used mainly to avoid rendering same component\r\n   */\r\n  async initContainer(template, componentData = null)\r\n  {\r\n    // Prevent rendering UI if ui is closing or already showing\r\n    if (this.closing) return false;\r\n\r\n    // Also prevent if allowReplace=false and the template is the same\r\n    if (this.showing && (this.allowReplace === false && ShadowDomContainer.isSameObject(template, this.template))) return false;\r\n\r\n    // Ignore content that has been shown\r\n    if (this.componentData && JSON.stringify(this.componentData) === JSON.stringify(componentData)) return false;\r\n\r\n    this.componentData = componentData;\r\n\r\n    // Set new behavior for the container\r\n    const { allowReplace = true, animateReload = true } = template;\r\n    this.allowReplace = allowReplace;\r\n    this.animateReload = animateReload;\r\n    this.showing = true;\r\n\r\n    // If the host node has been created and allowReplace is true\r\n    // then we can just reload the sidebar with new content\r\n    if (this.hostNode && allowReplace)\r\n    {\r\n      await this.reloadContainer(template);\r\n      return true;\r\n    }\r\n\r\n    // This is to handle parent/child template between containers which has a parent (eg. sidebar) and containers without one (eg. topbar)\r\n    let childTemplate = { ...template };\r\n    this.template = childTemplate;\r\n    if (this.baseTemplate === null)\r\n    {\r\n      this.baseTemplate = childTemplate;\r\n      childTemplate = null;\r\n    }\r\n\r\n    const properties = { hostStyles: { ...this.hostStyles.DEFAULT, ...this.hostStyles.HIDE } };\r\n    const { hostNode, shadowRoot } = await UIContentUtils.loadTemplate(properties, this.baseTemplate, childTemplate);\r\n    this.hostNode = hostNode;\r\n    this.shadowRoot = shadowRoot;\r\n\r\n    Globals.bkGlobals = await BackgroundIPC.getBkGlobals();\r\n\r\n    return true;\r\n  }\r\n\r\n  static isSameObject(object1 = null, object2 = null)\r\n  {\r\n    if (object1 === null && object2 === null) return true;\r\n    return object1 && object2 && JSON.stringify(object1) === JSON.stringify(object2);\r\n  }\r\n\r\n  async reloadContainer(template, animateReload = this.animateReload)\r\n  {\r\n    // On reload, close the sidebar (if animate = true)\r\n    // prevent re-rendering during reload\r\n    await this.closeContainer(false, animateReload);\r\n\r\n    // Load new template\r\n    this.template = template;\r\n    await UIContentUtils.reloadTemplate(template, this.baseTemplate, this.shadowRoot);\r\n  }\r\n\r\n  setBackgroundOverlay(show)\r\n  {\r\n    const body = document.querySelector('body');\r\n\r\n    if (show)\r\n    {\r\n      // Grayout the background\r\n      const styles = 'display:none; width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 99999; background: rgba(0, 0, 0, 0.3);';\r\n      this.bgGrayoutElement = document.createElement('div');\r\n      this.bgGrayoutElement.style.cssText = styles;\r\n\r\n      body.append(this.bgGrayoutElement); // Add the grayout\r\n      body.style.overflow = 'hidden'; // hide the scrollbar\r\n      UIContentUtils.fadeIn(this.bgOverlay);\r\n    }\r\n    else\r\n    {\r\n      if (this.bgGrayoutElement) UIContentUtils.fadeOut(this.bgGrayoutElement, () => {});\r\n      body.style.overflow = 'auto'; // re-show the scrollbar\r\n    }\r\n  }\r\n\r\n  showBackgroundGrayout(bgGrayout)\r\n  {\r\n    this.bgGrayout = bgGrayout;\r\n    if (!bgGrayout) return;\r\n\r\n    // Grayout the background\r\n    const styles = 'display:none; width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 99999; background: rgba(0, 0, 0, 0.3);';\r\n    this.bgGrayoutElement = document.createElement('div');\r\n    this.bgGrayoutElement.style.cssText = styles;\r\n\r\n    const body = document.querySelector('body');\r\n    body.append(this.bgGrayoutElement); // Add the grayout\r\n    body.style.overflow = 'hidden'; // hide the scrollbar\r\n    UIContentUtils.fadeIn(this.bgGrayoutElement);\r\n  }\r\n\r\n  hideBackgroundGrayOut()\r\n  {\r\n    if (this.bgGrayoutElement && this.bgGrayout)\r\n    {\r\n      UIContentUtils.fadeOut(this.bgGrayoutElement, () => {});\r\n      document.querySelector('body').style.overflow = 'auto'; // re-show the scrollbar\r\n      this.bgGrayout = false;\r\n    }\r\n  }\r\n\r\n  showContainer(options = null)\r\n  {\r\n    const bgGrayout = options && options.bgGrayout;\r\n    this.showBackgroundGrayout(bgGrayout);\r\n    for (const property in this.hostStyles.SHOW)\r\n    {\r\n      this.hostNode.style[property] = this.hostStyles.SHOW[property];\r\n    }\r\n  }\r\n\r\n  closeContainer(clear = true, animate = true)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      // Handle background grayout removal\r\n      this.hideBackgroundGrayOut();\r\n\r\n      // Protect from multiple close triggers\r\n      if (this.closing)\r\n      {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      this.closing = true;\r\n\r\n      const close = () =>\r\n      {\r\n        this.closing = false;\r\n        this.showing = false;\r\n\r\n        // Clear when all content within the dom should\r\n        // be reset, happens when triggering from UI buttons\r\n        if (clear)\r\n        {\r\n          this.hostNode.remove();\r\n          this.hostNode = null;\r\n          this.componentData = null;\r\n          this.template = null;\r\n          this.shadowRoot = null;\r\n          this.baseTemplate = null;\r\n        }\r\n      };\r\n\r\n      if (!animate)\r\n      {\r\n        close();\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      // Hide action panel with animation\r\n      const styleObj = { ...this.hostStyles.DEFAULT, ...this.hostStyles.HIDE };\r\n      for (const property in styleObj)\r\n      {\r\n        this.hostNode.style[property] = styleObj[property];\r\n      }\r\n\r\n      setTimeout(() => resolve(close()), 500);\r\n    });\r\n  }\r\n\r\n  query(id)\r\n  {\r\n    return this.shadowRoot.querySelector(id);\r\n  }\r\n\r\n  querySelector(selector)\r\n  {\r\n    return this.shadowRoot.querySelector(selector);\r\n  }\r\n\r\n  querySelectorAll(selector)\r\n  {\r\n    return this.shadowRoot.querySelectorAll(selector);\r\n  }\r\n\r\n  clickListener(id, callback)\r\n  {\r\n    const element = this.shadowRoot.querySelector(id);\r\n    element && element.addEventListener('click', (event) =>\r\n    {\r\n      if (Globals.bkGlobals.isTrustCheckRequired && !event.isTrusted)\r\n      {\r\n        return;\r\n      }\r\n      callback(event);\r\n    });\r\n  }\r\n}\r\n","import HttpService from '@extension/common/http_service';\nimport { extension } from '@extension/common/webextension';\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\n/////////////////////////////////\n////////\n//////////////////////////////////////////////////////////\n//////////\n\nexport default class InteractiveBalloon\n{\n  constructor(waImageSecret)\n  {\n    this.root = null;\n    this.defaultMcAfeeIcon = `/images/web_advisor/white_mcafee_icon.svg?secret=${waImageSecret}`;\n  }\n\n  async init(shadowRoot)\n  {\n    this.root = shadowRoot;\n\n    const httpService = new HttpService();\n    const responseStyles = await httpService.sendHttpRequest({ url: extension.runtime.getURL('css/interactive_balloon.css') });\n    const stylesText = await responseStyles.text();\n    let styleTag = `<style>${stylesText}</style>`;\n/////////////////////////////////////\n//////////////////////////////////////\n//////////////\n    this.root.innerHTML += styleTag;\n  }\n\n  create(options = {})\n  {\n    const { defaultIcon = this.defaultMcAfeeIcon, animateIcon = null } = options;\n    const divContainer = document.createElement('div');\n    divContainer.classList.add('mc-interactive-balloon');\n    let imgTag = `<img src='${extension.runtime.getURL(animateIcon || defaultIcon)}' />`;\n/////////////////////////////////////\n//////////////////////////////////\n//////////////\n    divContainer.innerHTML += imgTag;\n    this.root.append(divContainer);\n\n    if (animateIcon)\n    {\n      setTimeout(() =>\n      {\n        const imageTag = divContainer.querySelector('img');\n        UIContentUtils.fadeOut(imageTag, () =>\n        {\n          imageTag.setAttribute('src', extension.runtime.getURL(defaultIcon));\n          UIContentUtils.fadeIn(imageTag);\n        });\n      }, 2000);\n    }\n  }\n}\n","// Component\r\nimport ShadowDomContainer from '@extension/components/shadow_dom_container';\r\nimport InteractiveBalloon from '@extension/components/interactive_balloon';\r\n\r\nconst balloonMessageStyles = {\r\n  DEFAULT: {\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    bottom: '15px',\r\n    display: 'block',\r\n    margin: '0px',\r\n    opacity: '0',\r\n    padding: '0px',\r\n    position: 'fixed',\r\n    right: '65px',\r\n    zIndex: '2147483646',\r\n  },\r\n\r\n  HIDE: {\r\n    opacity: '0',\r\n  },\r\n\r\n  SHOW: {\r\n    backgroundColor: 'transparent',\r\n    opacity: '1',\r\n  },\r\n};\r\n\r\nexport default class BalloonMessageContainer extends ShadowDomContainer\r\n{\r\n  constructor(customStyles = {}, waImageSecret)\r\n  {\r\n    balloonMessageStyles.DEFAULT = { ...balloonMessageStyles.DEFAULT, ...customStyles };\r\n    super(balloonMessageStyles);\r\n    this.interactiveBalloon = new InteractiveBalloon(waImageSecret);\r\n  }\r\n\r\n  async init(template, componentData)\r\n  {\r\n    const success = await this.initContainer(template, componentData);\r\n    await this.interactiveBalloon.init(this.shadowRoot);\r\n    return success;\r\n  }\r\n}\r\n","import { Color, BlockState, KEY_CODES_RANGE } from '@extension/common/constants';\r\n\r\nexport const FEATURE_TAB_ID = {\r\n  WHITELIST: 'whitelist',\r\n  PREFERENCE: 'preference',\r\n  STATISTICS: 'statistics',\r\n  ABOUT: 'about',\r\n};\r\n\r\n/* Acts as Event Names and also as Trigger Identifiers for handling telemetry */\r\nexport const EventNames = {\r\n  BLOCK_PAGE: 'Block_Page',\r\n  BROWSER_ACTION_CLICKED: 'BrowserAction_Clicked',\r\n  BROWSER_NAVIGATE: 'Browser_Navigate',\r\n  CRYPTOJACKING_BLOCK: 'Cryptojacking_Block',\r\n  DARK_WEB_SCAN: 'DarkWebMonitoring',\r\n  DOWNLOAD_BLOCK: 'Download_Block',\r\n  GET_SEARCH_EXTENSION: 'EmbedSearchExtension',\r\n  PROFILE_INFO: 'ProfileInfo',\r\n  REMOTE_ACCESS_TROJAN: 'RemoteAccessTrojan',\r\n  SEARCH_SUGGEST_BLOCK_PAGE: 'SearchSuggest_BlockPage',\r\n  SEARCH_SUGGEST: 'SearchSuggest',\r\n  SECURE_SEARCH_HIT: 'Secure_Search_Hit',\r\n  SIDEBAR_PANEL: 'SideBar_Panel',\r\n  SITE_REPORT: 'SiteReport',\r\n  SMA_REPUTATION: 'SMA_Reputation',\r\n  TOAST: 'Toast',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  WSS_ANALYTICS: 'WSS_Analytics',\r\n  APS: {\r\n    EVENT_NAME: 'AdvancedProtectionSignals',\r\n    IMPRESSION_BALLOON: 'IMPRESSION_BALLOON',\r\n    IMPRESSION_HOVER: 'IMPRESSION_HOVER',\r\n    CLOSE_BALLOON: 'CLOSE_BALLOON',\r\n    TOAST_CLOSE: 'TOAST_CLOSE',\r\n    TOAST: 'toast',\r\n    BALLOON: 'balloon',\r\n  },\r\n};\r\n\r\nexport const ToastTypes = {\r\n  REGULAR_TOAST: 'RegularToast',\r\n  EFFICACY_TOAST: 'Efficacy_SS',\r\n};\r\n\r\nexport const ImpressionNames = {\r\n  BROWSER_ACTION_CLICKED: 'BrowserActionClicked',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  BLOCK_PAGE: 'BlockPage',\r\n  SECURE_SEARCH_HIT: 'SecureSearchHit',\r\n  CRYPTOJACKING_BLOCK: 'CryptojackingBlock',\r\n  SIDEBAR_PANEL: 'SideBarPanel',\r\n  SMA_REPUTATION: 'SMAReputation',\r\n  DOWNLOAD_BLOCK: 'DownloadBlock',\r\n};\r\n\r\nexport const InteractionTypes = {\r\n  IMPRESSION: 'Impression',\r\n  WEBADVISOR: 'WebAdvisor',\r\n  CRYPTOJACKING: {\r\n    LEARN_MORE_CLICKED: 'LearnMoreClicked',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  SIDEBAR_PANEL: {\r\n    MAIN: 'Main',\r\n  },\r\n  SELECTION: 'Selection',\r\n  DISMISSED: 'Dismissed',\r\n  HOVERED: 'Hovered',\r\n  CLOSE_CLICKED: 'CloseClicked',\r\n  CLICKED: 'Clicked',\r\n  ENABLE: 'Enable',\r\n  ADD: 'Add',\r\n  RAT_DETECTION: {\r\n    ACKNOWLEDGED: 'Acknowledged',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  ACCEPTED: 'Accepted',\r\n  DECLINED: 'Declined',\r\n  ACKNOWLEDGED: 'Acknowledged',\r\n  CLOSE: 'Close',\r\n  NEXT: 'Next',\r\n  GOT_IT: 'GotIt',\r\n  HOVER: 'Hover',\r\n};\r\n\r\nexport const PageLevel = {\r\n  TOP: 'Top',\r\n  FRAME: 'Frame',\r\n  INLINE: 'Inline',\r\n};\r\n\r\nexport const BLOCK_PAGE_STYLE = {\r\n  EDUCATION: 'Education',\r\n  NORMAL: 'Normal',\r\n};\r\n\r\nexport const SETTING_TABS = {\r\n  ABOUT: 'About',\r\n  PREFERENCES: 'Preferences',\r\n  WHITELIST: 'Whitelist',\r\n  STATS: 'UserStatistics',\r\n};\r\n\r\nexport const TelemetryColor = {\r\n  UNKNOWN: 'UNKNOWN',\r\n  RED: 'Red',\r\n  YELLOW: 'Yellow',\r\n};\r\n\r\nexport const TelemetryBlockState = {\r\n  GREEN: 'Green',\r\n  YELLOW: 'Yellow',\r\n  RED: 'Red',\r\n  UNKNOWN: 'UNKNOWN',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  PHISHING: 'Phishing',\r\n};\r\n\r\nexport const SearchType = {\r\n  DEFAULT: 'DefaultSearch',\r\n};\r\n\r\n// For telemetry identification and message storing\r\nexport const TelemetryTerms = {\r\n  ACTION: {\r\n    CLICK: 'click',\r\n    KEYDOWN: 'keydown',\r\n    RETURN_KEY_CODE: 13,\r\n    SHOW: 'show',\r\n    SEARCH_SUGGEST_KEY_CODES: [8, 32, 46,\r\n      ...KEY_CODES_RANGE(48, 57), ...KEY_CODES_RANGE(65, 90), ...KEY_CODES_RANGE(96, 107),\r\n      ...KEY_CODES_RANGE(109, 111), ...KEY_CODES_RANGE(186, 192), ...KEY_CODES_RANGE(219, 222)], // whitelistedKeys are keycodes which results in triggerring a search suggest\r\n  },\r\n  MISC: {\r\n    // Trigger states\r\n    LOADED: 'Loaded',\r\n    CHECKED: 'checked',\r\n    // Other terms\r\n    UNKNOWN: 'UNKNOWN',\r\n    ACTION_PANEL: 'ActionPanel',\r\n    ACCEPTED: 'Accepted',\r\n    DECLINED: 'Declined',\r\n    SETTINGS_TAB_PREFIX: 'settings_tab_',\r\n    GREEN: 'GREEN',\r\n    YELLOW: 'YELLOW',\r\n    RED: 'RED',\r\n    PREFERENCE: 'Preference',\r\n    DEFAULT: 'default',\r\n  },\r\n  // Search engine annotations\r\n  SEARCH_ENGINE: {\r\n    GOOGLE: 'google',\r\n    YAHOO: 'yahoo',\r\n  },\r\n  // Social media annotations\r\n  SOCIAL_MEDIA: {\r\n    LINKEDIN: 'linkedin',\r\n    FACEBOOK: 'facebook',\r\n    YOUTUBE: 'youtube',\r\n    INSTAGRAM: 'instagram',\r\n    REDDIT: 'reddit',\r\n    TWITTER: 'twitter',\r\n  },\r\n};\r\n\r\nexport class CommonTelemetry\r\n{\r\n  static toColorTelemetry(color)\r\n  {\r\n    let colorStr = TelemetryColor.UNKNOWN;\r\n    switch (color)\r\n    {\r\n      case Color.RED:\r\n        colorStr = TelemetryColor.RED;\r\n        break;\r\n      case Color.YELLOW:\r\n        colorStr = TelemetryColor.YELLOW;\r\n        break;\r\n    }\r\n    return colorStr;\r\n  }\r\n\r\n  static toTelemetryBlockState(blockState)\r\n  {\r\n    let blockStateStr = TelemetryBlockState.UNKNOWN;\r\n    switch (blockState)\r\n    {\r\n      case BlockState.GREEN:\r\n        blockStateStr = TelemetryBlockState.GREEN;\r\n        break;\r\n      case BlockState.YELLOW:\r\n        blockStateStr = TelemetryBlockState.YELLOW;\r\n        break;\r\n      case BlockState.RED:\r\n        blockStateStr = TelemetryBlockState.RED;\r\n        break;\r\n      case BlockState.TYPOSQUATTING:\r\n        blockStateStr = TelemetryBlockState.TYPOSQUATTING;\r\n        break;\r\n      case BlockState.PHISHING:\r\n        blockStateStr = TelemetryBlockState.PHISHING;\r\n        break;\r\n    }\r\n    return blockStateStr;\r\n  }\r\n\r\n  static toTelemetrySettingTab(tabName)\r\n  {\r\n    let tabNameStr = SETTING_TABS.PREFERENCES;\r\n    switch (tabName)\r\n    {\r\n      case FEATURE_TAB_ID.WHITELIST:\r\n        tabNameStr = SETTING_TABS.WHITELIST;\r\n        break;\r\n      case FEATURE_TAB_ID.STATISTICS:\r\n        tabNameStr = SETTING_TABS.STATS;\r\n        break;\r\n      case FEATURE_TAB_ID.ABOUT:\r\n        tabNameStr = SETTING_TABS.ABOUT;\r\n        break;\r\n    }\r\n    return tabNameStr;\r\n  }\r\n}\r\n","export const Globals = {\r\n  ANNOTATION: {},\r\n  BackgroundIPC: null,\r\n  BackgroundCommons: null,\r\n  ContextTelemetry: null,\r\n  TelemetryEventNames: null,\r\n  UrlParser: null,\r\n  Utils: null,\r\n  Commands: {},\r\n  CommonConstants: {},\r\n  extension: null,\r\n  SearchEngineHelper: null,\r\n  prevLink: null,\r\n  Logger: null\r\n};\r\n","import { Globals } from './globals';\r\n\r\nexport default class ResourceManager\r\n{\r\n  /**\r\n   * Obtain the corresponding string for the resource name\r\n   * @param {String}   name     - The name of the resource\r\n   * @param {Function} callback - Handles the localized string returned\r\n   */\r\n  static getResString(name, callback)\r\n  {\r\n    Globals.ANNOTATION.resourceRequestor.getResStr(name, (value) =>\r\n    {\r\n      if (!value)\r\n      {\r\n        Globals.Logger.error(`Resource string ${name} failed to fetch through resource requestor`);\r\n      }\r\n      else\r\n      {\r\n        callback(value);\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Background\nimport { BackgroundGlobals } from '@extension/background/background_globals';\n// Common\nimport { BlockState, BrowserType, BuildSettings, Color, Score } from '@extension/common/constants';\nimport { BackgroundConstants } from '@extension/common/background_constants';\nimport { extension } from '@extension/common/webextension';\nimport { Logger } from '@extension/common/logger';\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\n// @mcafee\nimport ResourceManager from '@mcafee/wa-annotations/Common/resource_manager';\n\n/**\n * TODO: Comments\n */\nexport default class BackgroundCommon\n{\n  static async toGTICategoriesString(categories, includeDescription = false)\n  {\n    const getRes = (l10nId) => new Promise((resolve) =>\n    {\n      ResourceManager.getResString(l10nId, (res) => resolve(res));\n    });\n\n    const getCategoryStrings = async (categoryId, includeDescription) =>\n    {\n      const newCategory = {};\n\n      const name = await getRes(`category_id_${categoryId}_name`);\n      newCategory.name = name;\n\n      if (includeDescription)\n      {\n        const description = await getRes(`category_id_${categoryId}_description`);\n        newCategory.description = description;\n      }\n\n      return newCategory;\n    };\n\n    const promises = [];\n    for (const category of categories)\n    {\n      promises.push(getCategoryStrings(category, includeDescription));\n    }\n\n    const newCategories = await Promise.all(promises);\n    return newCategories;\n  }\n\n  /**\n   * Determine the shorthand browser type name based on its corresponding index value.\n   * @returns {String} - The browser name (shorthand)\n   */\n  static browserTypeToString(toLowerCase = false)\n  {\n    let browserType = '';\n    switch (BuildSettings.BROWSER_TYPE)\n    {\n      case 1:\n        browserType = 'FF';\n        break;\n      case 2:\n        browserType = 'CH';\n        break;\n      case 3:\n        browserType = 'ED';\n        break;\n      default:\n        browserType = 'UN';\n    }\n\n    return toLowerCase ? browserType.toLowerCase() : browserType;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toImagePaths(imageName)\n  {\n    let imagePath = 'images/browser_action/';\n\n    const legacyImageName = imageName.startsWith('small_') ? imageName : `small_${imageName}`;\n\n    switch (legacyImageName)\n    {\n      case 'small_button_green.gif':\n        imagePath += 'green';\n        break;\n      case 'small_button_yellow.gif':\n        imagePath += 'yellow';\n        break;\n      case 'small_button_red.gif':\n        imagePath += 'red';\n        break;\n      case 'small_button_grey.gif':\n        imagePath += 'white';\n        break;\n      case 'small_button_disabled.gif':\n        imagePath += 'disabled';\n        break;\n      default:\n        imagePath += imageName;\n        break;\n    }\n\n    // 16 and 32 used by Chrome/Firefox, 20 and 40 used by Edge\n    const imagePaths = {\n      size16: `${imagePath}_16.png`,\n      size20: `${imagePath}_20.png`,\n      size32: `${imagePath}_32.png`,\n      size40: `${imagePath}_40.png`\n    };\n\n    return imagePaths;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static colorToImagePaths(color)\n  {\n    let imageName = 'white';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageName = 'green';\n        break;\n      case Color.YELLOW:\n        imageName = 'yellow';\n        break;\n      case Color.RED:\n        imageName = 'red';\n        break;\n      case Color.UNKNOWN:\n        imageName = 'white';\n        break;\n      case Color.DISABLED:\n        imageName = 'disabled';\n        break;\n    }\n\n    return BackgroundCommon.toImagePaths(imageName);\n  }\n\n  /**\n   * Return the appropriate class for the annotation item\n   * @param {Object} annotationItem - Reputation object returned by the GTI server\n   */\n  static toAnnotationImageClass(annotationItem)\n  {\n    const color = BackgroundCommon.toColor(annotationItem);\n\n    let imageClass = '';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageClass = 'OK';\n        break;\n      case Color.RED:\n        imageClass = 'WARN';\n        break;\n      case Color.YELLOW:\n        imageClass = 'INFO';\n        break;\n      case Color.UNKNOWN:\n        imageClass = 'UNKNOWN';\n        break;\n    }\n\n    return imageClass;\n  }\n\n  /**\n  * Determines if the URL provided is malicious or not.\n  * @param   {Object} categories - Url info deemed phishing / malicious\n  * @returns {boolean} - Outcome of the phishing site check\n  */\n  static isPhishingURI(categories)\n  {\n    return categories && categories.includes(BackgroundConstants.PHISHING_CATEGORY);\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toBlockState(annItem)\n  {\n    const colorVal = BackgroundCommon.toColor(annItem);\n\n    if (colorVal === Color.RED || colorVal === Color.YELLOW)\n    {\n      if (BackgroundCommon.isPhishingURI(annItem.category))\n      {\n        return BlockState.PHISHING;\n      }\n    }\n\n    // Because the color and block state values correspond to the numbers, you can simply return the color value\n    return isNaN(colorVal) ? BlockState.UNKNOWN : colorVal;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toColor(annItem)\n  {\n    let color = Color.UNKNOWN;\n\n    if (annItem === undefined || annItem.trust === undefined)\n    {\n      return color;\n    }\n\n    if (annItem.trust >= Score.CLEAN)\n    {\n      color = Color.GREEN;\n    }\n    else if (annItem.trust > Score.UNVERIFIED)\n    {\n      color = Color.YELLOW;\n    }\n    else if (annItem.trust >= Score.DIRTY)\n    {\n      color = Color.RED;\n    }\n    else\n    {\n      color = Color.UNKNOWN;\n    }\n\n    return color;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toSiteReportUrl(url)\n  {\n    const siteReportUrl = extension.runtime.getURL('html/site_status_site_report.html');\n    return `${siteReportUrl}?url=${escape(url)}`;\n  }\n\n  static isExtensionUrl(url)\n  {\n    // Chrome/Edge Internal Pages\n    if ((BrowserType.CHROME === BuildSettings.BROWSER_TYPE && url.startsWith(`chrome-extension://${extension.runtime.id}`))\n    || (BrowserType.EDGE === BuildSettings.BROWSER_TYPE && url.startsWith(`ms-browser-extension://${extension.runtime.id}`)))\n    {\n      return true;\n    }\n\n    // Firefox Internal Pages\n    if (BrowserType.FIREFOX === BuildSettings.BROWSER_TYPE)\n    {\n      let firefoxInternalUUID = extension.i18n.getMessage('@@extension_id');\n      if (!firefoxInternalUUID)\n      {\n        const internalPageUrl = extension.runtime.getURL('images/web_advisor/logo.png');\n        // get internal uuid from resource url extracting characters between 'moz-extension://' and '/'\n        // sample url: moz-extension://ABCDE/images/web_advisor/logo.png => ABCDE\n        const urlSplit = internalPageUrl.split('/');\n        firefoxInternalUUID = (urlSplit.length >= 3) ? urlSplit[2] : '';\n      }\n\n      return firefoxInternalUUID && url.startsWith(`moz-extension://${firefoxInternalUUID}`);\n    }\n\n    return false;\n  }\n\n  // Check whether a url is a siteadvisor url or our own extension url\n  static isSafeUrl(url)\n  {\n    return BackgroundCommon.isSiteAdvisorUrl(url) || BackgroundCommon.isExtensionUrl(url);\n  }\n\n  static isSiteAdvisorUrl(url)\n  {\n    return (url.startsWith(`http://${BackgroundConstants.SITE_ADVISOR_URL}`)\n    || url.startsWith(`https://${BackgroundConstants.SITE_ADVISOR_URL}`));\n  }\n\n  static isPropertRedirectUrl(url)\n  {\n    return BackgroundCommon.isPropertyWebURL(url) || url.startsWith('edge://') || url.startsWith('chrome://');\n  }\n\n  // Check whether a url is a proper web url\n  static isProperWebURL(url)\n  {\n    if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('ftp://'))\n    {\n      return true;\n    }\n\n    return false;\n  }\n\n  static getUINumber(number)\n  {\n    // sample output:\n    // 0: 0\n    // 999: 999\n    // 1010: 1k+\n    // 1251: 1.2k+\n    // 9999: 9.9k+\n    // > 10000: 10k+\n    const THOUSAND = 1000;\n    const TEN_THOUSAND = 10000;\n    if (number >= TEN_THOUSAND) return '10k+';\n    if (number >= THOUSAND)\n    {\n      let decimal = (number / THOUSAND).toFixed(1);\n      decimal = decimal.substring(2, 3) === '0' ? decimal.substring(0, 1) : decimal;\n      return `${decimal}k+`;\n    }\n    return `${number}`;\n  }\n\n  static hasEpochTimeElapsed(initialEpochInSeconds, timePassedinSeconds)\n  {\n    const nowInSeconds = (new Date()).getTime() / 1000;\n    if (nowInSeconds > initialEpochInSeconds + timePassedinSeconds) return true;\n    return false;\n  }\n\n  static isPersonalPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static isActivityPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static blockRequest(tabId, url, message)\n  {\n    extension.declarativeNetRequest.getDynamicRules(\n      (rules) =>\n      {\n        const found = rules.filter((rule) => rule.condition.urlFilter === url);\n\n        if (found.length === 0)\n        {\n          extension.declarativeNetRequest.updateDynamicRules(\n            {\n              addRules: [{\n                id: rules.length + 1,\n                condition: {\n                  domains: ['<all_urls>'],\n                  urlFilter: url,\n                  resourceTypes: ['main_frame']\n                },\n                action: {\n                  type: 'block'\n                }\n              }]\n            },\n            () =>\n            {\n              Logger.log(`${message} ${url} ${tabId}`);\n            }\n          );\n        }\n      }\n    );\n  }\n}\n","import {\r\n  EventNames,\r\n  ImpressionNames,\r\n  InteractionTypes,\r\n  SearchType,\r\n  CommonTelemetry,\r\n  FEATURE_TAB_ID,\r\n  PageLevel,\r\n  TelemetryTerms,\r\n  ToastTypes,\r\n} from '@extension/telemetry/common_telemetry';\r\nimport BackgroundCommon from '@extension/common/background_common';\r\n\r\nexport class TelemetryMessageModifiers\r\n{\r\n  constructor(options)\r\n  {\r\n    this._options = options;\r\n    this.TELEMETRY_HANDLERS = this.initializeTelemetryHandler();\r\n  }\r\n\r\n  // Traverse through the TELEMETRY_HANDLERS Json object and fetch the list of messages which match the 'identifier'\r\n  fetchTelemetryHandlers(identifier)\r\n  {\r\n    const handlers = [];\r\n    this.TELEMETRY_HANDLERS.forEach((handler) =>\r\n    {\r\n      if (!handler.trigger.identifier || (identifier === handler.trigger.identifier))\r\n      {\r\n        handlers.push(handler);\r\n      }\r\n    });\r\n    return handlers;\r\n  }\r\n\r\n  /*\r\n    JSON object pertaining the list of all the Telemetry attributes needed for identifing the event/action.\r\n    Also returns the list of messages associated with each identifier which is the telemetry message to be sent.\r\n  */\r\n  initializeTelemetryHandler()\r\n  {\r\n    return [\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          sendTelemetry: this._options.isFromBackground || false\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: (this._options.level === PageLevel.FRAME) ? 'UNKNOWN' : (this._options.blockPageStyle || 'UNKNOWN'),\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: this._options.blockPageStyle || 'UNKNOWN',\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_ACTION_CLICKED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BROWSER_ACTION_CLICKED,\r\n              interaction_type: InteractionTypes.WEBADVISOR,\r\n              badge_count: this._options.count,\r\n              _event_name: EventNames.BROWSER_ACTION_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_NAVIGATE,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              url: this._options.url,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.BROWSER_NAVIGATE\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_learn_link',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.LEARN_MORE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '.crypto-block-actions__close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_banner_allow_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.WHITELISTED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DOWNLOAD_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.DOWNLOAD_BLOCK,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              process_name: TelemetryTerms.MISC.UNKNOWN,\r\n              file_name: TelemetryTerms.MISC.UNKNOWN,\r\n              colour: TelemetryTerms.MISC.UNKNOWN,\r\n              ui_type: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.DOWNLOAD_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.PREFERENCE}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.WHITELIST}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.WHITELIST),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.ABOUT}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.ABOUT),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.STATISTICS}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.STATISTICS),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          selector: '#block_page_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          selector: '#typosquatting_message_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SECURE_SEARCH_HIT,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: ImpressionNames.SECURE_SEARCH_HIT,\r\n              search_type: SearchType.DEFAULT,\r\n              _event_name: EventNames.SECURE_SEARCH_HIT,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              type_tag: this._options.typeTag,\r\n              provider_type: this._options.engineName\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SIDEBAR_PANEL,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SIDEBAR_PANEL,\r\n              interaction_type: this._options.interaction_type,\r\n              _event_name: EventNames.SIDEBAR_PANEL,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SMA_REPUTATION,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.GREEN,\r\n              count: this._options[TelemetryTerms.MISC.GREEN],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.RED,\r\n              count: this._options[TelemetryTerms.MISC.RED],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.YELLOW,\r\n              count: this._options[TelemetryTerms.MISC.YELLOW],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.UNKNOWN,\r\n              count: this._options[TelemetryTerms.MISC.UNKNOWN],\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TOAST,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              _event_name: 'ToastCheckCompleted',\r\n              category: 'ToastCheck',\r\n              triggerType: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              _event_name: 'Secure_Search_Toast',\r\n              category: 'SecureSearchToast',\r\n              action_type: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              provider: (this._options.toastData) ? (this._options.toastData.providerId) : TelemetryTerms.MISC.UNKNOWN,\r\n              toastType: (this._options.toastData) ? (this._options.toastData.toastType) : ToastTypes.REGULAR_TOAST,\r\n              metadata: (this._options.toastData) ? (this._options.toastData.metadata) : TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TYPOSQUATTING,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.TYPOSQUATTING,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.TYPOSQUATTING\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#rat_detection_got_it_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.ACKNOWLEDGED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar_rat_detection_whitelist_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.WHITELISTED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.WSS_ANALYTICS,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.WSS_ANALYTICS,\r\n              message: this._options.message,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DARK_WEB_SCAN,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.DARK_WEB_SCAN,\r\n              category: EventNames.DARK_WEB_SCAN,\r\n              action_type: this._options.eventAction || TelemetryTerms.MISC.UNKNOWN,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              count: this._options.count || TelemetryTerms.MISC.UNKNOWN,\r\n              type: this._options.type,\r\n              flow_id: this._options.flowId,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.EVENT_NAME,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_HOVER,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.HOVER,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.CLOSE_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.TOAST_CLOSE,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: this._options.gotItButton ? InteractionTypes.GOT_IT : InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n    ];\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\n/////////////////////////////////\n//////////////////////////////////\n//////////\nexport default class Utils\n{\n  /**\n   * Creates a debounced function that delays invoking func until after wait\n   * milliseconds have elapsed since the last time the debounced function was invoked.\n   * source: http://davidwalsh.name/javascript-debounce-function\n  */\n  static debounce(func, wait, immediate)\n  {\n    let timeout;\n    return (...args) =>\n    {\n      const later = () =>\n      {\n        timeout = null;\n        if (!immediate) func(...args);\n      };\n\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(later, wait);\n      if (callNow) func(...args);\n    };\n  }\n\n  static isBrowserEN()\n  {\n    const language = extension.i18n.getUILanguage();\n    return language.toLowerCase().startsWith('en');\n  }\n\n  static isChromeBrowser()\n  {\n    // window.opr is only defined for opera. Edge Chromium has user agent Edg. So avoid these two as\n    // chrome extension can be installed even in these two popular browsers, window.navigator\n    const ua = navigator.userAgent.toLowerCase();\n\n    // Check if browser is chromium based, window.chrome\n    if (!ua.includes('chrome') || !!chrome === false) return false;\n\n    // check if it is opera browser, window.opr\n    if (ua.includes('opr')) return false;\n\n    // check if it is edge browser\n    if (ua.includes('edg')) return false;\n\n    return true;\n  }\n}\n\n/**\n * Vanilla JS solution to JQuery's $(document).ready() API\n */\nexport const onDOMContentReady = (cb) =>\n{\n  if (typeof document === 'undefined' || document === null)\n  {\n    return;\n  }\n\n  if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll))\n  {\n    cb();\n  }\n  else\n  {\n    document.addEventListener('DOMContentLoaded', cb);\n  }\n};\n\nexport const getBrowserInfo = () =>\n{\n  const ua = navigator.userAgent.toLowerCase();\n\n  const match = /(edge)\\/([\\w.]+)/.exec(ua)\n        || /(edg)\\/([\\w.]+)/.exec(ua)\n        || /(opr)[/]([\\w.]+)/.exec(ua)\n        || /(chrome)[ /]([\\w.]+)/.exec(ua)\n        || /(iemobile)[/]([\\w.]+)/.exec(ua)\n        || /(version)(applewebkit)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+).*(version)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+)/.exec(ua)\n        || /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua)\n        || /(msie) ([\\w.]+)/.exec(ua)\n        || (ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua))\n        || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua))\n        || [];\n\n  const platformMatch = /(ipad)/.exec(ua)\n        || /(ipod)/.exec(ua)\n        || /(windows phone)/.exec(ua)\n        || /(iphone)/.exec(ua)\n        || /(kindle)/.exec(ua)\n        || /(silk)/.exec(ua)\n        || /(android)/.exec(ua)\n        || /(win)/.exec(ua)\n        || /(mac)/.exec(ua)\n        || /(linux)/.exec(ua)\n        || /(cros)/.exec(ua)\n        || /(playbook)/.exec(ua)\n        || /(bb)/.exec(ua)\n        || /(blackberry)/.exec(ua)\n        || [];\n\n  const matched = {\n    browser: match[5] || match[3] || match[1] || '',\n    version: match[4] || match[2] || '0',\n    platform: platformMatch[0] || '',\n  };\n\n  if (matched.browser === 'mozilla')\n  {\n    matched.browser = 'firefox';\n  }\n\n  if (matched.browser === 'edg')\n  {\n    matched.browser = 'edge';\n  }\n\n  return matched;\n};\n\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n */\nexport async function digestMessage(message)\n{\n  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8); // hash the message\n  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n  return hashHex;\n}\n/////////////////////////////////\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////\n \n/////\n///\n////////////////////\n/////////////////\n///////////////////////\n///////////////////\n////////////////////////\n//////////////////////\n////////////////////////////\n//////////////////\n/////////////////////////////\n///////\n//////\n\n////////////////////////////////////////////\n///\n///////////////\n///\n//////////////\n///\n \n//////////\n","import { TelemetryTerms } from '@extension/telemetry/common_telemetry';\r\nimport { TelemetryMessageModifiers } from '@extension/telemetry/telemetry_message_modifiers';\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\nimport { onDOMContentReady } from '@extension/utilities/utils';\r\n\r\nexport default class ContextTelemetry\r\n{\r\n  /* Registers the telemetry and fetches the respective messages based on the mapped 'identifiers'.\r\n     - Sends telemetry if associated with a User action event for a few respective cases.\r\n     - Else sends telemetry based on the 'sendTelemetry' attribute value for a few respective cases.\r\n     - Or else sends telemetry when the document is ready for a few respective cases.\r\n  */\r\n  static sendTelemetryMessages(options, handler)\r\n  {\r\n    const { sendTelemetry } = handler.trigger;\r\n    const triggerAction = handler.trigger.action;\r\n    const permittedActionList = [TelemetryTerms.ACTION.CLICK]; // All non-keyPress user actions\r\n\r\n    if (handler.trigger.selector && handler.trigger.action)\r\n    {\r\n      if (options.containerMeta)\r\n      {\r\n        const selectedTag = options.containerMeta.query(handler.trigger.selector);\r\n        if (selectedTag)\r\n        {\r\n          selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n        }\r\n      }\r\n      else\r\n      {\r\n        onDOMContentReady(() =>\r\n        {\r\n          const selectedTag = document.querySelector(handler.trigger.selector);\r\n          if (selectedTag)\r\n          {\r\n            selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    else if (sendTelemetry || (handler.trigger.state === options.state))\r\n    {\r\n      sendMessages();\r\n    }\r\n\r\n    /**\r\n     * Function handling the sending of telemetry, either from content or background script.\r\n     * @param {Object} event - Event object if invoked by an event listener. Can also be undefined if invoked directly by us.\r\n     */\r\n    function sendMessages(event)\r\n    {\r\n      handler.messages.forEach((spec) =>\r\n      {\r\n        const telemetryMessage = { ...spec.template };\r\n        // send telemetry only when its loaded or when its loaded with count != 0 (SMA Reputation)\r\n        const shouldSendMessage = ((sendTelemetry) && ((telemetryMessage.count !== undefined) ? (telemetryMessage.count !== 0) : true));\r\n\r\n        /* send telemetry when the key pressed is in WHITELISTEDKEYS array (found in 'options' JSON)\r\n           or if the user action is a click event */\r\n        let worthyAction = permittedActionList.includes(triggerAction);\r\n        if (triggerAction === TelemetryTerms.ACTION.KEYDOWN && options.whitelistedKeys)\r\n        {\r\n          const eventCode = event.keyCode;\r\n          worthyAction = options.whitelistedKeys.includes(eventCode);\r\n        }\r\n\r\n        if (shouldSendMessage || worthyAction)\r\n        {\r\n          if (options.isFromBackground)\r\n          {\r\n            BackgroundGlobals.messageDispatcher.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n          else\r\n          {\r\n            BackgroundIPC.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Accepts the paramters required for detecting the respective telemetry */\r\n  static handle(options)\r\n  {\r\n    const messageModifiers = new TelemetryMessageModifiers(options);\r\n    const telemetryHandlers = messageModifiers.fetchTelemetryHandlers(options.identifier);\r\n    telemetryHandlers.forEach((handler) =>\r\n    {\r\n      this.sendTelemetryMessages(options, handler);\r\n    });\r\n  }\r\n}\r\n","export class CommonUtils\r\n{\r\n  static combineExceptions(trainingData)\r\n  {\r\n    let result = [];\r\n    for (const formName in trainingData)\r\n    {\r\n      const domains = trainingData[formName];\r\n      for (const domain in domains)\r\n      {\r\n        const exceptions = domains[domain];\r\n        result = result.concat(exceptions);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  static validateEmailFormat(email)\r\n  {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    return re.test(email);\r\n  }\r\n}\r\n\r\nexport class FDBoolean\r\n{\r\n  static toBit(bool)\r\n  {\r\n    return bool ? 1 : 0;\r\n  }\r\n}\r\n\r\nexport class FDWindow\r\n{\r\n  static isBrowser()\r\n  {\r\n    return chrome || window.safari;\r\n  }\r\n\r\n  static getFavicon()\r\n  {\r\n    const links = document.getElementsByTagName('link');\r\n    let favicon = '';\r\n    for (let i = 0; i < links.length; i++)\r\n    {\r\n      const item = links[i];\r\n      if (item.getAttribute('rel') === 'icon' || item.getAttribute('rel') === 'shortcut icon')\r\n      {\r\n        favicon = item.href;\r\n      }\r\n      if (item.getAttribute('rel') === 'apple-touch-icon')\r\n      {\r\n        favicon = item.href;\r\n        break;\r\n      }\r\n    }\r\n    return favicon;\r\n  }\r\n\r\n  static getOriginUrlForTraining()\r\n  {\r\n    if (window.location.ancestorOrigins !== undefined\r\n      && window.location.ancestorOrigins.length > 0)\r\n    {\r\n      return window.location.ancestorOrigins[0];\r\n    }\r\n\r\n    return window.location.href;\r\n  }\r\n}\r\n\r\nexport class FDHtmlElement\r\n{\r\n  static isHiddenFromScreen(el)\r\n  {\r\n    if (el.hidden === true)\r\n    {\r\n      return true;\r\n    }\r\n    if (el.tabIndex === -1)\r\n    {\r\n      return true;\r\n    }\r\n    if (el.getAttribute('aria-hidden') === true || el.getAttribute('aria-hidden') === 'true')\r\n    {\r\n      return true;\r\n    }\r\n    const styles = window.getComputedStyle(el);\r\n    if (styles.visibility === 'hidden' || styles.display.includes('none') || styles.opacity === '0')\r\n    {\r\n      return true;\r\n    }\r\n    const element = el.getBoundingClientRect();\r\n    const documentRect = document.documentElement.getBoundingClientRect();\r\n    if (element.top + element.height < documentRect.top)\r\n    {\r\n      return true;\r\n    }\r\n    if (element.left > Math.max(documentRect.right, documentRect.width))\r\n    {\r\n      return true;\r\n    }\r\n    if (element.width === 0 || element.height === 0)\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static hasCaptcha(el)\r\n  {\r\n    const elements = Array.prototype.slice.call(el.querySelectorAll(\"[id*='captcha']\"));\r\n    for (const el of elements)\r\n    {\r\n      if (FDHtmlElement.isHiddenFromScreen(el) === false)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static triggerValueChange(el)\r\n  {\r\n    const inputEvent = new Event('input', { bubbles: true, cancelable: true });\r\n    el.dispatchEvent(inputEvent);\r\n    const changeEvent = new Event('change', { bubbles: true, cancelable: true });\r\n    el.dispatchEvent(changeEvent);\r\n    const keyupEvent = new Event('keyup', { bubbles: true });\r\n    el.dispatchEvent(keyupEvent);\r\n    el.blur();\r\n  }\r\n\r\n  static passwordFieldsCount(el)\r\n  {\r\n    const elements = el.getElementsByTagName('input');\r\n    let result = 0;\r\n    for (let i = 0; i < elements.length; i++)\r\n    {\r\n      const type = elements[i].getAttribute('type') ? elements[i].getAttribute('type').toLowerCase() : '';\r\n      if (type === 'password' && FDHtmlElement.isHiddenFromScreen(elements[i]) === false)\r\n      {\r\n        result++;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static inputFieldsCount(el)\r\n  {\r\n    const array = el.getElementsByTagName('input');\r\n    let result = 0;\r\n    for (let i = 0; i < array.length; i++)\r\n    {\r\n      const type = array[i].getAttribute('type') ? array[i].getAttribute('type').toLowerCase() : '';\r\n      if (type !== 'hidden'\r\n            && type !== 'checkbox'\r\n            && type !== 'submit'\r\n            && type !== 'button'\r\n            && type !== 'password'\r\n            && FDHtmlElement.isHiddenFromScreen(array[i]) === false)\r\n      {\r\n        result++;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static getParentForm(el)\r\n  {\r\n    if (el.closest)\r\n    {\r\n      const form = el.closest('form');\r\n      return form || undefined;\r\n    }\r\n\r\n    let parent = el.parentElement;\r\n    while (!(parent instanceof HTMLFormElement) && parent)\r\n    {\r\n      parent = parent.parentElement;\r\n    }\r\n    return parent;\r\n  }\r\n\r\n  /**\r\n   * Returns closest parent that is of position type \"relative\" or \"absolute\" or the body itself.\r\n   * @param {HTMLElement} - The html element\r\n   */\r\n  static getOffsetDiv(el)\r\n  {\r\n    let offsetParentDiv;\r\n\r\n    if (el.offsetParent && el.offsetParent instanceof HTMLDivElement)\r\n    {\r\n      offsetParentDiv = el.offsetParent;\r\n    }\r\n\r\n    return offsetParentDiv;\r\n  }\r\n\r\n  static intersectWithClientRect(el, zone)\r\n  {\r\n    const elementRect = el.getBoundingClientRect();\r\n    return !(elementRect.left > zone.right\r\n        || elementRect.right < zone.left\r\n        || elementRect.top > zone.bottom\r\n        || elementRect.bottom < zone.top);\r\n  }\r\n\r\n  static performRealMouseClick(el)\r\n  {\r\n    const realMouseClick = new MouseEvent(\r\n      'click',\r\n      {\r\n        view: window,\r\n        bubbles: true,\r\n        cancellable: true,\r\n        detail: 1\r\n      }\r\n    );\r\n    el.dispatchEvent(realMouseClick);\r\n  }\r\n\r\n  static performEnterKeyPress(el)\r\n  {\r\n    const enterKeyPress = new KeyboardEvent(\r\n      'keypress',\r\n      {\r\n        altKey: false,\r\n        bubbles: true,\r\n        cancelBubble: false,\r\n        cancelable: true,\r\n        charCode: 0,\r\n        code: 'Enter',\r\n        composed: true,\r\n        ctrlKey: false,\r\n        currentTarget: null,\r\n        defaultPrevented: true,\r\n        detail: 0,\r\n        eventPhase: 0,\r\n        isComposing: false,\r\n        isTrusted: true,\r\n        key: 'Enter',\r\n        keyCode: 13,\r\n        location: 0,\r\n        metaKey: false,\r\n        repeat: false,\r\n        returnValue: false,\r\n        shiftKey: false,\r\n        type: 'keypress',\r\n        which: 13\r\n      }\r\n    );\r\n    el.dispatchEvent(enterKeyPress);\r\n  }\r\n\r\n  /**\r\n   * Gets the FDProcessedID of an element if it exists, returns null otherwise.\r\n   * @param {HTMLElement} el\r\n   * @returns string value of FDProcessedID\r\n   */\r\n  static getFDProcessedID(el)\r\n  {\r\n    return el.getAttribute('FDProcessedID');\r\n  }\r\n\r\n  /**\r\n   * Tells whether or not the element has the FDProcessedID attribute\r\n   * @param {HTMLElement} el\r\n   * @returns boolean\r\n   */\r\n  static hasFDProcessedID(el)\r\n  {\r\n    return el.hasAttribute('FDProcessedID');\r\n  }\r\n\r\n  /**\r\n   * Adds a fd processed ID to an element and then returns the new id for the element.\r\n   * If the element already has an ID it will just return the pre-existing one.\r\n   * @param {HTMLElement} el\r\n   * @returns string value of FDProcessedID\r\n   */\r\n  static addOrGetFDProcessedID(el)\r\n  {\r\n    if (FDHtmlElement.hasFDProcessedID(el))\r\n    {\r\n      return FDHtmlElement.getFDProcessedID(el);\r\n    }\r\n\r\n    const fdpid = Math.random().toString(36).substring(7);\r\n    el.setAttribute('FDProcessedID', fdpid);\r\n    return fdpid.toString(10);\r\n  }\r\n}\r\n","import HttpService from '@extension/common/http_service';\r\nimport { extension } from '@extension/common/webextension';\r\n\r\nexport default class ResourceRequestor\r\n{\r\n  constructor()\r\n  {\r\n    this.http = new HttpService();\r\n  }\r\n\r\n  geti18nRes(attr, placeholders = [])\r\n  {\r\n    let str = extension.i18n.getMessage(attr, placeholders);\r\n    const productName = extension.i18n.getMessage('res_PRODUCT_NAME_TRADEMARKED');\r\n    str = str.replace(/%PRODUCTNAME%/g, productName);\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Get the message based on the resource id\r\n   * @param {Number}   resourceId - Resource id\r\n   * @param {Function} callback   - Handles the returned localized string\r\n   */\r\n  getResStr(resourceId, callback)\r\n  {\r\n    const message = this.geti18nRes(resourceId);\r\n    callback(\r\n      message === '??' ? '' : message\r\n    );\r\n  }\r\n}\r\n","import BackgroundIPC from '@extension/common/background_ipc';\r\nimport ResourceRequestor from '../../coreengine/resource_requestor';\r\n\r\nexport default class UIStrings\r\n{\r\n  constructor(iframeId = null, pageDocument = document)\r\n  {\r\n    this.resourcerequestor = new ResourceRequestor();\r\n    this.document = pageDocument;\r\n\r\n    if (iframeId)\r\n    {\r\n      const iframeContainer = this.document.querySelectorAll(`#${iframeId}`);\r\n      if (iframeContainer) this.document = iframeContainer[0].contentDocument;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Passes message name into helper class to retrieve the appropriate localized message for it\r\n   * @param   {string} attr - Name of the message to resolve as specified in the messages.json file\r\n   * @returns {string} - The localized message for current locale\r\n   */\r\n  localeData(attr, placeholders = [])\r\n  {\r\n    return this.resourcerequestor.geti18nRes(attr, placeholders);\r\n  }\r\n\r\n  /**\r\n   * Resolve a specified html element (through id) with the provided text\r\n   * @param {string} id   - The id of the html element\r\n   * @param {string} text - The text to be injected into the html element\r\n   */\r\n  fillText(id, text)\r\n  {\r\n    const element = this.document.getElementById(id);\r\n\r\n    if (element)\r\n    {\r\n      const position = element.getAttribute('x-mcinsertposition');\r\n      if (position)\r\n      {\r\n        element.insertAdjacentText(position, text);\r\n        return;\r\n      }\r\n\r\n      element.textContent = text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resolves all html elements that need to be populated with localized string resources.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillLocalizedTexts()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-mclocalizedtext]'))\r\n    {\r\n      const text = this.localeData(id);\r\n\r\n      if (text === null || text === undefined) return false;\r\n\r\n      this.fillText(id, text);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Fills all input place holder strings. These are hint string to be added to input html elements.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillInputPlaceHolders()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-inputplaceholder]'))\r\n    {\r\n      const text = this.localeData(id);\r\n      const element = this.document.getElementById(id);\r\n\r\n      if (text === null || text === undefined) return false;\r\n\r\n      if (element !== null && element !== undefined)\r\n      {\r\n        element.setAttribute('placeholder', text);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Sends command to background to fill in placeholder text.\r\n   * @param {string} id - Resource id\r\n   */\r\n  fillPlaceHolderInternal(id)\r\n  {\r\n    BackgroundIPC.getPlaceholderText(id).then((data) =>\r\n    {\r\n      this.fillText(id, data.text);\r\n    }).catch(() => {});\r\n  }\r\n\r\n  /**\r\n   * Fills all internal placeholders.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillPlaceHolders()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-mcplaceholder]'))\r\n    {\r\n      this.fillPlaceHolderInternal(id);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Initializing steps for the class.\r\n   */\r\n  init()\r\n  {\r\n    // if failed to replace a text in locale then show blank page.\r\n    this.fillLocalizedTexts();\r\n    this.fillPlaceHolders();\r\n    this.fillInputPlaceHolders();\r\n  }\r\n}\r\n","// Common\r\nimport { extension } from '@extension/common/webextension';\r\nimport { Logger } from '@extension/common/logger';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n// Telemetry\r\nimport { EventNames } from '@extension/telemetry/common_telemetry';\r\nimport ContextTelemetry from '@extension/telemetry/context_telemetry';\r\n// Util\r\nimport { CommonUtils } from '@mcafee/form-detection/utils';\r\nimport UIStrings from '@extension/utilities/ui_strings';\r\nimport Utils from '@extension/utilities/utils';\r\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\r\n\r\nconst SCREEN_TYPE = {\r\n  SCAN_EMAIL: 'SCAN_EMAIL',\r\n};\r\n\r\nexport default class DWS\r\n{\r\n  constructor(componentData, containerHandler)\r\n  {\r\n    this.componentData = componentData;\r\n\r\n    // UI data\r\n    this.email = componentData.email;\r\n    this.dwsInfo = componentData.dwsInfo;\r\n\r\n    // containerHandler related\r\n    this.shadowRoot = containerHandler.shadowRoot;\r\n    this.showContainer = containerHandler.showContainer;\r\n    this.closeContainer = containerHandler.closeContainer;\r\n    this.clickListener = containerHandler.clickListener;\r\n    this.query = containerHandler.query;\r\n    this.querySelector = containerHandler.querySelector;\r\n    this.querySelectorAll = containerHandler.querySelectorAll;\r\n    this.interactiveBalloon = containerHandler.interactiveBalloon;\r\n\r\n    // Telemetry\r\n    this.telemetryInfo = {\r\n      uniqueEmailCount: componentData.uniqueEmailCount,\r\n      screen: null,\r\n      flowId: null\r\n    };\r\n  }\r\n\r\n  async init()\r\n  {\r\n    const screenData = this.getScreenType();\r\n    if (!screenData) return;\r\n\r\n    // Create container messages\r\n    this.createContentContainer(screenData);\r\n\r\n    // Resolve locales\r\n    this.initLocales();\r\n\r\n    // Attach click events to different component pieces\r\n    this.initListeners(screenData);\r\n\r\n    // Add custom typefaces and inject into the main document because shadow DOM does not load custom fonts.\r\n    // For example Google Fonts must be added to the main document (light DOM) for typeface to work.\r\n    try\r\n    {\r\n      // Poppins\r\n      const poppinsUrl = extension.runtime.getURL('fonts/Poppins-Regular.ttf');\r\n      const poppinsFont = new FontFace('mcafeePoppins', `url(${poppinsUrl})`);\r\n      await poppinsFont.load(); // wait for font to be loaded\r\n      document.fonts.add(poppinsFont); // add font to document\r\n\r\n      // OpenSans\r\n      const openSansUrl = extension.runtime.getURL('fonts/OpenSans-Regular.ttf');\r\n      const openSansFont = new FontFace('mcafeeOpenSans', `url(${openSansUrl})`);\r\n      await openSansFont.load(); // wait for font to be loaded\r\n      document.fonts.add(openSansFont); // add font to document\r\n    }\r\n    catch (error)\r\n    {\r\n      Logger.error(error);\r\n      return;\r\n    }\r\n\r\n    // Show balloon message after everything has loaded\r\n    this.showContainer();\r\n  }\r\n\r\n  /**\r\n   * If email was scanned before, we need to show the breach detail screen directly. Other wise we need to\r\n   * show the initial screen to offer a DWS as long as it has been at least 24h since last time.\r\n   */\r\n  getScreenType()\r\n  {\r\n    if (!this.dwsInfo) return null;\r\n\r\n    const { shownCount } = this.dwsInfo;\r\n    return {\r\n      type: SCREEN_TYPE.SCAN_EMAIL,\r\n      shownCount: shownCount || 0\r\n    };\r\n  }\r\n\r\n  /**\r\n   * When called, it will hide all active sections and load the screen passed.\r\n   * Pass handlers if you want custom behavior during the load process.\r\n   * This method switches between the different DWS screens\r\n   */\r\n  loadScreen(screenSelector, cbHandlers = {})\r\n  {\r\n    const { onFadeOut, onScreenActive } = cbHandlers;\r\n    const screen = this.querySelector('.screens-container');\r\n\r\n    UIContentUtils.fadeOut(screen, () =>\r\n    {\r\n      onFadeOut && onFadeOut();\r\n\r\n      // Either first time rendering (meaning no active screen), or component has been already rendered before\r\n      const currActiveScreenEl = this.querySelector('.screen.active');\r\n      if (currActiveScreenEl)\r\n      {\r\n        currActiveScreenEl.classList.remove('active');\r\n      }\r\n\r\n      this.querySelector(screenSelector).classList.add('active');\r\n\r\n      onScreenActive && onScreenActive();\r\n\r\n      UIContentUtils.fadeIn(screen);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Launch IDPS login flow\r\n   */\r\n  scan()\r\n  {\r\n    const emailInput = this.querySelector('#email-input-wrapper > .wa-text-input > input');\r\n    const emailLabel = this.querySelector('#email-input-wrapper > .wa-text-input > label');\r\n\r\n    const isValidEmail = this.validateEmail(emailInput, emailLabel);\r\n    if (!isValidEmail) return;\r\n\r\n    BackgroundIPC.updateDWSWhitelist(this.email);\r\n    this.closeContainer();\r\n    BackgroundIPC.launchIDPSLogin();\r\n  }\r\n\r\n  /**\r\n   * Initialize locales\r\n   */\r\n  initLocales()\r\n  {\r\n    this.strConvertor = new UIStrings(null, this.shadowRoot);\r\n    this.strConvertor.init();\r\n  }\r\n\r\n  /**\r\n   * Initialize event listeners for all screens.\r\n   */\r\n  initListeners()\r\n  {\r\n    // Handles the different ways of closing the balloon component\r\n    // Map of id names with their corresponding telemetry action\r\n    const closeButtonIds = {\r\n      '#dws_thanks_btn': {\r\n        eventAction: 'Acknowledged',\r\n      },\r\n      '#dws_next_time_btn': {\r\n        eventAction: 'Declined',\r\n      },\r\n      '#dws_do_not_ask_again_close_btn': {\r\n        eventAction: 'Acknowledged',\r\n      },\r\n      '#close-icon-btn': {\r\n        eventAction: 'XClicked',\r\n      }\r\n    };\r\n    const closeButtons = this.querySelectorAll(Object.keys(closeButtonIds).join(', '));\r\n\r\n    for (const button of Array.from(closeButtons))\r\n    {\r\n      button.addEventListener('click', (event) =>\r\n      {\r\n        let { eventAction } = closeButtonIds[`#${event.target.id}`];\r\n\r\n        if (this.dwsInfo.shownCount >= 2 && eventAction === 'XClicked')\r\n        {\r\n          this.telemetryInfo.screen = 'wont_ask_again';\r\n          eventAction = 'Impression';\r\n        }\r\n\r\n        ContextTelemetry.handle({\r\n          flowId: this.telemetryInfo.flowId,\r\n          identifier: EventNames.DARK_WEB_SCAN,\r\n          count: this.telemetryInfo.uniqueEmailCount,\r\n          eventAction,\r\n          type: this.telemetryInfo.screen\r\n        });\r\n\r\n        this.closeContainer();\r\n      });\r\n    }\r\n\r\n    // Scan email buttons handler\r\n    const scanEmailButtonsId = [\r\n      '#dws_scan_btn',\r\n      '#dws_scan_btn_first_time'\r\n    ];\r\n    const scanEmailButtons = this.querySelectorAll(scanEmailButtonsId.join(', '));\r\n\r\n    for (const button of Array.from(scanEmailButtons))\r\n    {\r\n      // eslint-disable-next-line no-loop-func\r\n      button.addEventListener('click', Utils.debounce(() =>\r\n      {\r\n        ContextTelemetry.handle({\r\n          flowId: this.telemetryInfo.flowId,\r\n          identifier: EventNames.DARK_WEB_SCAN,\r\n          count: this.telemetryInfo.uniqueEmailCount,\r\n          eventAction: 'Accepted',\r\n          type: this.telemetryInfo.screen\r\n        });\r\n\r\n        this.scan();\r\n      }), 1000);\r\n    }\r\n\r\n    const remindLaterButton = this.querySelector('#dws_remind_later_btn');\r\n\r\n    remindLaterButton.addEventListener('click', () =>\r\n    {\r\n      // Show remind me later UI\r\n      this.loadScreen('#screen-remind-later', {\r\n        onScreenActive: () =>\r\n        {\r\n          this.telemetryInfo.screen = 'ask_again_next_time';\r\n          ContextTelemetry.handle({\r\n            flowId: this.telemetryInfo.flowId,\r\n            identifier: EventNames.DARK_WEB_SCAN,\r\n            count: this.telemetryInfo.uniqueEmailCount,\r\n            eventAction: 'Impression',\r\n            type: this.telemetryInfo.screen\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    const dontAskAgainBtn = this.querySelector('#dws_do_not_ask_again_btn');\r\n    dontAskAgainBtn.addEventListener('click', () =>\r\n    {\r\n      // Add email to whitelist to be excluded from offering DWS in the future\r\n      BackgroundIPC.updateDWSWhitelist(this.email);\r\n\r\n      // Clean up cache for this email\r\n      BackgroundIPC.clearCachedDWSInfo(this.email);\r\n\r\n      // Show don't ask again UI\r\n      this.loadScreen('#screen-do-not-ask-again', {\r\n        onScreenActive: () =>\r\n        {\r\n          this.telemetryInfo.screen = 'wont_ask_again';\r\n          ContextTelemetry.handle({\r\n            flowId: this.telemetryInfo.flowId,\r\n            identifier: EventNames.DARK_WEB_SCAN,\r\n            count: this.telemetryInfo.uniqueEmailCount,\r\n            eventAction: 'Impression',\r\n            type: this.telemetryInfo.screen\r\n          });\r\n        }\r\n      });\r\n    });\r\n\r\n    // These contain the email inputs on the scan email screen and the sign in account screen\r\n    const emailInput = this.querySelector('.wa-text-input > #email-input');\r\n    const emailLabel = this.querySelector('.wa-text-input > label');\r\n\r\n    emailInput.addEventListener('blur', () =>\r\n    {\r\n      emailInput.style.border = '1px solid #ABB2C3';\r\n      emailLabel.style.color = '#5A6175';\r\n      this.validateEmail(emailInput, emailLabel);\r\n    });\r\n\r\n    emailInput.addEventListener('focus', (event) =>\r\n    {\r\n      event.currentTarget.select();\r\n      emailInput.style.border = '1px solid #4258FF';\r\n      emailLabel.style.color = '#4258FF';\r\n    });\r\n  }\r\n\r\n  validateEmail(emailInput, emailLabel)\r\n  {\r\n    const errorPrompt = this.querySelector('.email-error-div');\r\n    const errorX = this.querySelector('.email-error-x');\r\n\r\n    if (!CommonUtils.validateEmailFormat(emailInput.value))\r\n    {\r\n      emailInput.classList.add('wa-text-input-not-email');\r\n      emailLabel.classList.add('wa-text-label-not-email');\r\n      errorPrompt.style.display = 'block';\r\n      errorX.style.display = 'block';\r\n      Logger.log('The email entered is not in a valid email format');\r\n      return false;\r\n    }\r\n\r\n    emailInput.classList.remove('wa-text-input-not-email');\r\n    emailLabel.classList.remove('wa-text-label-not-email');\r\n    errorPrompt.style.display = 'none';\r\n    errorX.style.display = 'none';\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Call to load the initial screen.\r\n   */\r\n  createContentContainer(screenData)\r\n  {\r\n    const mainContainer = this.querySelector('.mc-dws-main-container');\r\n\r\n    switch (screenData.type)\r\n    {\r\n      case SCREEN_TYPE.SCAN_EMAIL:\r\n      {\r\n        const screenScanEmail = this.querySelector('#screen-scan-email');\r\n        screenScanEmail.classList.add('active');\r\n\r\n        const emailInput = this.querySelector('.wa-text-input > #email-input');\r\n        emailInput.setAttribute('value', this.email);\r\n\r\n        // Show correct actions based on amount of times UI has been shown before\r\n        if (screenData.shownCount > 0)\r\n        {\r\n          // Second and Third appearance telemetry\r\n          this.telemetryInfo.flowId = 'add-email-to-monitoring-subsequent-time-shown';\r\n          this.telemetryInfo.screen = 'identity_toast_3_buttons';\r\n        }\r\n        else\r\n        {\r\n          // First appearance telemetry\r\n          this.telemetryInfo.flowId = 'add-email-to-monitoring-first-time-shown';\r\n          this.telemetryInfo.screen = 'identity_toast_2_buttons';\r\n        }\r\n\r\n        // show the 'Remind me next time' on appearances first 2 appearances, 'Don't ask again' on third appearance\r\n        if (screenData.shownCount > 1)\r\n        {\r\n          this.querySelector('.actions.actions-first-time').style.display = 'none';\r\n        }\r\n        else\r\n        {\r\n          this.querySelector('.actions.actions-second-time').style.display = 'none';\r\n        }\r\n\r\n        mainContainer.style.display = 'block';\r\n\r\n        BackgroundIPC.updateDWSShown(this.email);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Send impression telemetry\r\n    ContextTelemetry.handle({\r\n      flowId: this.telemetryInfo.flowId,\r\n      identifier: EventNames.DARK_WEB_SCAN,\r\n      count: this.telemetryInfo.uniqueEmailCount,\r\n      eventAction: 'Impression',\r\n      type: this.telemetryInfo.screen\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\r\nimport UIStrings from '@extension/utilities/ui_strings';\r\nimport { EventNames } from '@extension/telemetry/common_telemetry';\r\nimport ContextTelemetry from '@extension/telemetry/context_telemetry';\r\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\r\nimport { Logger } from '@extension/common/logger';\r\nimport { Globals } from '@core-engine/globals';\r\n\r\nconst BALLOON_STATE = {\r\n  COLLAPSE: 'COLLAPSE',\r\n  EXPAND: 'EXPAND',\r\n  CLOSE: 'CLOSE',\r\n};\r\n\r\nexport const BALLOON_TRIGGER_TYPE = {\r\n  FINANCIAL: 'FINANCIAL',\r\n  EMAIL: 'EMAIL',\r\n  ECOMMERCE: 'ECOMMERCE',\r\n  SIGNUP: 'SIGNUP',\r\n};\r\n\r\nexport default class AdvancedProtectionSignal\r\n{\r\n  constructor(data, container)\r\n  {\r\n    this.data = data;\r\n    this.container = container; // ShadowDomContainer\r\n    this.strConvertor = new UIStrings(null, this.container.shadowRoot);\r\n\r\n    // Details\r\n    this.triggerType = data.triggerType && data.triggerType.toLowerCase();\r\n    this.color = data.rating && data.rating.toLowerCase();\r\n    this.sequence = 2;\r\n\r\n    // Common Selectors\r\n    this.shield = this.container.querySelector('.shield');\r\n    this.shieldImage = this.container.querySelector('.shield > img');\r\n    this.signalExpanded = this.container.querySelector('.signal--expanded');\r\n\r\n    // Shield Animation\r\n    this.autoExpandedByTimer = false;\r\n    this.autoCollapseTimer = null;\r\n    this.shieldAnimation = null;\r\n    this.onFinishAnimation = this.onFinishAnimation.bind(this);\r\n\r\n    // telemetry\r\n    this.telemetryBalloonSent = false;\r\n    this.telemetryHoverSent = false;\r\n\r\n    // balloon text\r\n    this.balloonText = null;\r\n  }\r\n\r\n  async init()\r\n  {\r\n    if (!this.triggerType || !this.color)\r\n    {\r\n      Logger.warn('APS Balloon init: triggerType/color not provided');\r\n      return;\r\n    }\r\n\r\n    // Initialize Font on document\r\n    await UIContentUtils.initFontOnDocument();\r\n\r\n    const configureStyles = (color, imageSrc, locale) =>\r\n    {\r\n      const { waImageSecret } = this.data;\r\n      this.shield.style.backgroundColor = color;\r\n      this.signalExpanded.style.backgroundColor = color;\r\n\r\n      this.container.querySelector('.rating-image').src = extension.runtime.getURL(`${imageSrc}?secret=${waImageSecret}`);\r\n      this.container.querySelector('#expanded-text').textContent = this.strConvertor.localeData(locale);\r\n      this.balloonText = this.strConvertor.localeData(locale);\r\n    };\r\n\r\n    switch (this.data.rating)\r\n    {\r\n      case 'GREEN':\r\n        {\r\n          const GREEN = '#0a7155';\r\n          configureStyles(GREEN, 'images/advanced_protection_signals/checkmark_aps_signal.svg', `aps_expanded_shield_site_${this.triggerType.toLowerCase()}`);\r\n        }\r\n        break;\r\n      case 'GREY':\r\n        {\r\n          const GREY = '#848FAA';\r\n          configureStyles(GREY, 'images/advanced_protection_signals/question-mark.svg', 'aps_expanded_shield_site_unknown');\r\n        }\r\n        break;\r\n      default:\r\n        throw new Error('Site rating was not provided...');\r\n    }\r\n\r\n    let height = '96px';\r\n    let width = '378px';\r\n    if (this.balloonText && this.balloonText.length > 86)\r\n    {\r\n      height = '120px';\r\n      width = '430px';\r\n      this.container.query('.signal--expanded').width('370px');\r\n    }\r\n\r\n    const animationInfo = {\r\n      properties: [{ width, height }],\r\n      timing: { fill: 'both', duration: 1000, easing: 'ease-in-out', }\r\n    };\r\n\r\n    // Create animation and add listeners for mouse events\r\n    this.shieldAnimation = new Animation('shield', this.shield, animationInfo);\r\n    this.shieldAnimation.createAnimation(this.onFinishAnimation);\r\n    this.initAnimationListener();\r\n\r\n    // Show component on the page\r\n    this.container.showContainer();\r\n\r\n    this.shieldAnimation.startTimeout(); // Initialize auto close timer\r\n\r\n    // If we are to show the full message, we will set a timer to open the\r\n    // full message after 1 seconds, then we will set a time to auto collapse\r\n    // the BubbleSignal. Note that the \"startTimeout\" set above, will be stopped\r\n    // through the expandBubbleSignal() > enter() function\r\n    if (this.data.fullMessage)\r\n    {\r\n      this.sequence = 1;\r\n\r\n      setTimeout(() =>\r\n      {\r\n        // Send telemetry full message impression\r\n        this.options = {\r\n          identifier: EventNames.APS.IMPRESSION_BALLOON,\r\n          sequence: this.sequence,\r\n          trigger: this.triggerType,\r\n          color: this.color,\r\n        };\r\n        ContextTelemetry.handle(this.options);\r\n\r\n        this.autoExpandedByTimer = true;\r\n        // initialize timer (will stop when calling expandBubbleSignal)\r\n        this.expandBubbleSignal();\r\n\r\n        // Start 3 seconds countdown to close balloon\r\n        this.autoCollapseTimer = setTimeout(() =>\r\n        {\r\n          this.collapseBubbleSignal(true);\r\n        }, 5000);\r\n      }, 1000);\r\n    }\r\n    else\r\n    {\r\n      // Send telemetry full message impression\r\n      this.options = {\r\n        identifier: EventNames.APS.IMPRESSION_BALLOON,\r\n        sequence: this.sequence,\r\n        trigger: this.triggerType,\r\n        color: this.color,\r\n      };\r\n      ContextTelemetry.handle(this.options);\r\n    }\r\n  }\r\n\r\n  onFinishAnimation(state)\r\n  {\r\n    if (state === BALLOON_STATE.EXPAND)\r\n    {\r\n      this.signalExpanded.style.opacity = 1;\r\n    }\r\n\r\n    if (state === BALLOON_STATE.CLOSE)\r\n    {\r\n      UIContentUtils.fadeOut(this.shield, () =>\r\n      {\r\n        this.container.closeContainer();\r\n      });\r\n    }\r\n  }\r\n\r\n  initAnimationListener()\r\n  {\r\n    this.shield.addEventListener('mouseenter', () =>\r\n    {\r\n      // Send Telemetry once for on Hover\r\n      if (!this.telemetryHoverSent)\r\n      {\r\n        this.options = {\r\n          identifier: EventNames.APS.IMPRESSION_HOVER,\r\n          sequence: this.sequence,\r\n          trigger: this.triggerType,\r\n          color: this.color,\r\n        };\r\n        ContextTelemetry.handle(this.options);\r\n        this.telemetryHoverSent = true;\r\n      }\r\n\r\n      // If the user clicked on the X to close, we can ignore any other request and close the UI\r\n      if (this.shieldAnimation.isClosing())\r\n      {\r\n        return;\r\n      }\r\n\r\n      // Ignore expanding balloon since it already expanded by the auto timer\r\n      if (this.autoExpandedByTimer)\r\n      {\r\n        this.autoExpandedByTimer = false; // reset so user can leave and enter the shield\r\n        if (this.autoCollapseTimer !== null)\r\n        {\r\n          // Since user enter the balloon we can stop the auto close balloon timer\r\n          clearTimeout(this.autoCollapseTimer);\r\n        }\r\n        return;\r\n      }\r\n\r\n      this.expandBubbleSignal();\r\n    });\r\n\r\n    this.shield.addEventListener('mouseleave', () =>\r\n    {\r\n      if (this.shieldAnimation.isClosing())\r\n      {\r\n        return;\r\n      }\r\n\r\n      this.collapseBubbleSignal(false);\r\n    });\r\n\r\n    // Add listener to remove the component (shown on expanded view)\r\n    this.container.querySelector('#aps-close-icon').addEventListener('click', () =>\r\n    {\r\n      // Telemetry on close click\r\n      this.options = {\r\n        identifier: EventNames.APS.CLOSE_BALLOON,\r\n        sequence: this.sequence,\r\n        trigger: this.triggerType,\r\n        color: this.color,\r\n      };\r\n      ContextTelemetry.handle(this.options);\r\n\r\n      this.collapseBubbleSignal(true);\r\n    });\r\n  }\r\n\r\n  // common on collapse bubble function\r\n  collapseBubbleSignal(close)\r\n  {\r\n    this.shieldAnimation.pause();\r\n    this.signalExpanded.style.opacity = 0;\r\n    setTimeout(() =>\r\n    {\r\n      this.shieldImage.style.opacity = 1;\r\n      this.shieldAnimation.leave(close);\r\n    }, 200);\r\n  }\r\n\r\n  expandBubbleSignal()\r\n  {\r\n    this.shieldAnimation.pause();\r\n    this.shieldImage.style.opacity = 0;\r\n    this.shieldAnimation.enter();\r\n  }\r\n}\r\n\r\n// HELPER CLASS : Create bubble Animation\r\nclass Animation\r\n{\r\n  constructor(name, element, options)\r\n  {\r\n    this.options = options;\r\n    this.element = element;\r\n    this.name = name;\r\n    this.state = BALLOON_STATE.COLLAPSE;\r\n\r\n    // timer for auto close\r\n    this.timer = null;\r\n    this.onAnimationFinish = null;\r\n  }\r\n\r\n  createAnimation(onAnimationFinish = null)\r\n  {\r\n    if (onAnimationFinish)\r\n    {\r\n      this.onAnimationFinish = onAnimationFinish;\r\n    }\r\n\r\n    this.animation = this.element.animate(this.options.properties, this.options.timing);\r\n    this.animation.pause();\r\n    this.animation.onfinish = () =>\r\n    {\r\n      onAnimationFinish && onAnimationFinish(this.state);\r\n    };\r\n  }\r\n\r\n  pause()\r\n  {\r\n    if (this.animation.playState === 'running') this.animation.pause();\r\n  }\r\n\r\n  isClosing()\r\n  {\r\n    return this.state === BALLOON_STATE.CLOSE;\r\n  }\r\n\r\n  enter()\r\n  {\r\n    this.stopTimeout();\r\n    this.state = BALLOON_STATE.EXPAND;\r\n    this.runForwards();\r\n  }\r\n\r\n  leave(close)\r\n  {\r\n    if (!close && this.timer !== null)\r\n    {\r\n      this.startTimeout();\r\n    }\r\n\r\n    this.state = close ? BALLOON_STATE.CLOSE : BALLOON_STATE.COLLAPSE;\r\n    this.runReverse();\r\n  }\r\n\r\n  runReverse()\r\n  {\r\n    this.animation.playbackRate = -1;\r\n    this.animation.play();\r\n  }\r\n\r\n  runForwards()\r\n  {\r\n    this.animation.playbackRate = 1;\r\n    this.animation.play();\r\n  }\r\n\r\n  stopTimeout()\r\n  {\r\n    if (this.timer !== null)\r\n    {\r\n      clearTimeout(this.timer);\r\n    }\r\n  }\r\n\r\n  startTimeout()\r\n  {\r\n    if (this.timer !== null)\r\n    {\r\n      clearTimeout(this.timer);\r\n    }\r\n\r\n    this.timer = setTimeout(() =>\r\n    {\r\n      this.onAnimationFinish(BALLOON_STATE.CLOSE);\r\n    }, Globals.bkGlobals.apsAnimationTimeout);\r\n  }\r\n}\r\n","import UIStrings from '@extension/utilities/ui_strings';\r\n// Telemetry\r\nimport { EventNames } from '@extension/telemetry/common_telemetry';\r\nimport ContextTelemetry from '@extension/telemetry/context_telemetry';\r\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\r\n\r\nexport default class AdvancedProtectionSignalToast\r\n{\r\n  constructor(data, container)\r\n  {\r\n    this.data = data;\r\n    this.container = container; // ShadowDomContainer\r\n    this.strConvertor = new UIStrings(null, this.container.shadowRoot);\r\n    this.strConvertor.init();\r\n  }\r\n\r\n  async init()\r\n  {\r\n    // Initialize Font on document\r\n    await UIContentUtils.initFontOnDocument();\r\n\r\n    // Show component on the page\r\n    this.initListener();\r\n    this.container.showContainer();\r\n    this.container.query('.toast__text').focus();\r\n\r\n    this.options = {\r\n      identifier: EventNames.APS.EVENT_NAME,\r\n    };\r\n    ContextTelemetry.handle(this.options);\r\n  }\r\n\r\n  initListener()\r\n  {\r\n    this.container.clickListener('#aps_toast_button', () =>\r\n    {\r\n      // Telemetry for Got it\r\n      this.options = {\r\n        identifier: EventNames.APS.TOAST_CLOSE,\r\n        gotItButton: true,\r\n      };\r\n      ContextTelemetry.handle(this.options);\r\n\r\n      this.container.closeContainer();\r\n    });\r\n\r\n    this.container.clickListener('.container__signal', () =>\r\n    {\r\n      // Telemetry for click on Shield\r\n      this.options = {\r\n        identifier: EventNames.APS.TOAST_CLOSE,\r\n        gotItButton: false,\r\n      };\r\n      ContextTelemetry.handle(this.options);\r\n\r\n      this.container.closeContainer();\r\n    });\r\n  }\r\n}\r\n","// Components\r\nimport BalloonMessageContainer from '@extension/components/balloon_message_container';\r\n// Common\r\nimport { BalloonMessageCommands } from '@extension/common/commands';\r\nimport DWS from '@extension/ui/balloon_message/dws';\r\nimport AdvancedProtectionSignal from '@extension/ui/balloon_message/advanced_protection_signal';\r\nimport AdvancedProtectionSignalToast from '@extension/ui/balloon_message/advanced_protection_signal_toast';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n\r\nexport default class BalloonMessageUIHandler\r\n{\r\n  constructor()\r\n  {\r\n    this.componentMap = {\r\n      [BalloonMessageCommands.DWS]: {\r\n        template: {\r\n          htmlPath: 'html/balloon_message/dws.html',\r\n          cssPath: 'css/dws.css',\r\n        },\r\n        styles: {\r\n          right: '70px',\r\n          top: '8px',\r\n        },\r\n        Component: DWS,\r\n      },\r\n      [BalloonMessageCommands.ADVANCED_PROTECTION_SIGNAL]: {\r\n        template: {\r\n          htmlPath: 'html/balloon_message/advanced_protection_signal.html',\r\n          cssPath: 'css/advanced_protection_signal.css',\r\n        },\r\n        styles: {\r\n          right: '15px',\r\n        },\r\n        Component: AdvancedProtectionSignal,\r\n      },\r\n      [BalloonMessageCommands.ADVANCED_PROTECTION_SIGNAL_TOAST]: {\r\n        template: {\r\n          htmlPath: 'html/balloon_message/advanced_protection_signal_toast.html',\r\n          cssPath: 'css/advanced_protection_signal_toast.css',\r\n        },\r\n        styles: {\r\n          right: '15px',\r\n        },\r\n        Component: AdvancedProtectionSignalToast,\r\n      },\r\n    };\r\n  }\r\n\r\n  async processMessage(payload)\r\n  {\r\n    const { subcommand, componentData } = payload;\r\n    if (!subcommand) return;\r\n\r\n    const componentDetails = this.componentMap[subcommand];\r\n    if (!componentDetails) return;\r\n\r\n    const { template, styles, Component } = componentDetails;\r\n\r\n    // Pass the Background generated Secret to all balloon messages\r\n    const bkGlobals = await BackgroundIPC.getBkGlobals();\r\n    const waImageSecret = bkGlobals.WA_IMAGE_SECRET;\r\n    template.waImageSecret = waImageSecret;\r\n\r\n    this.balloonMessageContainer = new BalloonMessageContainer(styles, waImageSecret);\r\n\r\n    const success = await this.balloonMessageContainer.init(template, componentData);\r\n    if (!success) return;\r\n\r\n    new Component(componentData, this.balloonMessageContainer).init();\r\n  }\r\n}\r\n","import BackgroundIPC from '@extension/common/background_ipc';\r\nimport { ContentCommands, BalloonMessageCommands } from '@extension/common/commands';\r\nimport ScriptBase from '@extension/scripts/content_base';\r\nimport BalloonMessageUIHandler from '@extension/scripts/ui_handler/balloon_message_ui_handler';\r\nimport { CacheStorageVariables, CacheStoreActions } from '@extension/common/cache_store_variables';\r\nimport { Logger } from '@extension/common/logger';\r\n\r\nexport default class ContentIDPS extends ScriptBase\r\n{\r\n  constructor()\r\n  {\r\n    super(ContentCommands.PING_CONTENT_IDPS);\r\n    this.balloonMessageUIHandler = new BalloonMessageUIHandler();\r\n  }\r\n\r\n  async main()\r\n  {\r\n    // Clear form info cache from storage\r\n    const formInfoCache = await BackgroundIPC.getFormInfoCache();\r\n    if (!formInfoCache)\r\n    {\r\n      return;\r\n    }\r\n\r\n    Logger.debug(`Form info: ${JSON.stringify(formInfoCache)}`);\r\n    BackgroundIPC.clearFormInfoCache();\r\n\r\n    const { WSS_EMAIL: email } = await BackgroundIPC.cacheStore(CacheStoreActions.GET, { [CacheStorageVariables.WSS_EMAIL.name]: '' });\r\n    const dwsInfo = await BackgroundIPC.getCachedDWSInfo(email) || {};\r\n\r\n    this.balloonMessageUIHandler.processMessage({\r\n      subcommand: BalloonMessageCommands.DWS,\r\n      componentData: {\r\n        email,\r\n        dwsInfo,\r\n        uniqueEmailCount: 1 // hard-coded to 1 since we only support 1 email from WSS for now\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst contentIDPS = new ContentIDPS();\r\ncontentIDPS.main();\r\n"],"names":["extension","chrome","BackgroundCommands","ContentCommands","BalloonMessageCommands","ExternalCommands","PING","DISCONNECT_NATIVE","SET_PROPERTY_EX","SET_PROPERTY","GET_PROPERTY","CLEAR_GTI_CACHE","RESET_CRYPTO","CLEAN_TYPOSQUATING_WHITELIST","CLEAR_TYPOSQUATING_CACHE","CLEAN_CRYPTO_WHITELIST","CLEAN_RAT_WHITELIST","CLEAN_RAT_CACHE","REPLACE_TRUSTED_DOMAIN","VERIFY_GTI_REQUEST","VERIFY_TYPOSQUAT_SERVER","GET_ALL_WA_SETTINGS","SET_STORAGE_PROPERTY","GET_STORAGE_PROPERTY","REINIT_SCHEDULED_TASKS","OPEN_SETTINGS","OPEN_ACTION_PANEL","GET_MEMORY_FOOTPRINT","ENDURANCE_TEST_RESET","FORM_DETECTION_RESULT","SHOW_UNUSED_SELECTORS","SET_MTI_GLOBALS","HandlePromise","static","message","customCallback","Promise","resolve","reject","runtime","sendMessage","data","lastError","defaultCallback","BackgroundIPC","action","command","handlePromiseMessage","url","requestData","referer","request","commandId","params","type","bIncludeSearchEngines","then","val","JSON","parse","showInNewTab","domain","id","x","y","telemetry","frameUrls","engine","payload","extension_id","showed","searchTerm","setting","username","hostname","completeLogin","email","name","value","personal","activity","ScriptBase","constructor","pingCommand","this","basePingListener","callback","onMessage","addListener","sender","responseCb","content","HttpService","onHttpResponse","response","ok","status","statusText","Error","sendHttpRequest","headers","body","method","fetch","SocialMediaTypes","NONE","LINKEDIN","INSTAGRAM","YOUTUBE","FACEBOOK","TWITTER","REDDIT","AnnotationOptions","Object","values","reduce","sum","ONLY_SECURE_SEARCH","ALL","Symbol","iterator","key","keys","NonZeroSocialMediaTypes","CacheStoreActions","LocalStorageVariables","options","CacheStorageVariables","TabData","blockedIframes","cryptoBlockData","tabDomainTrusted","getResetValues","reset","tabId","update","get","BackgroundGlobals","cacheStore","getDefaultValues","set","newTabData","cache","delete","currentTabData","setTabBlockPageData","blockPageData","addBlockedFrame","push","getBlockedFrames","resetBlockedFrames","BlockState","GREEN","YELLOW","RED","UNKNOWN","HACKERSAFE","TYPOSQUATTING","PHISHING","prop","BrowserType","BuildSettings","Color","Score","KEY_CODES_RANGE","start","end","Array","from","slice","BackgroundConstants","TrustedDomains","Set","NativeSettingsPreprocess","trim","split","CH","FF","EDGE","IE","suffixBrowserMap","SYSTEM","USER","_browser","getBrowserSuffix","NativeSettings","DEV_MODE","scope","AFF_ID","BINARY_VERSION","EXTENSION_VERSION_CH","writeOnly","EXTENSION_VERSION_FF","EXTENSION_VERSION_ED","BROWSER_TYPE","USER_AGENT","SUGGESTION_URL","SCRIPT_GENERATED_DEFAULT_SS_URL","SECURE_SEARCH_REGEXES","preprocess","PreprocessSecureSearchRegEx","SHOW_SEARCH_SETTINGS","SECURE_SEARCH_TOAST_STAMP","SECURE_SEARCH_ANNOTATION_ONLY","SECURE_SEARCH_SHOW_ICONS","SECURE_SEARCH_CHOICE","SS_DEF","ANNOTATIONS_CHOICE_EXPLICIT","CURRENT_SAO_IN_EXTENSION","FF_EXTENSION_LAST_TOAST_TIME","FF_EXTENSION_TOAST_COUNT","CHECKLIST_START_INGORE_DATE_AV","CHECKLIST_START_IGNORE_DATE_FW","CHECKLIST_IGNORE_DURACTION","CHECKLIST_GRACE_PERIOD_AV","CHECKLIST_GRACE_PERIOD_FW","CHECKLIST_GRACE_PERIOD_DURATION","CRYPTOJACKING_DISABLED","SMA_USER_TOGGLE","SMA_ANNOTATION_OPTIONS","PAGES_SCANNED","PAGES_BLOCKED","DOWNLOADS_SCANNED","DOWNLOADS_BLOCKED","CRYPTO_BLOCKED","BLOCKPAGE_WHITELIST","TS_WHITELIST","CSP_ID_SETTING","UNINSTALL_SURVEY_ENABLED","UNINSTALL_SURVEY_URL","RAT_DETECTION_ENABLED","IDPS_FEATURE_ENABLED","APS_COHORT","APS_TOGGLE_SETTING","ALT_TRIGGER","IFRAME_FORM_CHECK_ENABLED","ANNOTATION_JOURNEY_COHORT","ANNOTATION_JOURNEY_TOAST","HTI_THROTTLE","MTI_CLIENT_ID","isTrustCheckRequired","ExtensionTelemetryUrl","scheduleManager","schedules","isNativeConnected","telemetryEngine","postInstallationPage","listenerManager","firefoxInternalUUID","shadowMode","browserType","ffViewports","garbageCollector","typoCache","logger","loglevel","messageDispatcher","port","tabData","tabIdToLastClickTime","Map","useNativeLogger","wasm","userAgentInBase64","typoSquattingServer","tldParser","cryptoBlacklist","trustedDomains","nativeSettings","searchSuggest","ratBlacklist","urls","updatedByNative","wssMessageDispatcher","wssNativeClient","WSS_INSTALLED","isWPSInstalled","searchEngines","enginesVersionUrl","engineCheckInterval","ENGINES_VERSION","AUTO_PLAY_NOTIFICATION_ENABLED","ALLOW_LOCALHOST","IDPS_AUTH_URL","IDPS_BREACH_COUNT_URL","IDPS_CSP_CLIENT_ID","IDPS_IS_ENTITLED","IDPS_PROVISION_ID","IDPS_LOGIN_DOMAIN","UA_CLIENT","TYPOSQUATTING_MAX_CACHE","TYPOSQUATTING_EXPIRY","WA_IMAGE_SECRET","apsUrlList","shopping","paths","selector","apsAnimationTimeout","downloadUrls","wpsRequestedSettings","permittedContentTypes","SUPPORTED_WEBSITE_LIST","isHTI","mtiRequestor","gtiServer","htiServer","cspClientId","ForegroundGlobals","LogLevels","INFO","ERROR","WARN","DEBUG","LogTypes","ProcessTypes","BACKGROUND","CONTENT","TELEMETRY","SMART_NATIVE_CLIENT","ProcessStyleMap","DEFAULT","Logger","logType","process","includes","undefined","storage","local","isBackground","details","processType","extensionType","consoleLog","state","processLog","async","logLevel","getLogLevel","logMessage","Date","toLocaleString","hour","minute","hour12","styleRegular","hightlight","console","error","log","uniqueHighlight","context","level","getStorageLogLevelAsync","Number","isInteger","storageLocalGetAsync","storageLogLevel","UIContentUtils","properties","baseTemplate","childTemplate","hostStyles","hostNode","document","createElement","property","style","mode","getBkGlobals","shadowRoot","attachShadow","populateContainer","appendChild","templateData","htmlPath","cssPath","containerId","waImageSecret","template","getTemplate","querySelector","baseTemplateData","innerHTML","httpService","responseText","getURL","htmlText","text","stylesText","responseStyles","cleanHTML","image","querySelectorAll","source","getAttribute","secretParam","src","cloneNode","poppinsUrl","poppinsPromise","FontFace","load","openSansUrl","openSansPromise","poppins","openSans","all","fonts","add","element","opacity","display","fade","window","requestAnimationFrame","cb","stopTransition","Globals","uid","externalMsgDispatcher","isvalidRequestType","requestType","valid","validateMsg","sendExtnMsg","extnId","request_type","defaultCb","reputationReqCount","imageCounter","isSearchHitSend","resourceRequestor","clientFunctions","activeURI","eventHandler","bkGlobals","searchEngine","searchAnnotationOption","socialMediaOption","socialMediaToggle","hasReportPage","ShadowDomContainer","closing","showing","animateReload","allowReplace","componentData","showContainer","bind","closeContainer","query","clickListener","bgGrayout","bgGrayoutElement","isSameObject","stringify","reloadContainer","HIDE","loadTemplate","object1","object2","reloadTemplate","setBackgroundOverlay","show","styles","cssText","append","overflow","fadeIn","bgOverlay","fadeOut","showBackgroundGrayout","hideBackgroundGrayOut","SHOW","clear","animate","close","remove","styleObj","setTimeout","addEventListener","event","isTrusted","InteractiveBalloon","root","defaultMcAfeeIcon","styleTag","create","defaultIcon","animateIcon","divContainer","classList","imgTag","imageTag","setAttribute","balloonMessageStyles","backgroundColor","border","bottom","margin","padding","position","right","zIndex","BalloonMessageContainer","customStyles","super","interactiveBalloon","success","initContainer","init","FEATURE_TAB_ID","EventNames","BLOCK_PAGE","BROWSER_ACTION_CLICKED","BROWSER_NAVIGATE","CRYPTOJACKING_BLOCK","DARK_WEB_SCAN","DOWNLOAD_BLOCK","GET_SEARCH_EXTENSION","PROFILE_INFO","REMOTE_ACCESS_TROJAN","SEARCH_SUGGEST_BLOCK_PAGE","SEARCH_SUGGEST","SECURE_SEARCH_HIT","SIDEBAR_PANEL","SITE_REPORT","SMA_REPUTATION","TOAST","WSS_ANALYTICS","APS","EVENT_NAME","IMPRESSION_BALLOON","IMPRESSION_HOVER","CLOSE_BALLOON","TOAST_CLOSE","BALLOON","ToastTypes","ImpressionNames","InteractionTypes","LEARN_MORE_CLICKED","WHITELISTED","ACKNOWLEDGED","PageLevel","SETTING_TABS","TelemetryColor","TelemetryBlockState","SearchType","TelemetryTerms","ACTION","CLICK","KEYDOWN","RETURN_KEY_CODE","SEARCH_SUGGEST_KEY_CODES","MISC","LOADED","CHECKED","ACTION_PANEL","ACCEPTED","DECLINED","SETTINGS_TAB_PREFIX","PREFERENCE","SEARCH_ENGINE","GOOGLE","YAHOO","SOCIAL_MEDIA","CommonTelemetry","color","colorStr","blockState","blockStateStr","tabName","tabNameStr","ANNOTATION","BackgroundCommons","ContextTelemetry","TelemetryEventNames","UrlParser","Utils","Commands","CommonConstants","SearchEngineHelper","prevLink","ResourceManager","BackgroundCommon","categories","includeDescription","getRes","l10nId","getResString","res","getCategoryStrings","categoryId","newCategory","description","promises","category","toLowerCase","imageName","imagePath","startsWith","size16","size20","size32","size40","toImagePaths","annotationItem","imageClass","toColor","annItem","colorVal","isPhishingURI","isNaN","trust","escape","i18n","getMessage","urlSplit","length","isSiteAdvisorUrl","isExtensionUrl","isPropertyWebURL","number","decimal","toFixed","substring","initialEpochInSeconds","timePassedinSeconds","getTime","declarativeNetRequest","getDynamicRules","rules","filter","rule","condition","urlFilter","updateDynamicRules","addRules","domains","resourceTypes","TelemetryMessageModifiers","_options","TELEMETRY_HANDLERS","initializeTelemetryHandler","fetchTelemetryHandlers","identifier","handlers","forEach","handler","trigger","sendTelemetry","isFromBackground","messages","analyticsSDK","interaction_type","colour","toTelemetryBlockState","blockPageStyle","_event_name","browser","browserTypeToString","badge_count","count","is_shown","crypto_miner","miner","process_name","file_name","ui_type","tab","toTelemetrySettingTab","search_type","selected","SEARCH_SUGGEST_TYPOSQUATTING","type_tag","typeTag","provider_type","engineName","block_state","site_categories","siteCategories","displayUrl","site","triggerType","action_type","provider","toastData","toastType","metadata","eventAction","flow_id","flowId","sequence","gotItButton","func","wait","immediate","timeout","args","callNow","clearTimeout","getUILanguage","ua","navigator","userAgent","triggerAction","permittedActionList","containerMeta","selectedTag","sendMessages","readyState","documentElement","doScroll","spec","telemetryMessage","shouldSendMessage","worthyAction","whitelistedKeys","eventCode","keyCode","sendTelemetryMessages","CommonUtils","trainingData","result","formName","exceptions","concat","test","ResourceRequestor","http","geti18nRes","attr","placeholders","str","productName","replace","getResStr","resourceId","UIStrings","iframeId","pageDocument","resourcerequestor","iframeContainer","contentDocument","localeData","fillText","getElementById","insertAdjacentText","textContent","fillLocalizedTexts","fillInputPlaceHolders","fillPlaceHolderInternal","getPlaceholderText","catch","fillPlaceHolders","SCREEN_TYPE","DWS","containerHandler","dwsInfo","telemetryInfo","uniqueEmailCount","screen","screenData","getScreenType","createContentContainer","initLocales","initListeners","poppinsFont","openSansFont","shownCount","loadScreen","screenSelector","cbHandlers","onFadeOut","onScreenActive","currActiveScreenEl","scan","emailInput","emailLabel","validateEmail","updateDWSWhitelist","launchIDPSLogin","strConvertor","closeButtonIds","closeButtons","join","button","target","handle","scanEmailButtons","debounce","clearCachedDWSInfo","currentTarget","select","errorPrompt","errorX","validateEmailFormat","mainContainer","updateDWSShown","BALLOON_STATE","AdvancedProtectionSignal","container","rating","shield","shieldImage","signalExpanded","autoExpandedByTimer","autoCollapseTimer","shieldAnimation","onFinishAnimation","telemetryBalloonSent","telemetryHoverSent","balloonText","warn","initFontOnDocument","configureStyles","imageSrc","locale","height","width","animationInfo","timing","fill","duration","easing","Animation","createAnimation","initAnimationListener","startTimeout","fullMessage","expandBubbleSignal","collapseBubbleSignal","isClosing","pause","leave","enter","timer","onAnimationFinish","animation","onfinish","playState","stopTimeout","runForwards","runReverse","playbackRate","play","AdvancedProtectionSignalToast","initListener","focus","BalloonMessageUIHandler","componentMap","top","Component","subcommand","componentDetails","balloonMessageContainer","balloonMessageUIHandler","formInfoCache","getFormInfoCache","debug","clearFormInfoCache","WSS_EMAIL","getCachedDWSInfo","processMessage","main"],"sourceRoot":""}
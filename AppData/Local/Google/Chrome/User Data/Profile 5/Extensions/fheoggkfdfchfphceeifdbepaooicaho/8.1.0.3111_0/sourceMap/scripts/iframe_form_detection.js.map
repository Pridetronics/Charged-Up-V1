{"version":3,"file":"scripts/iframe_form_detection.js","mappings":"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","sources":["webpack:///./extension/common/commands.js","webpack:///./extension/common/webextension.js","webpack:///./extension/common/handle_promise.js","webpack:///./extension/common/background_ipc.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/trainerModels.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/xpath.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/models.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/matcher.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/utils.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/scraper.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/globals.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/scoring.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/autofill.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/logger.js","webpack:///./WABrowserExtension-Common/Form-Detection-Package/index.js","webpack:///./extension/scripts/content_base.js","webpack:///./extension/utilities/utils.js","webpack:///./extension/scripts/iframe_form_detection.js"],"sourcesContent":["/**\r\n * The command ids supported for IPC between content process and chrome/background process.\r\n */\r\n\r\nexport const BackgroundCommands = {\r\n  // Generic Commands\r\n  CACHE_STORE: 'CACHE_STORE',\r\n  CONTENT_HANDLER: 'CONTENT_HANDLER',\r\n  EXECUTE_COMMAND: 'EXECUTE_COMMAND',\r\n  FOCUS_OR_CREATE_TAB: 'FOCUS_OR_CREATE_TAB',\r\n  GET_BK_GLOBALS: 'GET_BK_GLOBALS',\r\n  GET_EXTENSION_STATUS: 'GET_EXTENSION_STATUS',\r\n  GET_TAB_DATA: 'GET_TAB_DATA',\r\n  TI_REQUEST: 'TI_REQUEST',\r\n  INSTALL_EXTENSION: 'INSTALL_EXTENSION',\r\n  PLACEHOLDER_TEXT: 'PLACEHOLDER_TEXT',\r\n  REMOVE_TAB: 'REMOVE_TAB',\r\n  SEND_TELEMETRY: 'SEND_TELEMETRY',\r\n  SET_VIEWPORT: 'SET_VIEWPORT',\r\n  WHITELIST: 'WHITELIST',\r\n  RESET_NATIVE_SETTING: 'RESET_NATIVE_SETTING',\r\n  UPDATE_BK_NATIVE_SETTINGS: 'UPDATE_BK_NATIVE_SETTINGS',\r\n\r\n  // Options Menu / Settings Page\r\n  SHOW_SIDEBAR_MAIN: 'SHOW_SIDEBAR_MAIN',\r\n  GET_POPUP_DATA: 'GET_POPUP_DATA',\r\n  GET_SETTINGS_DATA: 'GET_SETTINGS_DATA',\r\n  RESET_SETTINGS: 'RESET_SETTINGS',\r\n\r\n  // Autoplay video\r\n  AUTO_RUN_VIDEO_SITE: 'AUTO_RUN_VIDEO_SITE',\r\n  GET_CLICK_EVENT_TIME: 'GET_CLICK_EVENT_TIME',\r\n  SAVE_CLICK_EVENT_TIME: 'SAVE_CLICK_EVENT_TIME',\r\n\r\n  // Typosquatting\r\n  GET_TYPOSQUATTING_DATA: 'GET_TYPOSQUATTING_DATA',\r\n\r\n  // Block Page / Iframe / Site Report\r\n  IS_FRAME_BLOCKED: 'IS_FRAME_BLOCKED',\r\n  IS_WHITELISTED: 'IS_WHITELISTED',\r\n  ANY_BLOCKED_IFRAMES: 'ANY_BLOCKED_IFRAMES',\r\n  ANY_BLOCKED_CRYPTOSCRIPTS: 'ANY_BLOCKED_CRYPTOSCRIPTS',\r\n  UNBLOCK_ALL_IFRAMES: 'UNBLOCK_ALL_IFRAMES',\r\n  VIEW_SITE_REPORT: 'VIEW_SITE_REPORT',\r\n\r\n  // Annotations\r\n  SEARCH_ANNOTATION: 'SEARCH_ANNOTATION',\r\n  UPDATE_ENGINE_STATS: 'UPDATE_ENGINE_STATS',\r\n\r\n  // SMA\r\n  SOCIAL_MEDIA_ANNOTATION: 'SOCIAL_MEDIA_ANNOTATION',\r\n\r\n  // RAT Detection\r\n  UPDATE_RAT_DETECTION_SHOWING_FLAG: 'UPDATE_RAT_DETECTION_SHOWING_FLAG',\r\n\r\n  // Search Suggestion\r\n  SEARCH_SUGGEST: 'SEARCH_SUGGEST',\r\n\r\n  // Form detection\r\n  SAVE_FORM_INFO: 'SAVE_FORM_INFO',\r\n  GET_FORM_INFO_CACHE: 'GET_FORM_INFO_CACHE',\r\n  CLEAR_FORM_INFO_CACHE: 'CLEAR_FORM_INFO_CACHE',\r\n  SAVE_MULTISTEP_LOGIN: 'SAVE_MULTISTEP_LOGIN',\r\n  GET_FD_WEIGHTS: 'GET_FD_WEIGHTS',\r\n  GET_FD_EXCEPTIONS: 'GET_FD_EXCEPTIONS',\r\n  GET_FD_CRF_PARAMS: 'GET_FD_CRF_PARAMS',\r\n\r\n  // DWS\r\n  CLEAR_CACHED_DWS_INFO: 'CLEAR_DWS_INFO',\r\n  GET_CACHED_DWS_INFO: 'GET_CACHED_DWS_INFO',\r\n  UPDATE_DWS_WHITELIST: 'UPDATE_DWS_WHITELIST',\r\n  LAUNCH_IDPS_LOGIN: 'LAUNCH_IDPS_LOGIN',\r\n  UPDATE_DWS_SHOWN: 'UPDATE_DWS_SHOWN',\r\n\r\n  // APS\r\n  GET_APS_DETAILS: 'GET_APS_DETAILS',\r\n  FORM_PRE_CHECK_PASSED: 'FORM_PRE_CHECK_PASSED',\r\n  SIGN_UP_FORM_DETECTED: 'SIGN_UP_FORM_DETECTED',\r\n\r\n  // Firefox Policy Consent\r\n  SET_FF_POLICY_COLLECTION: 'SET_FF_POLICY_COLLECTION',\r\n  SET_FF_POLICY_LAST_SHOWN: 'SET_FF_POLICY_LAST_SHOWN',\r\n};\r\n\r\nexport const ContentCommands = {\r\n  // Commands handled by iframes\r\n  UNBLOCK_IFRAME: 'UNBLOCK_IFRAME',\r\n\r\n  // Content UI Handler Commands\r\n  BALLOON_MESSAGE: 'BALLOON_MESSAGE',\r\n  PAGE_OVERLAY: 'PAGE_OVERLAY',\r\n  SIDEBAR: 'SIDEBAR',\r\n  TOPBAR: 'TOPBAR',\r\n\r\n  // Ping\r\n  PING_CONTENT_ANNOTATION: 'PING_CONTENT_ANNOTATION',\r\n  PING_CONTENT_RAT_DETECTION: 'PING_CONTENT_RAT_DETECTION',\r\n  PING_CONTENT_IFRAME_BANNER: 'PING_CONTENT_IFRAME_BANNER',\r\n  PING_CONTENT_AUTOPLAY_DETECTION: 'PING_CONTENT_AUTOPLAY_DETECTION',\r\n  PING_CONTENT_SIDEBAR_MAIN: 'PING_CONTENT_SIDEBAR_MAIN',\r\n  PING_CONTENT_FF_DL_OVERLAY: 'PING_CONTENT_FF_DL_OVERLAY',\r\n  PING_CONTENT_CRYPTO_BLOCK: 'PING_CONTENT_CRYPTO_BLOCK',\r\n  PING_CONTENT_FF_VIEWPORTS: 'PING_CONTENT_FF_VIEWPORTS',\r\n  PING_CONTENT_IDPS: 'PING_CONTENT_IDPS',\r\n  PING_CONTENT_APS_TOAST: 'PING_CONTENT_APS_TOAST',\r\n  PING_CONTENT_APS_BALLOON: 'PING_CONTENT_APS_BALLOON',\r\n  PING_CONTENT_APS_OBSERVER: 'PING_CONTENT_APS_OBSERVER',\r\n  PING_CONTENT_SITE_LISTENER: 'PING_CONTENT_SITE_LISTENER',\r\n  PING_IFRAME_FORM_CHECK: 'PING_IFRAME_FORM_CHECK',\r\n  PING_IFRAME_FORM_DETECTION: 'PING_IFRAME_FORM_DETECTION',\r\n  PING_IFRAME_BLOCK: 'PING_IFRAME_BLOCK',\r\n\r\n  // APS\r\n  APS_REGISTRATION_PAGE: 'APS_REGISTRATION_PAGE',\r\n\r\n  // Broadcast to foreground\r\n  BROADCAST_TO_FOREGROUND: 'BROADCAST_TO_FOREGROUND',\r\n\r\n  // Annotation Journey Toast\r\n  TRIGGER_AJ_TOAST: 'TRIGGER_AJ_TOAST'\r\n};\r\n\r\n// **********************************************\r\n// SUB-COMMANDS USED BY CONTENT HANDLER COMMANDS:\r\n// **********************************************\r\n\r\nexport const SideBarCommands = {\r\n  MAIN: 'MAIN',\r\n  RELOAD: 'RELOAD',\r\n  SMA: 'SMA',\r\n  RAT_DETECTION: 'RAT_DETECTION',\r\n};\r\n\r\nexport const BalloonMessageCommands = {\r\n  ADVANCED_PROTECTION_SIGNAL: 'ADVANCED_PROTECTION_SIGNAL',\r\n  ADVANCED_PROTECTION_SIGNAL_TOAST: 'ADVANCED_PROTECTION_SIGNAL_TOAST',\r\n  DWS: 'DWS',\r\n};\r\n\r\nexport const TopBarCommands = {\r\n  CRYPTO_BLOCK: 'CRYPTO_BLOCK',\r\n  IFRAME_BLOCK: 'IFRAME_BLOCK',\r\n  TRIGGER_ALLOW: 'TRIGGER_ALLOW',\r\n};\r\n\r\nexport const PageOverlayCommands = {\r\n  SEARCH_EXTENSION_OVERLAY: 'SEARCH_EXTENSION_OVERLAY',\r\n  FINISH_DOWNLOAD: 'FINISH_DOWNLOAD',\r\n};\r\n\r\nexport const ExternalCommands = {\r\n  // Legacy\r\n  PING: 0,\r\n  DISCONNECT_NATIVE: 1,\r\n  SET_PROPERTY_EX: 2, //  For automation\r\n  SET_PROPERTY: 3, // For automation\r\n  GET_PROPERTY: 4, // For automation\r\n  CLEAR_GTI_CACHE: 5, // For automation\r\n  RESET_CRYPTO: 6, // For automation\r\n  CLEAN_TYPOSQUATING_WHITELIST: 7, // For automation\r\n  CLEAR_TYPOSQUATING_CACHE: 8, // For automation\r\n  CLEAN_CRYPTO_WHITELIST: 10, // For automation\r\n  CLEAN_RAT_WHITELIST: 12, // For automation\r\n  CLEAN_RAT_CACHE: 13, // For automation\r\n  REPLACE_TRUSTED_DOMAIN: 15, // For automation\r\n  VERIFY_GTI_REQUEST: 17, // For automation\r\n  VERIFY_TYPOSQUAT_SERVER: 18, // For watchdog automation\r\n  GET_ALL_WA_SETTINGS: 19, // For automation extension\r\n  SET_STORAGE_PROPERTY: 20, // Set a local storage property within WA\r\n  GET_STORAGE_PROPERTY: 21, // Get a local storage property within WA (for automation)\r\n  REINIT_SCHEDULED_TASKS: 22,\r\n  OPEN_SETTINGS: 23, // For personal protection hub\r\n  OPEN_ACTION_PANEL: 24, // For personal protection hub\r\n  GET_MEMORY_FOOTPRINT: 26, // For automation, endurance run\r\n  ENDURANCE_TEST_RESET: 27, // For automation, endurance run\r\n  FORM_DETECTION_RESULT: 28,\r\n  SHOW_UNUSED_SELECTORS: 29, // For automation\r\n  SET_MTI_GLOBALS: 30\r\n};\r\n\r\nexport const ExternalResponse = {\r\n  PONG: 0,\r\n};\r\n","export const extension = WEBPACK_BROWSER_NAME === 'chrome' || WEBPACK_BROWSER_NAME === 'edge' ? chrome : browser; // eslint-disable-line no-undef\r\n","export default class HandlePromise\r\n{\r\n  static handlePromiseMessage(message, customCallback = null)\r\n  {\r\n    const defaultCallback = (resolve, reject, data) =>\r\n    {\r\n      if (chrome.runtime.lastError) reject(chrome.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      chrome.runtime.sendMessage(message, (data) =>\r\n      {\r\n        if (typeof customCallback === 'function') customCallback(resolve, reject, data);\r\n        else defaultCallback(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\r\nimport { BackgroundCommands, ContentCommands } from '@extension/common/commands';\r\nimport HandlePromise from '@extension/common/handle_promise';\r\n\r\n/**\r\n * Handles communication from content process to the background process.\r\n */\r\nexport default class BackgroundIPC\r\n{\r\n  static cacheStore(action, data)\r\n  {\r\n    const command = BackgroundCommands.CACHE_STORE;\r\n    return HandlePromise.handlePromiseMessage({ command, action, data });\r\n  }\r\n\r\n  static isFrameBlocked(url)\r\n  {\r\n    const command = BackgroundCommands.IS_FRAME_BLOCKED;\r\n    return HandlePromise.handlePromiseMessage({ command, url });\r\n  }\r\n\r\n  static makeMTIRequest(requestData, referer)\r\n  {\r\n    const command = BackgroundCommands.TI_REQUEST;\r\n    const request = { command, requestData, referer };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static executeCommand(commandId, params)\r\n  {\r\n    const command = BackgroundCommands.EXECUTE_COMMAND;\r\n    extension.runtime.sendMessage({ command, commandId, params });\r\n  }\r\n\r\n  static focusOrCreateTab(url)\r\n  {\r\n    const command = BackgroundCommands.FOCUS_OR_CREATE_TAB;\r\n    extension.runtime.sendMessage({ command, url });\r\n  }\r\n\r\n  static closeTab()\r\n  {\r\n    const command = BackgroundCommands.REMOVE_TAB;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static whitelist(action, type, data)\r\n  {\r\n    const command = BackgroundCommands.WHITELIST;\r\n    return HandlePromise.handlePromiseMessage({ action, command, type, data });\r\n  }\r\n\r\n  static getPopupData()\r\n  {\r\n    const command = BackgroundCommands.GET_POPUP_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getSettingsData()\r\n  {\r\n    const command = BackgroundCommands.GET_SETTINGS_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static searchAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static socialMediaAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SOCIAL_MEDIA_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static async getBkGlobals(bIncludeSearchEngines = false)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const command = BackgroundCommands.GET_BK_GLOBALS;\r\n      const promise = HandlePromise.handlePromiseMessage({ command, bIncludeSearchEngines });\r\n      promise.then((val) => { resolve(JSON.parse(val)); });\r\n    });\r\n  }\r\n\r\n  static viewSiteReport(url = null, showInNewTab = false)\r\n  {\r\n    const command = BackgroundCommands.VIEW_SITE_REPORT;\r\n    extension.runtime.sendMessage({ command, url, showInNewTab });\r\n  }\r\n\r\n  static getTypoSquattingData(domain)\r\n  {\r\n    const command = BackgroundCommands.GET_TYPOSQUATTING_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command, domain });\r\n  }\r\n\r\n  static getPlaceholderText(id)\r\n  {\r\n    const command = BackgroundCommands.PLACEHOLDER_TEXT;\r\n    return HandlePromise.handlePromiseMessage({ command, id });\r\n  }\r\n\r\n  static setViewPort(x, y)\r\n  {\r\n    const command = BackgroundCommands.SET_VIEWPORT;\r\n    extension.runtime.sendMessage({ command, x, y });\r\n  }\r\n\r\n  static sendTelemetry(telemetry)\r\n  {\r\n    const command = BackgroundCommands.SEND_TELEMETRY;\r\n    extension.runtime.sendMessage({ command, telemetry });\r\n  }\r\n\r\n  static anyBlockedIframes(frameUrls)\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_IFRAMES;\r\n    return HandlePromise.handlePromiseMessage({ command, frameUrls });\r\n  }\r\n\r\n  static anyBlockedCryptoScripts()\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_CRYPTOSCRIPTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static resetSettings()\r\n  {\r\n    const command = BackgroundCommands.RESET_SETTINGS;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static sendEngineStat(engine)\r\n  {\r\n    extension.runtime.sendMessage({ command: BackgroundCommands.UPDATE_ENGINE_STATS, engine });\r\n  }\r\n\r\n  static contentHandler(message)\r\n  {\r\n    const command = BackgroundCommands.CONTENT_HANDLER;\r\n    extension.runtime.sendMessage({ command, message });\r\n  }\r\n\r\n  static getTabData(payload = {})\r\n  {\r\n    const command = BackgroundCommands.GET_TAB_DATA;\r\n    const request = { command, ...payload };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static isWhitelisted(url)\r\n  {\r\n    const command = BackgroundCommands.IS_WHITELISTED;\r\n    const request = { command, url };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static getExtensionStatus(id)\r\n  {\r\n    return HandlePromise.handlePromiseMessage({ command: BackgroundCommands.GET_EXTENSION_STATUS, extension_id: id });\r\n  }\r\n\r\n  static unblockAllIframes()\r\n  {\r\n    const command = BackgroundCommands.UNBLOCK_ALL_IFRAMES;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateRatDetectionShowingFlag(showed)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_RAT_DETECTION_SHOWING_FLAG;\r\n    extension.runtime.sendMessage({ command, showed });\r\n  }\r\n\r\n  /**\r\n   * Send a message to the background to retrieve the results from Search Suggestion for the search term\r\n   *\r\n   * @param {String} searchTerm\r\n   */\r\n  static getSearchSuggest(searchTerm)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_SUGGEST;\r\n    const request = { command, searchTerm };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static resetNativeSetting(setting)\r\n  {\r\n    const command = BackgroundCommands.RESET_NATIVE_SETTING;\r\n    extension.runtime.sendMessage({ command, setting });\r\n  }\r\n\r\n  /**\r\n   * Save form info (logging info)\r\n   * @param {string} username - username entered in the form.\r\n   * @param {string} hostname - hostname of the page the form was submitted on.\r\n   */\r\n  static saveFormInfo(username, hostname)\r\n  {\r\n    const command = BackgroundCommands.SAVE_FORM_INFO;\r\n    extension.runtime.sendMessage({ command, username, hostname });\r\n  }\r\n\r\n  /**\r\n   * Send message to the backend to save login from multi-step detection\r\n   * @param {Object} data - Object containing the neccesary info from the form.\r\n   * @param {string} data.username - (optional) username entered into the form. Only supplied if login not complete, ie first step of multistep form.\r\n   * @param {string} data.hostanme - hostname of the page the form was submitted on.\r\n   * @param {Boolean} completeLogin - Whether or not the multistep login process is completed or not.\r\n   */\r\n  static saveMultiStepLogin(data, completeLogin)\r\n  {\r\n    const command = BackgroundCommands.SAVE_MULTISTEP_LOGIN;\r\n    extension.runtime.sendMessage({ command, data, completeLogin });\r\n  }\r\n\r\n  static getFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.GET_FORM_INFO_CACHE;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static clearFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.CLEAR_FORM_INFO_CACHE;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  /**\r\n   * Update list of emails to be excluded from DWS offering.\r\n   * The email is whitelisted either because the user said not to offer it again, or because the user\r\n   * added it to be monitored in the web portal.\r\n   * @param {*} email\r\n   */\r\n  static updateDWSWhitelist(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_WHITELIST;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.GET_CACHED_DWS_INFO;\r\n    const request = { command, email };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static clearCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.CLEAR_CACHED_DWS_INFO;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static updateDWSShown(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_SHOWN;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getAPSDetails()\r\n  {\r\n    const command = BackgroundCommands.GET_APS_DETAILS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static signUpFormDetected()\r\n  {\r\n    const command = BackgroundCommands.SIGN_UP_FORM_DETECTED;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateBkNativeSettings(name, value)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_BK_NATIVE_SETTINGS;\r\n    extension.runtime.sendMessage({ command, name, value });\r\n  }\r\n\r\n  static launchIDPSLogin()\r\n  {\r\n    const command = BackgroundCommands.LAUNCH_IDPS_LOGIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static showSidebarMain()\r\n  {\r\n    const command = BackgroundCommands.SHOW_SIDEBAR_MAIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static setFFPolicyCollection({ personal, activity })\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_COLLECTION;\r\n    extension.runtime.sendMessage({ command, personal, activity });\r\n  }\r\n\r\n  static setFFPolicyLastShown()\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_LAST_SHOWN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  // This will broadcast a sendMessage to all page owned by us\r\n  // For example, to all foreground pages. A message will be sent to\r\n  // background as well but it will not be processed\r\n  static broadcastToForeground(payload)\r\n  {\r\n    const command = ContentCommands.BROADCAST_TO_FOREGROUND;\r\n    extension.runtime.sendMessage({ command, payload });\r\n  }\r\n\r\n  static getFDWeights()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_WEIGHTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDExceptions()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_EXCEPTIONS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDCrfParams()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_CRF_PARAMS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n}\r\n","export const FieldType = {\r\n  0: 'Text',\r\n  1: 'Password',\r\n  2: 'Button',\r\n  3: 'Select',\r\n  4: 'TextOrSelect',\r\n  5: 'TextOrPassword',\r\n  6: 'Anything',\r\n  Anything: 6,\r\n  Button: 2,\r\n  Password: 1,\r\n  Select: 3,\r\n  Text: 0,\r\n  TextOrPassword: 5,\r\n  TextOrSelect: 4,\r\n};\r\n\r\nexport const VaultItemType = {\r\n  LoginItem: 'LoginItem',\r\n  CreditCardItem: 'CreditCardItem',\r\n  Other: 'Other'\r\n};\r\n\r\nexport class FieldDescription\r\n{\r\n  constructor(name, type, trainerTextValue = 'other')\r\n  {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.trainerTextValue = trainerTextValue;\r\n  }\r\n}\r\n","export default class Xpath\r\n{\r\n  static getElementXPath(element)\r\n  {\r\n    if (element && element.id) return `//*[@id=\"${element.id}\"]`;\r\n    return Xpath.getElementTreeXPath(element);\r\n  }\r\n\r\n  static getElementTreeXPath(element)\r\n  {\r\n    const paths = [];\r\n    for (; element && element.nodeType === Node.ELEMENT_NODE; element = element.parentNode)\r\n    {\r\n      let index = 0;\r\n      let hasFollowingSiblings = false;\r\n      for (let sibling = element.previousSibling; sibling; sibling = sibling.previousSibling)\r\n      {\r\n        if (sibling.nodeType === Node.DOCUMENT_TYPE_NODE) continue;\r\n        if (sibling.nodeName === element.nodeName) ++index;\r\n      }\r\n      for (let sibling = element.nextSibling; sibling && !hasFollowingSiblings; sibling = sibling.nextSibling)\r\n      {\r\n        if (sibling.nodeName === element.nodeName) hasFollowingSiblings = true;\r\n      }\r\n      const tagName = (element.prefix ? `${element.prefix}:` : '') + element.localName;\r\n      const pathIndex = (index || hasFollowingSiblings ? `[${index + 1}]` : '');\r\n      paths.splice(0, 0, tagName + pathIndex);\r\n    }\r\n    return paths.length ? `/${paths.join('/')}` : null;\r\n  }\r\n\r\n  static cssToXPath(rule)\r\n  {\r\n    const regElement = /^([#.]?)([a-z0-9\\\\*_-]*)((\\|)([a-z0-9\\\\*_-]*))?/i;\r\n    const regAttr1 = /^\\[([^\\]]*)\\]/i;\r\n    const regAttr2 = /^\\[\\s*([^~=\\s]+)\\s*(~?=)\\s*\"([^\"]+)\"\\s*\\]/i;\r\n    const regPseudo = /^:([a-z_-])+/i;\r\n    const regCombinator = /^(\\s*[>+\\s])?/i;\r\n    const regComma = /^\\s*,/i;\r\n    let index = 1;\r\n    const parts = ['//', '*'];\r\n    let lastRule = null;\r\n    while (rule.length && rule !== lastRule)\r\n    {\r\n      lastRule = rule;\r\n      rule = String.trim(rule);\r\n      if (!rule.length) break;\r\n      let m = regElement.exec(rule);\r\n      if (m)\r\n      {\r\n        if (!m[1])\r\n        {\r\n          if (m[5]) parts[index] = m[5]; // Eslint was giving an error for array deconstructing, since I didn't want to unpack all 5 potential values, I added to eslint rules \"prefer-destructuring\"\r\n          else parts[index] = m[2];\r\n        }\r\n        else if (m[1] === '#') parts.push(`[@id='${m[2]}']`);\r\n        else if (m[1] === '.') parts.push(`[contains(concat(' ',normalize-space(@class),' '), ' ${m[2]} ')]`);\r\n        rule = rule.substr(m[0].length);\r\n      }\r\n      m = regAttr2.exec(rule);\r\n      if (m)\r\n      {\r\n        if (m[2] === '~=') parts.push(`[contains(@${m[1]}, '${m[3]}')]`);\r\n        else parts.push(`[@${m[1]}='${m[3]}']`);\r\n        rule = rule.substr(m[0].length);\r\n      }\r\n      else\r\n      {\r\n        m = regAttr1.exec(rule);\r\n        if (m)\r\n        {\r\n          parts.push(`[@${m[1]}]`);\r\n          rule = rule.substr(m[0].length);\r\n        }\r\n      }\r\n      m = regPseudo.exec(rule);\r\n      while (m)\r\n      {\r\n        rule = rule.substr(m[0].length);\r\n        m = regPseudo.exec(rule);\r\n      }\r\n      m = regCombinator.exec(rule);\r\n      if (m && m[0].length)\r\n      {\r\n        if (m[0].indexOf('>') !== -1) parts.push('/');\r\n        else if (m[0].indexOf('+') !== -1) parts.push('/following-sibling::');\r\n        else parts.push('//');\r\n        index = parts.length;\r\n        parts.push('*');\r\n        rule = rule.substr(m[0].length);\r\n      }\r\n      m = regComma.exec(rule);\r\n      if (m)\r\n      {\r\n        parts.push(' | ', '//', '*');\r\n        index = parts.length - 1;\r\n        rule = rule.substr(m[0].length);\r\n      }\r\n    }\r\n    const xpath = parts.join('');\r\n    return xpath;\r\n  }\r\n\r\n  static getElementsBySelector(doc, css)\r\n  {\r\n    const xpath = Xpath.cssToXPath(css);\r\n    return Xpath.getElementsByXPath(doc, xpath);\r\n  }\r\n\r\n  static getElementsByXPath(doc, xpath)\r\n  {\r\n    try\r\n    {\r\n      return Xpath.evaluateXPath(doc, xpath, undefined, undefined);\r\n    }\r\n    catch (ex)\r\n    {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  static evaluateXPath(doc, xpath, contextNode, resultType)\r\n  {\r\n    if (contextNode === undefined)\r\n    {\r\n      contextNode = doc;\r\n    }\r\n\r\n    if (resultType === undefined)\r\n    {\r\n      resultType = XPathResult.ANY_TYPE;\r\n    }\r\n\r\n    const result = doc.evaluate(xpath, contextNode, null, resultType, null);\r\n    const nodes = [];\r\n    switch (result.resultType)\r\n    {\r\n      case XPathResult.NUMBER_TYPE:\r\n        return result.numberValue;\r\n      case XPathResult.STRING_TYPE:\r\n        return result.stringValue;\r\n      case XPathResult.BOOLEAN_TYPE:\r\n        return result.booleanValue;\r\n      case XPathResult.UNORDERED_NODE_ITERATOR_TYPE:\r\n      case XPathResult.ORDERED_NODE_ITERATOR_TYPE:\r\n        for (let item = result.iterateNext(); item; item = result.iterateNext()) nodes.push(item);\r\n        return nodes;\r\n      case XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE:\r\n      case XPathResult.ORDERED_NODE_SNAPSHOT_TYPE:\r\n        for (let i = 0; i < result.snapshotLength; ++i) nodes.push(result.snapshotItem(i));\r\n        return nodes;\r\n      case XPathResult.ANY_UNORDERED_NODE_TYPE:\r\n      case XPathResult.FIRST_ORDERED_NODE_TYPE:\r\n        return result.singleNodeValue;\r\n    }\r\n\r\n    return nodes;\r\n  }\r\n\r\n  static getRuleMatchingElements(rule, doc)\r\n  {\r\n    const css = rule.selectorText;\r\n    const xpath = Xpath.cssToXPath(css);\r\n    return Xpath.getElementsByXPath(doc, xpath);\r\n  }\r\n}\r\n","import Xpath from './xpath';\r\nimport { FieldType } from './trainerModels';\r\n\r\nexport class Field\r\n{\r\n  constructor(parent, htmlElement, type)\r\n  {\r\n    this.parent = parent;\r\n    this.htmlElement = htmlElement;\r\n    this.type = type;\r\n    this.manualLoginScore = 0;\r\n    this.trainingHtmlElement = undefined;\r\n    if (htmlElement !== undefined)\r\n    {\r\n      this.id = htmlElement.id;\r\n      this.name = htmlElement.name;\r\n      this.scores = [];\r\n      this.xpath = Xpath.getElementXPath(htmlElement);\r\n\r\n      // Create a FDProcessedID field, to let us know which elements have been processed by the library.\r\n      if (htmlElement.hasAttribute('FDProcessedID'))\r\n      {\r\n        this.FDProcessedID = htmlElement.getAttribute('FDProcessedID');\r\n      }\r\n      else\r\n      {\r\n        const fdpid = Math.random().toString(36).substring(7);\r\n        htmlElement.setAttribute('FDProcessedID', fdpid);\r\n        this.FDProcessedID = fdpid;\r\n      }\r\n    }\r\n  }\r\n\r\n  getId()\r\n  {\r\n    return this.id;\r\n  }\r\n\r\n  getFDProcessedID()\r\n  {\r\n    return this.FDProcessedID;\r\n  }\r\n\r\n  getName()\r\n  {\r\n    return this.name;\r\n  }\r\n\r\n  getHtmlElement()\r\n  {\r\n    return this.htmlElement;\r\n  }\r\n\r\n  getEditableHtmlElement()\r\n  {\r\n    if (this.htmlElement instanceof HTMLInputElement || this.htmlElement instanceof HTMLSelectElement)\r\n    {\r\n      return this.htmlElement;\r\n    }\r\n\r\n    return {};\r\n  }\r\n\r\n  getParent()\r\n  {\r\n    return this.parent;\r\n  }\r\n\r\n  getType()\r\n  {\r\n    return this.type;\r\n  }\r\n\r\n  matchesType(fieldType)\r\n  {\r\n    if (fieldType === this.type)\r\n    {\r\n      return true;\r\n    }\r\n    if (fieldType === FieldType.Select || fieldType === FieldType.Text || fieldType === FieldType.TextOrSelect)\r\n    {\r\n      return this.type === FieldType.Select || this.type === FieldType.Text || this.type === FieldType.TextOrSelect;\r\n    }\r\n    if (fieldType === FieldType.TextOrPassword)\r\n    {\r\n      return this.type === FieldType.Text || this.type === FieldType.Password || this.type === FieldType.TextOrPassword;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nexport class ClickableField extends Field\r\n{\r\n  constructor(parent, htmlElement)\r\n  {\r\n    super(parent, htmlElement, FieldType.Button);\r\n    this.parent = parent;\r\n    this.htmlElement = htmlElement;\r\n    this.clickedTime = undefined;\r\n  }\r\n}\r\n\r\nexport class PageInfo\r\n{\r\n  constructor()\r\n  {\r\n    this.fields = [];\r\n    this.clickableFields = [];\r\n    this.forms = [];\r\n    this.forced = false;\r\n    this.url = window.location.href;\r\n  }\r\n}\r\n\r\nexport class FieldInfo\r\n{\r\n  constructor(fieldDescription, field)\r\n  {\r\n    this.fieldDescription = fieldDescription;\r\n    this.field = field;\r\n  }\r\n}\r\n\r\nexport class ExportableField\r\n{\r\n  constructor(field)\r\n  {\r\n    this.id = field.getId();\r\n    this.name = field.getName();\r\n    this.type = field.getType();\r\n    this.scores = field.scores;\r\n  }\r\n}\r\n\r\nexport class ExportableFieldInfo\r\n{\r\n  constructor(fieldDescription, field)\r\n  {\r\n    this.fieldDescription = fieldDescription;\r\n    this.field = field;\r\n  }\r\n}\r\n\r\nexport class FormInfo\r\n{\r\n  constructor()\r\n  {\r\n    this.fieldInfos = [];\r\n    this.exception = false;\r\n    this.averageScore = 0;\r\n  }\r\n\r\n  grabParentForms()\r\n  {\r\n    const forms = this.fieldInfos.filter((_) => _.field.getParent() !== undefined).map((_) => _.field.getParent());\r\n    const uniqueForms = [];\r\n    forms.forEach((f) =>\r\n    {\r\n      if (f instanceof HTMLFormElement)\r\n      {\r\n        if (!uniqueForms.some((_) => _ === f))\r\n        {\r\n          uniqueForms.push(f);\r\n        }\r\n      }\r\n    });\r\n    return uniqueForms;\r\n  }\r\n\r\n  getExportableObj()\r\n  {\r\n    return new ExportableFormInfo(this);\r\n  }\r\n}\r\n\r\nexport class ExportableFormInfo\r\n{\r\n  constructor(formInfo)\r\n  {\r\n    this.formDescription = formInfo.formDescription;\r\n    this.fieldInfos = formInfo.fieldInfos.map((f) => new ExportableFieldInfo(f.fieldDescription, new ExportableField(f.field)));\r\n  }\r\n}\r\n\r\nexport class VaultItem\r\n{\r\n}\r\n\r\nexport class VaultItemMetadata\r\n{\r\n}\r\n\r\nexport class LoginItemMetadata extends VaultItemMetadata\r\n{\r\n  constructor(website, name, loginUrl = '', favicon = '', frameUrl = '')\r\n  {\r\n    super();\r\n    this.website = website;\r\n    this.loginUrl = loginUrl;\r\n    this.favicon = favicon;\r\n    this.frameUrl = frameUrl;\r\n    this.username = '';\r\n    this.originatingTabUrl = '';\r\n    this.type = 'LoginItem';\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport class CreditCardContent\r\n{\r\n}\r\n\r\nexport class CreditCardItem extends VaultItem\r\n{\r\n  static isSame(item1, item2)\r\n  {\r\n    const valuesToCompare = [\r\n      [item1.content.cardholder, item2.content.cardholder],\r\n      [item1.content.number, item2.content.number],\r\n      [item1.content.verification, item2.content.verification],\r\n      [item1.content.pin, item2.content.pin],\r\n      [item1.content.expiryMonth, item2.content.expiryMonth],\r\n      [item1.content.expiryYear, item2.content.expiryYear]\r\n    ];\r\n    for (let index = 0; index < valuesToCompare.length; index++)\r\n    {\r\n      const item = valuesToCompare[index];\r\n      if (item[0] !== item[1])\r\n      {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class LoginItem extends VaultItem\r\n{\r\n  constructor()\r\n  {\r\n    super();\r\n    this.content = {};\r\n  }\r\n\r\n  static isSame(item1, item2)\r\n  {\r\n    const valuesToCompare = [\r\n      [item1.metadata.username, item2.metadata.username],\r\n      [item1.metadata.favicon, item2.metadata.favicon],\r\n      [item1.metadata.loginUrl, item2.metadata.loginUrl],\r\n      [item1.content.password, item2.content.password]\r\n    ];\r\n    for (let index = 0; index < valuesToCompare.length; index++)\r\n    {\r\n      const item = valuesToCompare[index];\r\n      if (item[0] !== item[1])\r\n      {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\nexport class PendingVaultItem\r\n{\r\n  constructor(vaultItem, url)\r\n  {\r\n    this.vaultItem = vaultItem;\r\n    this.url = url;\r\n  }\r\n}\r\n","export const propertiesForm = ['id', 'name', 'action', 'class', 'innerText'];\r\nexport const propertiesOther = ['id', 'name', 'value', 'title', 'textContent', 'data-pt-name', 'ng-model', 'innerText'];\r\n\r\nexport const propertiesAll = ['action', 'id', 'name', 'value', 'submit', 'textContent', 'ng-model', 'data-pt-name', 'placeholder', 'title', 'aria-label', 'class', 'className', 'data-qa', 'autocomplete'];\r\n\r\nexport const word2fa = ['2fa', 'two factor', 'otp', 'yubikey', 'validation code'];\r\nexport const wordAccount = ['account', 'compte'];\r\nexport const wordDate = ['date'];\r\nexport const wordCreate = ['create', ' new ' /* with space to avoid false positives with words that have new */, 'novo' /* Spanish */, 'nouveau' /* French */, 'cria'];\r\n\r\n// TODO: add this in features once clients support diff number of features\r\nexport const wordHolder = ['holder'];\r\n\r\n// TODO: add this in features once clients support diff number of features\r\nexport const ssoProviders = ['google', 'twitter', 'facebook'];\r\n\r\nexport const wordCard = ['credit[- _]?card', 'card']; // remove \"cc\" because of a`cc`ount\r\nexport const wordCCNumber = ['cc[- _]?n'];\r\nexport const wordConfirm = ['confirm', 'reenter'];\r\nexport const wordContinue = ['continue', 'next', 'næste' /* Danish */, 'prosseguir'];\r\nexport const wordCVC = ['security[- _]?code', 'cv(c|v|n|d)', 'csv'];\r\nexport const wordEmail = ['e[-_]?mail', 'correio electrónico' /* Portuguese */, 'correo-e'];\r\nexport const wordExpiry = ['expiry', 'expiration', 'exp'];\r\nexport const wordForget = ['forg(e|o)t', 'remind', 'priminimas', 'priminti' /* Lithuanian */, 'esqueceu'];\r\nexport const wordJoin = ['join'];\r\nexport const wordLogin = ['log[- _]?in', 'log[- _]?(0|o)n', 'prihlásiť' /* slovak */, 'anmelden'];\r\nexport const wordMonth = ['month', 'mm'];\r\nexport const wordNewsletter = ['newsletter', 'email list', 'mailing list', 'mailing', 'scoop'];\r\nexport const wordFirstName = ['first[- _]?name'];\r\nexport const wordLastName = ['last[- _]?name'];\r\nexport const wordName = ['name'];\r\nexport const wordNumber = ['number'];\r\nexport const wordPhone = ['phone'];\r\nexport const wordRecipient = ['recipient'];\r\nexport const wordRegister = ['register', 'reg(?!ion)', 'registra'];\r\nexport const wordRemember = ['remember'];\r\nexport const wordReset = ['reset'];\r\nexport const wordPassword = ['password', 'pass', 'passwd', 'pin', 'contrasinal' /* Spanish */, 'mot de passe' /* French */, 'slaptazod' /* Lithuanian */, 'senha'];\r\nexport const wordPasswordQuestion = ['password?'];\r\nexport const wordPayment = ['payment'];\r\nexport const wordPaymentService = ['visa', 'mastercard', 'master card', 'american express', 'amex'];\r\nexport const wordPrivacy = ['privacy', 'terms'];\r\nexport const wordSearch = ['search', 'look(up)?', 'filter'];\r\nexport const wordSend = ['send', 'enviar'];\r\n// negative lookout not suppored yet in safari\r\n// export let wordSignin = [\"(?<!de)sign[- _]?in\"];\r\nexport const wordSignin = ['^(?:(?!design[- _]?in).)*sign[- _]?in'];\r\nexport const wordSignup = ['sign[- _]?up'];\r\nexport const wordSubmit = ['submit'];\r\nexport const wordSender = ['sender'];\r\nexport const wordSubject = ['subject'];\r\nexport const wordSubscribe = ['subscribe', 'subscription'];\r\nexport const wordType = ['type'];\r\nexport const wordUsername = ['username', 'user', 'pseudo', 'usuario'];\r\nexport const wordYear = ['year', 'yy'];\r\nexport const wordYet = ['yet'];\r\n\r\nexport const wordsAuthLogin = wordLogin.concat(wordSignin);\r\nexport const wordsAuthSignup = wordCreate.concat(wordSignup).concat(wordRegister);\r\nexport const wordsNames = wordFirstName.concat(wordLastName);\r\n\r\nexport const manualWordsLogin = [\r\n  wordUsername,\r\n  wordEmail,\r\n  wordsAuthLogin,\r\n  wordAccount,\r\n];\r\n\r\nexport const wordsAll = [\r\n  wordName,\r\n  wordFirstName,\r\n  wordLastName,\r\n  wordEmail.concat(wordUsername),\r\n  wordsAuthLogin,\r\n  wordsAuthSignup,\r\n\r\n  word2fa,\r\n  wordAccount,\r\n  wordCard,\r\n  wordCCNumber,\r\n  wordConfirm,\r\n  wordContinue,\r\n  wordDate,\r\n  wordCVC,\r\n  wordExpiry,\r\n  wordForget,\r\n  wordReset,\r\n  wordJoin,\r\n  wordMonth,\r\n  wordNewsletter,\r\n\r\n  wordNumber,\r\n  wordPaymentService,\r\n  wordPassword,\r\n  wordPasswordQuestion,\r\n  wordPhone,\r\n\r\n  wordRecipient\r\n    .concat(wordSearch)\r\n    .concat(wordSend)\r\n    .concat(wordSender)\r\n    .concat(wordSubject),\r\n\r\n  wordSubscribe,\r\n  wordYear\r\n];\r\n\r\nexport const authOtherWords = [\r\n  wordAccount,\r\n  wordConfirm,\r\n  wordEmail,\r\n  word2fa,\r\n  wordNewsletter,\r\n\r\n  wordsAuthLogin,\r\n  wordsAuthSignup,\r\n\r\n  wordsNames\r\n    .concat(wordPhone)\r\n    .concat(wordDate)\r\n    .concat(wordRecipient)\r\n    .concat(wordSearch)\r\n    .concat(wordSender)\r\n    .concat(wordSubject)\r\n];\r\n\r\nexport const formWords = [\r\n  wordsAuthLogin,\r\n  wordsAuthSignup,\r\n  wordNewsletter,\r\n  wordSubscribe,\r\n  word2fa,\r\n  wordForget,\r\n  wordReset,\r\n  wordJoin,\r\n  wordPassword,\r\n  wordPasswordQuestion,\r\n  wordPrivacy,\r\n  wordRemember,\r\n  wordSearch,\r\n  wordSend,\r\n  wordCard,\r\n  wordPayment\r\n];\r\n\r\nexport const surroundingWords = [\r\n  wordsNames,\r\n  wordEmail.concat(wordUsername),\r\n  wordsAuthLogin,\r\n  wordsAuthSignup,\r\n\r\n  wordForget,\r\n  wordReset,\r\n  wordJoin,\r\n\r\n  wordNewsletter,\r\n  wordPassword,\r\n  wordPasswordQuestion,\r\n  wordPrivacy,\r\n\r\n  wordRemember,\r\n  wordSearch,\r\n  wordSend,\r\n  wordSubscribe,\r\n  word2fa\r\n];\r\n\r\nexport const urlWords = [\r\n  wordsAuthLogin,\r\n  wordsAuthSignup,\r\n\r\n  wordForget,\r\n  wordReset,\r\n  wordJoin,\r\n\r\n  wordNewsletter,\r\n  wordPassword,\r\n  wordPasswordQuestion,\r\n  wordPrivacy,\r\n\r\n  wordRemember,\r\n  wordSearch,\r\n\r\n  wordSubscribe,\r\n  word2fa\r\n];\r\n\r\nexport const ccWords = [\r\n  wordAccount,\r\n  wordCard,\r\n  wordCCNumber,\r\n  wordCVC,\r\n  wordDate,\r\n  wordEmail,\r\n  wordExpiry,\r\n  wordFirstName,\r\n  wordLastName,\r\n  wordMonth,\r\n  wordName,\r\n  wordNumber,\r\n  wordPayment,\r\n  wordPaymentService,\r\n  wordPhone,\r\n  wordType,\r\n  wordUsername,\r\n  wordYear\r\n];\r\n\r\nexport const loginExceptionList = [];\r\nexport const signupExceptionList = [];\r\n\r\nexport const frameExceptions = ['facebook.com', 'twitter.com', 'google.com'];\r\n","export class CommonUtils\r\n{\r\n  static combineExceptions(trainingData)\r\n  {\r\n    let result = [];\r\n    for (const formName in trainingData)\r\n    {\r\n      const domains = trainingData[formName];\r\n      for (const domain in domains)\r\n      {\r\n        const exceptions = domains[domain];\r\n        result = result.concat(exceptions);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  static validateEmailFormat(email)\r\n  {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    return re.test(email);\r\n  }\r\n}\r\n\r\nexport class FDBoolean\r\n{\r\n  static toBit(bool)\r\n  {\r\n    return bool ? 1 : 0;\r\n  }\r\n}\r\n\r\nexport class FDWindow\r\n{\r\n  static isBrowser()\r\n  {\r\n    return chrome || window.safari;\r\n  }\r\n\r\n  static getFavicon()\r\n  {\r\n    const links = document.getElementsByTagName('link');\r\n    let favicon = '';\r\n    for (let i = 0; i < links.length; i++)\r\n    {\r\n      const item = links[i];\r\n      if (item.getAttribute('rel') === 'icon' || item.getAttribute('rel') === 'shortcut icon')\r\n      {\r\n        favicon = item.href;\r\n      }\r\n      if (item.getAttribute('rel') === 'apple-touch-icon')\r\n      {\r\n        favicon = item.href;\r\n        break;\r\n      }\r\n    }\r\n    return favicon;\r\n  }\r\n\r\n  static getOriginUrlForTraining()\r\n  {\r\n    if (window.location.ancestorOrigins !== undefined\r\n      && window.location.ancestorOrigins.length > 0)\r\n    {\r\n      return window.location.ancestorOrigins[0];\r\n    }\r\n\r\n    return window.location.href;\r\n  }\r\n}\r\n\r\nexport class FDHtmlElement\r\n{\r\n  static isHiddenFromScreen(el)\r\n  {\r\n    if (el.hidden === true)\r\n    {\r\n      return true;\r\n    }\r\n    if (el.tabIndex === -1)\r\n    {\r\n      return true;\r\n    }\r\n    if (el.getAttribute('aria-hidden') === true || el.getAttribute('aria-hidden') === 'true')\r\n    {\r\n      return true;\r\n    }\r\n    const styles = window.getComputedStyle(el);\r\n    if (styles.visibility === 'hidden' || styles.display.includes('none') || styles.opacity === '0')\r\n    {\r\n      return true;\r\n    }\r\n    const element = el.getBoundingClientRect();\r\n    const documentRect = document.documentElement.getBoundingClientRect();\r\n    if (element.top + element.height < documentRect.top)\r\n    {\r\n      return true;\r\n    }\r\n    if (element.left > Math.max(documentRect.right, documentRect.width))\r\n    {\r\n      return true;\r\n    }\r\n    if (element.width === 0 || element.height === 0)\r\n    {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static hasCaptcha(el)\r\n  {\r\n    const elements = Array.prototype.slice.call(el.querySelectorAll(\"[id*='captcha']\"));\r\n    for (const el of elements)\r\n    {\r\n      if (FDHtmlElement.isHiddenFromScreen(el) === false)\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static triggerValueChange(el)\r\n  {\r\n    const inputEvent = new Event('input', { bubbles: true, cancelable: true });\r\n    el.dispatchEvent(inputEvent);\r\n    const changeEvent = new Event('change', { bubbles: true, cancelable: true });\r\n    el.dispatchEvent(changeEvent);\r\n    const keyupEvent = new Event('keyup', { bubbles: true });\r\n    el.dispatchEvent(keyupEvent);\r\n    el.blur();\r\n  }\r\n\r\n  static passwordFieldsCount(el)\r\n  {\r\n    const elements = el.getElementsByTagName('input');\r\n    let result = 0;\r\n    for (let i = 0; i < elements.length; i++)\r\n    {\r\n      const type = elements[i].getAttribute('type') ? elements[i].getAttribute('type').toLowerCase() : '';\r\n      if (type === 'password' && FDHtmlElement.isHiddenFromScreen(elements[i]) === false)\r\n      {\r\n        result++;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static inputFieldsCount(el)\r\n  {\r\n    const array = el.getElementsByTagName('input');\r\n    let result = 0;\r\n    for (let i = 0; i < array.length; i++)\r\n    {\r\n      const type = array[i].getAttribute('type') ? array[i].getAttribute('type').toLowerCase() : '';\r\n      if (type !== 'hidden'\r\n            && type !== 'checkbox'\r\n            && type !== 'submit'\r\n            && type !== 'button'\r\n            && type !== 'password'\r\n            && FDHtmlElement.isHiddenFromScreen(array[i]) === false)\r\n      {\r\n        result++;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  static getParentForm(el)\r\n  {\r\n    if (el.closest)\r\n    {\r\n      const form = el.closest('form');\r\n      return form || undefined;\r\n    }\r\n\r\n    let parent = el.parentElement;\r\n    while (!(parent instanceof HTMLFormElement) && parent)\r\n    {\r\n      parent = parent.parentElement;\r\n    }\r\n    return parent;\r\n  }\r\n\r\n  /**\r\n   * Returns closest parent that is of position type \"relative\" or \"absolute\" or the body itself.\r\n   * @param {HTMLElement} - The html element\r\n   */\r\n  static getOffsetDiv(el)\r\n  {\r\n    let offsetParentDiv;\r\n\r\n    if (el.offsetParent && el.offsetParent instanceof HTMLDivElement)\r\n    {\r\n      offsetParentDiv = el.offsetParent;\r\n    }\r\n\r\n    return offsetParentDiv;\r\n  }\r\n\r\n  static intersectWithClientRect(el, zone)\r\n  {\r\n    const elementRect = el.getBoundingClientRect();\r\n    return !(elementRect.left > zone.right\r\n        || elementRect.right < zone.left\r\n        || elementRect.top > zone.bottom\r\n        || elementRect.bottom < zone.top);\r\n  }\r\n\r\n  static performRealMouseClick(el)\r\n  {\r\n    const realMouseClick = new MouseEvent(\r\n      'click',\r\n      {\r\n        view: window,\r\n        bubbles: true,\r\n        cancellable: true,\r\n        detail: 1\r\n      }\r\n    );\r\n    el.dispatchEvent(realMouseClick);\r\n  }\r\n\r\n  static performEnterKeyPress(el)\r\n  {\r\n    const enterKeyPress = new KeyboardEvent(\r\n      'keypress',\r\n      {\r\n        altKey: false,\r\n        bubbles: true,\r\n        cancelBubble: false,\r\n        cancelable: true,\r\n        charCode: 0,\r\n        code: 'Enter',\r\n        composed: true,\r\n        ctrlKey: false,\r\n        currentTarget: null,\r\n        defaultPrevented: true,\r\n        detail: 0,\r\n        eventPhase: 0,\r\n        isComposing: false,\r\n        isTrusted: true,\r\n        key: 'Enter',\r\n        keyCode: 13,\r\n        location: 0,\r\n        metaKey: false,\r\n        repeat: false,\r\n        returnValue: false,\r\n        shiftKey: false,\r\n        type: 'keypress',\r\n        which: 13\r\n      }\r\n    );\r\n    el.dispatchEvent(enterKeyPress);\r\n  }\r\n\r\n  /**\r\n   * Gets the FDProcessedID of an element if it exists, returns null otherwise.\r\n   * @param {HTMLElement} el\r\n   * @returns string value of FDProcessedID\r\n   */\r\n  static getFDProcessedID(el)\r\n  {\r\n    return el.getAttribute('FDProcessedID');\r\n  }\r\n\r\n  /**\r\n   * Tells whether or not the element has the FDProcessedID attribute\r\n   * @param {HTMLElement} el\r\n   * @returns boolean\r\n   */\r\n  static hasFDProcessedID(el)\r\n  {\r\n    return el.hasAttribute('FDProcessedID');\r\n  }\r\n\r\n  /**\r\n   * Adds a fd processed ID to an element and then returns the new id for the element.\r\n   * If the element already has an ID it will just return the pre-existing one.\r\n   * @param {HTMLElement} el\r\n   * @returns string value of FDProcessedID\r\n   */\r\n  static addOrGetFDProcessedID(el)\r\n  {\r\n    if (FDHtmlElement.hasFDProcessedID(el))\r\n    {\r\n      return FDHtmlElement.getFDProcessedID(el);\r\n    }\r\n\r\n    const fdpid = Math.random().toString(36).substring(7);\r\n    el.setAttribute('FDProcessedID', fdpid);\r\n    return fdpid.toString(10);\r\n  }\r\n}\r\n","import { FieldType } from './trainerModels';\r\nimport { ClickableField, Field } from './models';\r\nimport * as Matcher from './matcher';\r\nimport { FDHtmlElement } from './utils';\r\n\r\nexport default class ScrapingServiceImpl\r\n{\r\n  constructor()\r\n  {\r\n    this.textFields = undefined;\r\n    this.passwordFields = undefined;\r\n    this.selectFields = undefined;\r\n    this.clickeableFields = undefined;\r\n    this.hostname = new URL(window.location.href).hostname;\r\n  }\r\n\r\n  _storeFieldInfo(parent, element, result, type)\r\n  {\r\n    if (parent && parent instanceof HTMLFormElement)\r\n    {\r\n      result.push(new Field(parent, element, type));\r\n    }\r\n    else\r\n    {\r\n      const offsetParentDiv = FDHtmlElement.getOffsetDiv(element);\r\n      result.push(new Field(offsetParentDiv, element, type));\r\n    }\r\n  }\r\n\r\n  _storeClickableFieldInfo(parent, element, result)\r\n  {\r\n    if (parent && parent instanceof HTMLFormElement)\r\n    {\r\n      result.push(new ClickableField(parent, element));\r\n    }\r\n    else\r\n    {\r\n      if (element.offsetParent && element.offsetParent instanceof HTMLDivElement)\r\n      {\r\n        const parentDiv = element.offsetParent;\r\n        result.push(new ClickableField(parentDiv, element));\r\n      }\r\n      else\r\n      {\r\n        result.push(new ClickableField(undefined, element));\r\n      }\r\n    }\r\n  }\r\n\r\n  clearFields()\r\n  {\r\n    this.textFields = undefined;\r\n    this.passwordFields = undefined;\r\n    this.clickeableFields = undefined;\r\n    this.selectFields = undefined;\r\n  }\r\n\r\n  getAllFields()\r\n  {\r\n    const inputFields = this.getAllTextFields();\r\n    const selectFields = this.getAllSelectFields();\r\n    const passwordFields = this.getAllPasswordFields();\r\n    const clickableFields = this.getAllClickeableFields();\r\n    const fields = [...inputFields, ...selectFields, ...passwordFields, ...clickableFields].sort((a, b) =>\r\n    {\r\n      if (a.getHtmlElement().compareDocumentPosition(b.getHtmlElement()) === Node.DOCUMENT_POSITION_PRECEDING)\r\n      {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    });\r\n\r\n    return fields;\r\n  }\r\n\r\n  getAllTextFields()\r\n  {\r\n    // Early return cached results\r\n    if (this.textFields && this.textFields.length > 0)\r\n    {\r\n      return this.textFields;\r\n    }\r\n\r\n    let result = [];\r\n\r\n    // Parse individual form tags for input tag children\r\n    const forms = document.getElementsByTagName('form');\r\n    for (let i = 0; i < forms.length; i++)\r\n    {\r\n      result = result.concat(this.getTextFields(forms[i]));\r\n    }\r\n\r\n    // Parse entire document for input tags\r\n    const inputs = this.getTextFields();\r\n    for (let i = 0; i < inputs.length; i++)\r\n    {\r\n      // Avoid storing duplicates\r\n      if (!result.some((f) => f.getHtmlElement() === inputs[i].getHtmlElement()))\r\n      {\r\n        result.push(inputs[i]);\r\n      }\r\n    }\r\n\r\n    this.textFields = result; // Store results in-memory\r\n    return result;\r\n  }\r\n\r\n  getTextFields(htmlElement)\r\n  {\r\n    const result = [];\r\n    const inputTypes = ['text', 'email', 'tel', 'number'];\r\n    const elements = htmlElement\r\n      ? Array.from(htmlElement.getElementsByTagName('input'))\r\n      : Array.from(document.getElementsByTagName('input'));\r\n\r\n    for (const element of elements)\r\n    {\r\n      const isInputTypeValid = inputTypes.includes(element.type.toLowerCase());\r\n      if (isInputTypeValid && !FDHtmlElement.isHiddenFromScreen(element))\r\n      {\r\n        this._storeFieldInfo(htmlElement, element, result, FieldType.Text);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getAllSelectFields()\r\n  {\r\n    if (this.selectFields && this.selectFields.length > 0)\r\n    {\r\n      return this.selectFields;\r\n    }\r\n\r\n    let result = [];\r\n    const forms = Array.from(document.getElementsByTagName('form'));\r\n    for (const form of forms)\r\n    {\r\n      result = result.concat(this.getSelectFields(form));\r\n    }\r\n\r\n    const inputs = this.getSelectFields();\r\n    for (let i = 0; i < inputs.length; i++)\r\n    {\r\n      if (!result.some((f) => f.getHtmlElement() === inputs[i].getHtmlElement()))\r\n      {\r\n        result.push(inputs[i]);\r\n      }\r\n    }\r\n\r\n    this.selectFields = result;\r\n    return result;\r\n  }\r\n\r\n  getSelectFields(htmlElement)\r\n  {\r\n    const result = [];\r\n    const elements = htmlElement\r\n      ? Array.from(htmlElement.getElementsByTagName('select'))\r\n      : Array.from(document.getElementsByTagName('select'));\r\n\r\n    for (const element of elements)\r\n    {\r\n      if (!FDHtmlElement.isHiddenFromScreen(element) && element.name !== 'remembearTrainerSelect')\r\n      {\r\n        this._storeFieldInfo(htmlElement, element, result, FieldType.Select);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getAllPasswordFields()\r\n  {\r\n    if (this.passwordFields && this.passwordFields.length > 0)\r\n    {\r\n      return this.passwordFields;\r\n    }\r\n\r\n    let result = [];\r\n    const forms = Array.from(document.getElementsByTagName('form'));\r\n    for (const form of forms)\r\n    {\r\n      result = result.concat(this.getPasswordFields(form));\r\n    }\r\n\r\n    const inputs = this.getPasswordFields();\r\n    for (let i = 0; i < inputs.length; i++)\r\n    {\r\n      if (!result.some((f) => f.getHtmlElement() === inputs[i].getHtmlElement()))\r\n      {\r\n        result.push(inputs[i]);\r\n      }\r\n    }\r\n\r\n    this.passwordFields = result;\r\n    return result;\r\n  }\r\n\r\n  getPasswordFields(htmlElement)\r\n  {\r\n    const result = [];\r\n    const elements = htmlElement\r\n      ? Array.from(htmlElement.getElementsByTagName('input'))\r\n      : Array.from(document.getElementsByTagName('input'));\r\n\r\n    for (const element of elements)\r\n    {\r\n      if (!FDHtmlElement.isHiddenFromScreen(element) && element.type.toLowerCase() === 'password')\r\n      {\r\n        this._storeFieldInfo(htmlElement, element, result, FieldType.Password);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getAllClickeableFields()\r\n  {\r\n    if (this.clickeableFields && this.clickeableFields.length > 0)\r\n    {\r\n      return this.clickeableFields;\r\n    }\r\n\r\n    let result = [];\r\n    const forms = Array.from(document.getElementsByTagName('form'));\r\n    for (const form of forms)\r\n    {\r\n      result = result.concat(this.getClickeableInputFields(form));\r\n      result = result.concat(this.getDivButtons(form));\r\n    }\r\n\r\n    const inputs = this.getClickeableInputFields();\r\n    for (let i = 0; i < inputs.length; i++)\r\n    {\r\n      if (!result.some((f) => f.getHtmlElement() === inputs[i].getHtmlElement()))\r\n      {\r\n        result.push(inputs[i]);\r\n      }\r\n    }\r\n\r\n    const divs = this.getDivButtons();\r\n    for (let j = 0; j < divs.length; j++)\r\n    {\r\n      if (!result.some((f) => f.getHtmlElement() === divs[j].getHtmlElement()))\r\n      {\r\n        result.push(divs[j]);\r\n      }\r\n    }\r\n\r\n    this.clickeableFields = result;\r\n    return result;\r\n  }\r\n\r\n  getDivButtons(htmlElement)\r\n  {\r\n    const result = [];\r\n    const node = htmlElement || document;\r\n    const array = Array.from(node.querySelectorAll('div[role=\\'button\\']'));\r\n    for (const element of array)\r\n    {\r\n      if (\r\n        !this.shouldIgnoreButton(element)\r\n        && !FDHtmlElement.isHiddenFromScreen(element)\r\n        && this.getFieldType(element) === FieldType.Button\r\n      )\r\n      {\r\n        this._storeClickableFieldInfo(htmlElement, element, result);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getClickeableInputFields(htmlElement)\r\n  {\r\n    const result = [];\r\n    const node = htmlElement || document;\r\n    const inputs = Array.from(node.getElementsByTagName('input'));\r\n    const buttons = Array.from(node.getElementsByTagName('button'));\r\n    const clickableElements = [...inputs, ...buttons];\r\n\r\n    for (const element of clickableElements)\r\n    {\r\n      if (\r\n        !this.shouldIgnoreButton(element)\r\n        && !FDHtmlElement.isHiddenFromScreen(element)\r\n        && this.getFieldType(element) === FieldType.Button\r\n      )\r\n      {\r\n        this._storeClickableFieldInfo(htmlElement, element, result);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  shouldIgnoreButton(element)\r\n  {\r\n    if (element.className === 'Cy' && this.hostname === 'hangouts.google.com' && element instanceof HTMLButtonElement)\r\n    {\r\n      return true;\r\n    }\r\n\r\n    if (element.name && element.name.includes('remembearTrainer'))\r\n    {\r\n      return true;\r\n    }\r\n\r\n    if (element.disabled)\r\n    {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getAttributeValues(matcher, element)\r\n  {\r\n    const result = [];\r\n\r\n    for (let i = 0; i < matcher.length; i++)\r\n    {\r\n      const attributeName = matcher[i];\r\n      let value = element.getAttribute(attributeName);\r\n\r\n      if (!value)\r\n      {\r\n        value = element[attributeName];\r\n      }\r\n\r\n      if (value !== undefined)\r\n      {\r\n        result.push(value);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getAttributeValuesForMatcher(matcher, element)\r\n  {\r\n    const properties = this.getAttributeValues(matcher, element);\r\n    let value = '';\r\n\r\n    for (let propIndex = 0; propIndex < properties.length; propIndex++)\r\n    {\r\n      value += `${properties[propIndex]} `;\r\n    }\r\n\r\n    if (value !== undefined)\r\n    {\r\n      return value.toLowerCase();\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getFieldFormSurrounding(field)\r\n  {\r\n    // const countPrevious = 0;\r\n    // const countNext = 0;\r\n    // const maxTraversal = 10;\r\n    const result = [];\r\n    if (!field.getParent())\r\n    {\r\n      return result;\r\n    }\r\n\r\n    const list = field.getParent().children;\r\n    for (let i = 0; i < list.length; i++)\r\n    {\r\n      const field = list.item(i);\r\n      if (field && !(field instanceof HTMLScriptElement || field instanceof HTMLFontElement))\r\n      {\r\n        result.push(this.getAttributeValuesForMatcher(Matcher.propertiesOther, field));\r\n      }\r\n    }\r\n\r\n    const parentOfParent = field.getParent().parentElement;\r\n    if (parentOfParent && parentOfParent.children.length > 1 && parentOfParent.children.length < 10)\r\n    {\r\n      const { children } = parentOfParent;\r\n      for (let i = 0; i < children.length; i++)\r\n      {\r\n        const field = children.item(i);\r\n        if (field)\r\n        {\r\n          result.push(this.getAttributeValuesForMatcher(Matcher.propertiesOther, field));\r\n        }\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getFieldSurrounding(field)\r\n  {\r\n    return this.getFieldSurroundingDOM(field).concat(this.getFieldSurroundingVisual(field));\r\n  }\r\n\r\n  getFieldSurroundingDOM(field)\r\n  {\r\n    const countPrevious = 0;\r\n    const countNext = 0;\r\n    const maxTraversal = 8;\r\n    const result = [];\r\n    let nextField = field.getHtmlElement().nextElementSibling;\r\n    let previousField = field.getHtmlElement().previousElementSibling;\r\n\r\n    while (nextField && countNext <= maxTraversal)\r\n    {\r\n      result.push(this.getAttributeValuesForMatcher(Matcher.propertiesOther, nextField));\r\n      nextField = nextField.nextElementSibling;\r\n    }\r\n\r\n    while (previousField && countPrevious <= maxTraversal)\r\n    {\r\n      result.push(this.getAttributeValuesForMatcher(Matcher.propertiesOther, previousField));\r\n      previousField = previousField.previousElementSibling;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getFieldSurroundingVisual(field)\r\n  {\r\n    const maxHeightOnTopAndBottomOfField = 75;\r\n    const maxWidthOnLeftAndRightOfField = 75;\r\n    const maxUpwardTraversal = 3;\r\n    let countNext = 0;\r\n    const result = [];\r\n    const fieldRect = field.getHtmlElement().getBoundingClientRect();\r\n    const zone = {\r\n      bottom: fieldRect.bottom + maxHeightOnTopAndBottomOfField,\r\n      height: fieldRect.height + maxHeightOnTopAndBottomOfField * 2,\r\n      left: fieldRect.left - maxWidthOnLeftAndRightOfField,\r\n      right: fieldRect.right + maxWidthOnLeftAndRightOfField,\r\n      top: fieldRect.top - maxHeightOnTopAndBottomOfField,\r\n      width: fieldRect.width + maxWidthOnLeftAndRightOfField * 2,\r\n    };\r\n    let nextParent = field.getHtmlElement().parentElement;\r\n\r\n    while (nextParent.parentElement && countNext <= maxUpwardTraversal)\r\n    {\r\n      nextParent = nextParent.parentElement;\r\n      if (FDHtmlElement.intersectWithClientRect(nextParent, zone)) countNext++;\r\n    }\r\n\r\n    const htmlElementsInZone = this.getHtmlElementsThatIntersect(zone, field.getHtmlElement(), nextParent);\r\n    htmlElementsInZone.forEach((element) =>\r\n    {\r\n      result.push(this.getAttributeValuesForMatcher(Matcher.propertiesOther, element));\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getHtmlElementsThatIntersect(zone, notHtmlElement, parentToLookIn)\r\n  {\r\n    let result = [];\r\n    const { children } = parentToLookIn;\r\n    for (let i = 0; i < children.length; i++)\r\n    {\r\n      const htmlElement = children.item(i);\r\n      if (htmlElement instanceof HTMLDivElement && htmlElement !== notHtmlElement && FDHtmlElement.intersectWithClientRect(htmlElement, zone))\r\n      {\r\n        result = result.concat(this.getHtmlElementsThatIntersect(zone, notHtmlElement, htmlElement));\r\n      }\r\n      else if (htmlElement instanceof HTMLElement && FDHtmlElement.intersectWithClientRect(htmlElement, zone))\r\n      {\r\n        result.push(htmlElement);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getFieldType(htmlElement)\r\n  {\r\n    if (htmlElement instanceof HTMLInputElement)\r\n    {\r\n      if (htmlElement.type.toLowerCase() === 'text'\r\n                || htmlElement.type.toLowerCase() === 'email'\r\n                || htmlElement.type.toLowerCase() === 'tel'\r\n                || htmlElement.type.toLowerCase() === 'number')\r\n      {\r\n        return FieldType.Text;\r\n      }\r\n      if (htmlElement.type.toLowerCase() === 'password')\r\n      {\r\n        return FieldType.Password;\r\n      }\r\n      if (htmlElement.type.toLowerCase() === 'submit'\r\n                || htmlElement.type.toLowerCase() === 'image'\r\n                || htmlElement.type.toLowerCase() === 'button')\r\n      {\r\n        return FieldType.Button;\r\n      }\r\n    }\r\n    else if (htmlElement instanceof HTMLSelectElement)\r\n    {\r\n      return FieldType.Select;\r\n    }\r\n    else if (htmlElement instanceof HTMLButtonElement\r\n            || (htmlElement instanceof HTMLDivElement && htmlElement.getAttribute('role') === 'button'))\r\n    {\r\n      return FieldType.Button;\r\n    }\r\n    return FieldType.Anything;\r\n  }\r\n}\r\n","export const Globals = {\r\n  AllowLocalHost: null,\r\n  Logger: null,\r\n  Weights: null,\r\n  Exceptions: null,\r\n  CrfParams: null\r\n};\r\n","import * as Matcher from './matcher';\r\nimport { FieldType, VaultItemType, FieldDescription } from './trainerModels';\r\nimport { ClickableField, Field, FormInfo, PageInfo, FieldInfo } from './models';\r\nimport ScrapingServiceImpl from './scraper';\r\nimport Xpath from './xpath';\r\nimport { FDBoolean, FDHtmlElement, FDWindow, CommonUtils } from './utils';\r\nimport { Globals } from './globals';\r\n\r\n/**\r\n * Scoring Service. Training model's weights and exceptions are store in this class.\r\n * Using Singleton pattern to persist weights and exceptions for all services.\r\n */\r\nexport default class ScoringServiceImpl\r\n{\r\n  constructor()\r\n  {\r\n    if (ScoringServiceImpl.exists)\r\n    {\r\n      return ScoringServiceImpl.instance;\r\n    }\r\n\r\n    this.scraper = new ScrapingServiceImpl();\r\n\r\n    this.exceptions = CommonUtils.combineExceptions(Globals.Exceptions.default);\r\n    this.fieldsTraining = [];\r\n    this.inputFields = [];\r\n    this.selectFields = [];\r\n    this.passwordFields = [];\r\n    this.clickableFields = [];\r\n    this.crfParams = Globals.Weights.crf;\r\n\r\n    ScoringServiceImpl.exists = true;\r\n    ScoringServiceImpl.instance = this;\r\n  }\r\n\r\n  fetchFormInfoTypes()\r\n  {\r\n    return [\r\n      {\r\n        name: 'login',\r\n        priority: 3,\r\n        isTrainable: true,\r\n        isScorable: true,\r\n        vaultItemType: VaultItemType.LoginItem,\r\n        fields: [\r\n          new FieldDescription('username', FieldType.Text, 'Login - username'),\r\n          new FieldDescription('password', FieldType.Password, 'Login - password'),\r\n          new FieldDescription('submit', FieldType.Button, 'Login - submit')\r\n        ]\r\n      },\r\n      {\r\n        name: 'signup',\r\n        priority: 2,\r\n        isTrainable: true,\r\n        isScorable: true,\r\n        vaultItemType: VaultItemType.LoginItem,\r\n        fields: [\r\n          new FieldDescription('username', FieldType.Text, 'Signup - username'),\r\n          new FieldDescription('password', FieldType.Password, 'Signup - password'),\r\n          new FieldDescription('submit', FieldType.Button, 'Signup - submit')\r\n        ]\r\n      },\r\n      {\r\n        name: 'newsletter',\r\n        priority: 0,\r\n        isTrainable: true,\r\n        isScorable: true,\r\n        vaultItemType: VaultItemType.Other,\r\n        fields: [\r\n          new FieldDescription('email', FieldType.Text, 'Newsletter - email'),\r\n          new FieldDescription('submit', FieldType.Button, 'Newsletter - submit')\r\n        ]\r\n      },\r\n      {\r\n        name: 'resetpassword',\r\n        priority: 0,\r\n        isTrainable: true,\r\n        isScorable: true,\r\n        vaultItemType: VaultItemType.LoginItem,\r\n        fields: [\r\n          new FieldDescription('username', FieldType.Text, 'Reset Password - username'),\r\n          new FieldDescription('submit', FieldType.Button, 'Reset Password - submit')\r\n        ]\r\n      },\r\n      {\r\n        name: 'search',\r\n        priority: 0,\r\n        isTrainable: true,\r\n        isScorable: false,\r\n        vaultItemType: VaultItemType.Other,\r\n        fields: [\r\n          new FieldDescription('query', FieldType.Text, 'Search - input query'),\r\n          new FieldDescription('submit', FieldType.Button, 'Search - submit')\r\n        ]\r\n      },\r\n      {\r\n        name: 'creditcard',\r\n        priority: 1,\r\n        vaultItemType: VaultItemType.CreditCardItem,\r\n        isTrainable: true,\r\n        isScorable: true,\r\n        fields: [\r\n          new FieldDescription('cc_number', FieldType.Text, 'CC - number'),\r\n          new FieldDescription('cc_name', FieldType.Text, 'CC - name'),\r\n          new FieldDescription('cc_firstname', FieldType.Text, 'CC - first name'),\r\n          new FieldDescription('cc_lastname', FieldType.Text, 'CC - last name'),\r\n          new FieldDescription('cc_mm', FieldType.TextOrSelect, 'CC - mm'),\r\n          new FieldDescription('cc_yy', FieldType.TextOrSelect, 'CC - yy'),\r\n          new FieldDescription('cc_date', FieldType.TextOrSelect, 'CC - date'),\r\n          new FieldDescription('cc_cvc', FieldType.TextOrPassword, 'CC - cvc')\r\n        ]\r\n      },\r\n      {\r\n        name: 'changepassword',\r\n        priority: 2,\r\n        vaultItemType: VaultItemType.LoginItem,\r\n        isTrainable: true,\r\n        isScorable: true,\r\n        fields: [\r\n          new FieldDescription('username', FieldType.Text, 'Change Password - username'),\r\n          new FieldDescription('oldpassword', FieldType.Password, 'Change Password - old password'),\r\n          new FieldDescription('newpassword', FieldType.Password, 'Change Password - new password'),\r\n          new FieldDescription('confirmpassword', FieldType.Password, 'Change Password - confirm password'),\r\n          new FieldDescription('submit', FieldType.Button, 'Change Password - submit')\r\n        ]\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Assigns the scraped fields feature descriptions\r\n   * @param {Object[]} fields - Scraped fields from the webpage\r\n   * @param {Object[]} featuresDescription - All the feature descriptions avaiable for various fields\r\n   */\r\n  setFeaturesForFields(fields, featuresDescription)\r\n  {\r\n    for (const field of fields)\r\n    {\r\n      field.featuresDescription = [];\r\n      field.features = this.getFeaturesForField(field);\r\n      field.features.forEach((feature, index) =>\r\n      {\r\n        field.featuresDescription.push([featuresDescription[index], feature]);\r\n      });\r\n    }\r\n\r\n    return fields;\r\n  }\r\n\r\n  getCRFFormInfos(fields)\r\n  {\r\n    const result = [];\r\n    const formTypes = this.fetchFormInfoTypes();\r\n    const observations = fields.map((_) => _.features);\r\n    const crfParams = this.getCRFParams();\r\n    const { transition_probs: crfTransitionProbs, classes } = crfParams;\r\n\r\n    const viterbiResults = this.viterbi(crfTransitionProbs, observations, crfParams.weights, classes);\r\n\r\n    viterbiResults.forEach((guess, index) =>\r\n    {\r\n      if (guess !== 'other:other')\r\n      {\r\n        const [formType, fieldName] = guess.split(':');\r\n        const formDescription = formTypes.find((_) => _.name === formType);\r\n        if (formDescription)\r\n        {\r\n          const fieldDescription = formDescription.fields.find((_) => _.name === fieldName);\r\n          let formInfo = result.find((_) => _.formDescription.name === formType);\r\n          if (!formInfo)\r\n          {\r\n            formInfo = new FormInfo();\r\n            formInfo.formDescription = formDescription;\r\n            if (formInfo.formDescription)\r\n            {\r\n              result.push(formInfo);\r\n            }\r\n          }\r\n\r\n          if (fieldDescription && fields[index].matchesType(fieldDescription.type))\r\n          {\r\n            formInfo.fieldInfos.push(new FieldInfo(fieldDescription, fields[index]));\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  getFeaturesDescription()\r\n  {\r\n    if (!this.featuresDescription)\r\n    {\r\n      this.featuresDescription = this.getAllFeaturesDescription();\r\n    }\r\n\r\n    return this.featuresDescription;\r\n  }\r\n\r\n  getNumFeatures()\r\n  {\r\n    return this.getFeaturesDescription().length;\r\n  }\r\n\r\n  getPageInfo(forceLogin = false)\r\n  {\r\n    // reset the scraper's stored info as it doesn't contain the sign up popup's new fields\r\n    this.scraper.clearFields();\r\n    // for debugging\r\n    this.inputFields = this.scraper.getAllTextFields();\r\n    this.selectFields = this.scraper.getAllSelectFields();\r\n    this.passwordFields = this.scraper.getAllPasswordFields();\r\n    this.clickableFields = this.scraper.getAllClickeableFields();\r\n\r\n    const formTypes = this.fetchFormInfoTypes();\r\n    const fieldDescriptions = this.getFeaturesDescription();\r\n\r\n    let fields = this.scraper.getAllFields();\r\n    if (fields.length > 100)\r\n    {\r\n      fields = fields.slice(0, 100);\r\n    }\r\n\r\n    this.setFeaturesForFields(fields, fieldDescriptions);\r\n\r\n    const pageInfo = new PageInfo();\r\n    pageInfo.fields = fields;\r\n    pageInfo.clickableFields = this.clickableFields;\r\n\r\n    for (const formDescription of formTypes)\r\n    {\r\n      const formInfo = new FormInfo();\r\n      formInfo.formDescription = formDescription;\r\n\r\n      if (!FDWindow.isBrowser()) continue;\r\n\r\n      const exceptions = this.getExceptions(formDescription.name);\r\n      for (const e of exceptions)\r\n      {\r\n        if (e.ignore && e.ignore.length > 0)\r\n        {\r\n          let fieldsToIgnore = [];\r\n          e.ignore.forEach((xpath) =>\r\n          {\r\n            const elements = Xpath.getElementsByXPath(document, xpath);\r\n            fieldsToIgnore = fieldsToIgnore.concat(elements);\r\n          });\r\n\r\n          fieldsToIgnore.forEach((f) =>\r\n          {\r\n            if (pageInfo.fields.deleteFirst((_) => _.getHtmlElement() === f))\r\n            {\r\n              pageInfo.clickableFields.deleteFirst((_) => _.getHtmlElement() === f);\r\n            }\r\n          });\r\n        }\r\n\r\n        const formInfoFromException = this.getFormInfoFromException(e, formDescription);\r\n        if (formInfoFromException)\r\n        {\r\n          pageInfo.forms.push(formInfoFromException);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.getCRFFormInfos(pageInfo.fields).forEach((form) =>\r\n    {\r\n      pageInfo.forms.push(form);\r\n    });\r\n\r\n    if (pageInfo.forms.some((_) => _.exception === true) === true)\r\n    {\r\n      pageInfo.forms = pageInfo.forms.filter((_) => _.exception === true);\r\n    }\r\n\r\n    // Only grab text and password input fields\r\n    pageInfo.forms = pageInfo.forms.filter((form) =>\r\n    {\r\n      const isValidType = form.fieldInfos.some((f) => f.fieldDescription.type === FieldType.Text || f.fieldDescription.type === FieldType.Password);\r\n      if (!isValidType) return false;\r\n\r\n      if (form.formDescription.name === 'creditcard')\r\n      {\r\n        return Boolean(form.fieldInfos.length > 1);\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    if (!pageInfo.forms.length && forceLogin)\r\n    {\r\n      const forcedLogin = this.getForcedLoginForm();\r\n      if (forcedLogin)\r\n      {\r\n        pageInfo.forms = [forcedLogin];\r\n        pageInfo.forced = true;\r\n      }\r\n    }\r\n\r\n    return pageInfo;\r\n  }\r\n\r\n  getFakePageInfoWithCC(pageInfo)\r\n  {\r\n    const formInfo = new FormInfo();\r\n    const formDescription = this.fetchFormInfoTypes().find((f) => f.name === 'creditcard');\r\n    formInfo.formDescription = formDescription;\r\n    const ccNumberDescription = formInfo.formDescription.fields.find((_) => _.name === 'cc_number');\r\n    const ccNameDescription = formInfo.formDescription.fields.find((_) => _.name === 'cc_name');\r\n    const ccMMDescription = formInfo.formDescription.fields.find((_) => _.name === 'cc_mm');\r\n    const ccYYDescription = formInfo.formDescription.fields.find((_) => _.name === 'cc_yy');\r\n    const ccCVCDescription = formInfo.formDescription.fields.find((_) => _.name === 'cc_cvc');\r\n    const ccNumber = pageInfo.fields.find((_) => _.name === 'cardNumber');\r\n    const ccHolder = pageInfo.fields.find((_) => _.name === 'cardholder');\r\n    const ccMM = pageInfo.fields.find((_) => _.name === 'cardexpirymonth');\r\n    const ccYY = pageInfo.fields.find((_) => _.name === 'cardexpiryyear');\r\n    const ccCVC = pageInfo.fields.find((_) => _.name === 'cvc');\r\n    formInfo.fieldInfos.push(new FieldInfo(ccNumberDescription, ccNumber));\r\n    formInfo.fieldInfos.push(new FieldInfo(ccNameDescription, ccHolder));\r\n    formInfo.fieldInfos.push(new FieldInfo(ccMMDescription, ccMM));\r\n    formInfo.fieldInfos.push(new FieldInfo(ccYYDescription, ccYY));\r\n    formInfo.fieldInfos.push(new FieldInfo(ccCVCDescription, ccCVC));\r\n    pageInfo.forms.push(formInfo);\r\n\r\n    Globals.Logger.log(pageInfo);\r\n    return pageInfo;\r\n  }\r\n\r\n  getForcedLoginForm()\r\n  {\r\n    const inputFields = this.scraper.getAllTextFields();\r\n    const passwordFields = this.scraper.getAllPasswordFields();\r\n    let onlyInputAndPasswordFields = inputFields.concat(passwordFields);\r\n    // const formTypes = this.fetchFormInfoTypes();\r\n    const fieldDescription = this.getFeaturesDescription();\r\n    onlyInputAndPasswordFields = this.setFeaturesForFields(onlyInputAndPasswordFields, fieldDescription);\r\n    const formInfos = this.getCRFFormInfos(onlyInputAndPasswordFields);\r\n\r\n    let result = formInfos.find((item) => item.formDescription.name === 'login');\r\n\r\n    if (!result)\r\n    {\r\n      if (passwordFields.length > 0)\r\n      {\r\n        const tempFormInfos = [];\r\n        const loginDescription = this.fetchFormInfoTypes().find((formDesc) => formDesc.name === 'login');\r\n        const passwordDescription = loginDescription.fields.find((fieldDesc) => fieldDesc.name === 'password');\r\n        const usernameDescription = loginDescription.fields.find((fieldDesc) => fieldDesc.name === 'username');\r\n        passwordFields.forEach((passwordField) =>\r\n        {\r\n          const formInfo = new FormInfo();\r\n          formInfo.formDescription = loginDescription;\r\n          formInfo.fieldInfos.push(new FieldInfo(passwordDescription, passwordField));\r\n          const parent = passwordField.getParent();\r\n          if (parent)\r\n          {\r\n            const sameParentInputFields = inputFields.filter((inputField) => inputField.getParent() === parent);\r\n            if (sameParentInputFields.length > 1)\r\n            {\r\n              const selectedInputField = sameParentInputFields.reduce((previous, current) =>\r\n              {\r\n                const value = this.scraper.getAttributeValuesForMatcher(Matcher.propertiesAll, current.getHtmlElement());\r\n                const featuresValue = this.getFeaturesForValue(value, Matcher.manualWordsLogin);\r\n                current.manualLoginScore = featuresValue.filter((_) => _ === 1).length;\r\n                if (!previous)\r\n                {\r\n                  return current;\r\n                }\r\n                if (previous.manualLoginScore >= current.manualLoginScore)\r\n                {\r\n                  return previous;\r\n                }\r\n\r\n                return current;\r\n              }, undefined);\r\n              if (selectedInputField && selectedInputField.manualLoginScore > 0)\r\n              {\r\n                formInfo.fieldInfos.push(new FieldInfo(usernameDescription, selectedInputField));\r\n              }\r\n            }\r\n            else if (sameParentInputFields.length === 1)\r\n            {\r\n              formInfo.fieldInfos.push(new FieldInfo(usernameDescription, sameParentInputFields[0]));\r\n            }\r\n          }\r\n          tempFormInfos.push(formInfo);\r\n        });\r\n        result = tempFormInfos.reduce((previous, current/** , index, array*/) =>\r\n        {\r\n          if (!previous)\r\n          {\r\n            return current;\r\n          }\r\n          if (previous.fieldInfos.length >= current.fieldInfos.length)\r\n          {\r\n            return previous;\r\n          }\r\n\r\n          return current;\r\n        }, undefined);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  argmax(arr)\r\n  {\r\n    if (arr.length === 0)\r\n    {\r\n      return -1;\r\n    }\r\n    let max = arr[0];\r\n    let maxIndex = 0;\r\n    for (let i = 1; i < arr.length; i++)\r\n    {\r\n      if (arr[i] > max)\r\n      {\r\n        maxIndex = i;\r\n        max = arr[i];\r\n      }\r\n    }\r\n    return maxIndex;\r\n  }\r\n\r\n  /**\r\n   * Viterbi function done with arrays instead of math.js library and matrixes.\r\n   * @param {[[number]]} transitionProbs\r\n   * @param {[[number]]} observations\r\n   * @param {[[number]]} weights\r\n   * @param {[string]} classes\r\n   * @returns [string] possible field type guesses\r\n   */\r\n  viterbi(transitionProbs, observations, weights, classes)\r\n  {\r\n    if (observations.length === 0)\r\n    {\r\n      return [];\r\n    }\r\n    const states = this.matrixMultiply(observations, weights);\r\n    let cur = states[0];\r\n    const stack = [];\r\n    for (let state = 1; state < observations.length; state++)\r\n    {\r\n      let curCon = [];\r\n      for (let j = 0; j < transitionProbs.length; j++)\r\n      {\r\n        curCon = curCon.concat([cur]);\r\n      }\r\n      const transProbs = this.matrixTranspose(this.matrixAdd(this.matrixTranspose(transitionProbs), curCon));\r\n      const nextState = states[state];\r\n      let statesCon = [];\r\n      for (let j = 0; j < transitionProbs.length; j++)\r\n      {\r\n        statesCon = statesCon.concat([nextState]);\r\n      }\r\n      cur = this.matrixAdd(transProbs, statesCon);\r\n      const maxColIxs = [];\r\n      for (const p of this.matrixTranspose(cur))\r\n      {\r\n        const max = this.argmax(p);\r\n        maxColIxs.push(max);\r\n      }\r\n      stack.push(maxColIxs);\r\n      cur = this.matrixMax(cur, 0);\r\n    }\r\n    const stateSeq = [this.argmax(cur)];\r\n    while (stack.length > 0)\r\n    {\r\n      const maxColIxs = stack.pop();\r\n      const nextIndex = stateSeq.slice(-1)[0];\r\n      const nextMaxCol = maxColIxs[nextIndex];\r\n      stateSeq.push(nextMaxCol);\r\n    }\r\n    const result = stateSeq.reverse();\r\n    const output = [];\r\n    for (const index of result)\r\n    {\r\n      output.push(classes[index]);\r\n    }\r\n    return output;\r\n  }\r\n\r\n  getExceptions(formName)\r\n  {\r\n    const url = window.location.href;\r\n    const { hostname } = new URL(url);\r\n    if (this.exceptions)\r\n    {\r\n      return this.exceptions.filter((e) =>\r\n      {\r\n        try\r\n        {\r\n          const exceptionHostname = new URL(e.url).hostname;\r\n          return (e.type === formName && exceptionHostname === hostname);\r\n        }\r\n        catch (error)\r\n        {\r\n          if (e.url.indexOf('http') !== 0)\r\n          {\r\n            try\r\n            {\r\n              const exceptionHostname = new URL(`https://${e.url}`).hostname;\r\n              return (e.type === formName && exceptionHostname === hostname);\r\n            }\r\n            catch (error)\r\n            {\r\n              Globals.Logger.log(`invalid url ${e.url}`);\r\n              return false;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  getFormInfoFromException(exception, formDescription)\r\n  {\r\n    Globals.Logger.log('getFormInfoFromException: start');\r\n    const formInfo = new FormInfo();\r\n    formInfo.formDescription = formDescription;\r\n    formInfo.exception = true;\r\n    formDescription.fields.forEach((fieldDescription) =>\r\n    {\r\n      const { name } = fieldDescription;\r\n      const xpath = exception[name];\r\n\r\n      if (xpath)\r\n      {\r\n        const elements = Xpath.getElementsByXPath(document, xpath);\r\n        // elements = elements.filter(e => self.scraper.getFieldType(e) !== FieldType.Anything);\r\n        if (elements && elements.length > 0)\r\n        {\r\n          const element = elements[0];\r\n          if (FDHtmlElement.isHiddenFromScreen(element) === false || exception.is_hidden === true)\r\n          {\r\n            const currentFields = this.inputFields.concat(this.passwordFields).concat(this.clickableFields);\r\n            let field = currentFields.find((_) => _.getHtmlElement() === element);\r\n            if (!field)\r\n            {\r\n              if (fieldDescription.type === FieldType.Button)\r\n              {\r\n                field = new ClickableField(undefined, element);\r\n              }\r\n              else\r\n              {\r\n                field = new Field(undefined, element, fieldDescription.type);\r\n              }\r\n            }\r\n            const fieldInfo = new FieldInfo(fieldDescription, field);\r\n            formInfo.fieldInfos.push(fieldInfo);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    return formInfo.fieldInfos.length > 0 ? formInfo : undefined;\r\n  }\r\n\r\n  getFeaturesForField(field)\r\n  {\r\n    const features = this.getAllFeatures(field);\r\n    return features;\r\n  }\r\n\r\n  getFeaturesForValue(value, matcher, negative = false)\r\n  {\r\n    const yes = negative === false ? 1 : 0;\r\n    const no = negative === false ? 0 : 1;\r\n    const features = [];\r\n    matcher.forEach((featureWords) =>\r\n    {\r\n      if (featureWords)\r\n      {\r\n        let result = no;\r\n        for (let i = 0; i < featureWords.length; i++)\r\n        {\r\n          const featureRegex = new RegExp(featureWords[i], 'i');\r\n          if (featureRegex.test(value))\r\n          {\r\n            result = yes;\r\n            break;\r\n          }\r\n        }\r\n        features.push(result);\r\n      }\r\n    });\r\n    return features;\r\n  }\r\n\r\n  getCRFParams()\r\n  {\r\n    const { weights } = this.crfParams;\r\n\r\n    if (weights.length === this.getNumFeatures())\r\n    {\r\n      return this.crfParams;\r\n    }\r\n\r\n    return Globals.CrfParams;\r\n  }\r\n\r\n  setCrfParams(crf)\r\n  {\r\n    this.crfParams = crf;\r\n  }\r\n\r\n  getAllFeatures(field)\r\n  {\r\n    const words = Matcher.wordsAll;\r\n    const value = this.scraper.getAttributeValuesForMatcher(Matcher.propertiesAll, field.getHtmlElement());\r\n    const featuresValue = this.getFeaturesForValue(value, words);\r\n    const features = featuresValue\r\n      .concat(this.getFeaturesFieldType(field))\r\n      .concat(this.getFeaturesParentComposition(field))\r\n      .concat(this.getFeaturesParent(field))\r\n      .concat(this.getFeaturesSurrounding(field))\r\n      .concat(this.getFeaturesUrl());\r\n    return features;\r\n  }\r\n\r\n  getAllFeaturesDescription()\r\n  {\r\n    const words = Matcher.wordsAll;\r\n    const features = words.map((_) => _.join(','))\r\n      .concat(this.getFeaturesFieldTypeDesc())\r\n      .concat(this.getFeaturesParentCompositionDesc())\r\n      .concat(this.getFeaturesParentDesc())\r\n      .concat(this.getFeaturesSurroundingDesc())\r\n      .concat(this.getFeaturesUrlDesc());\r\n    return features;\r\n  }\r\n\r\n  getFeaturesFieldType(field)\r\n  {\r\n    return [\r\n      FDBoolean.toBit((field.getType() === FieldType.Text)),\r\n      FDBoolean.toBit((field.getType() === FieldType.Password)),\r\n      FDBoolean.toBit((field.getType() === FieldType.Button)),\r\n      FDBoolean.toBit((field.getType() === FieldType.Select))\r\n    ];\r\n  }\r\n\r\n  getFeaturesFieldTypeDesc()\r\n  {\r\n    return [\r\n      '(field.getType() === FieldType.Text)',\r\n      '(field.getType() === FieldType.Password)',\r\n      '(field.getType() === FieldType.Button)',\r\n      '(field.getType() === FieldType.Select)'\r\n    ];\r\n  }\r\n\r\n  getFeaturesParent(field)\r\n  {\r\n    let formValue = '';\r\n    if (field.getParent() !== undefined)\r\n    {\r\n      formValue = this.scraper.getAttributeValuesForMatcher(Matcher.propertiesForm, field.getParent());\r\n    }\r\n    return this.getFeaturesForValue(formValue, Matcher.formWords);\r\n  }\r\n\r\n  getFeaturesParentDesc()\r\n  {\r\n    return Matcher.formWords.map((_) => `Parent Form: ${_.join(',')}`);\r\n  }\r\n\r\n  getFeaturesParentComposition(field)\r\n  {\r\n    const parentPasswordFieldsCount = field.getParent() ? FDHtmlElement.passwordFieldsCount(field.getParent()) : 0;\r\n    const parentInputfieldsCount = field.getParent() ? FDHtmlElement.inputFieldsCount(field.getParent()) : 0;\r\n    return [\r\n      FDBoolean.toBit((field.getParent() !== undefined)),\r\n      FDBoolean.toBit((field.getParent() instanceof HTMLFormElement === true)),\r\n      FDBoolean.toBit((parentPasswordFieldsCount > 0)),\r\n      FDBoolean.toBit((parentPasswordFieldsCount > 1)),\r\n      FDBoolean.toBit((parentInputfieldsCount > 0)),\r\n      FDBoolean.toBit((parentInputfieldsCount === 2)),\r\n      FDBoolean.toBit((parentInputfieldsCount === 3)),\r\n      FDBoolean.toBit((parentInputfieldsCount > 3)),\r\n    ];\r\n  }\r\n\r\n  getFeaturesParentCompositionDesc()\r\n  {\r\n    return [\r\n      'FDBoolean.toBit((field.getParent() !== undefined))',\r\n      'FDBoolean.toBit((field.getParent() instanceof HTMLFormElement === true))',\r\n      'FDBoolean.toBit((parentPasswordFieldsCount > 0))',\r\n      'FDBoolean.toBit((parentPasswordFieldsCount > 1))',\r\n      'FDBoolean.toBit((parentInputfieldsCount > 0))',\r\n      'FDBoolean.toBit((parentInputfieldsCount === 2))',\r\n      'FDBoolean.toBit((parentInputfieldsCount === 3))',\r\n      'FDBoolean.toBit((parentInputfieldsCount > 3))',\r\n    ];\r\n  }\r\n\r\n  getFeaturesSurrounding(field)\r\n  {\r\n    const surroundingStrings = this.scraper.getFieldSurrounding(field);\r\n    const surroundingValue = surroundingStrings.join(';');\r\n    return this.getFeaturesForValue(surroundingValue, Matcher.surroundingWords);\r\n  }\r\n\r\n  getFeaturesSurroundingDesc()\r\n  {\r\n    return Matcher.surroundingWords.map((_) => `Surrounding: ${_.join(',')}`);\r\n  }\r\n\r\n  getFeaturesUrl()\r\n  {\r\n    return this.getFeaturesForValue(`${FDWindow.getOriginUrlForTraining()};${window.location.href}`, Matcher.urlWords);\r\n  }\r\n\r\n  getFeaturesUrlDesc()\r\n  {\r\n    return Matcher.urlWords.map((_) => `Url: ${_.join(',')}`);\r\n  }\r\n\r\n  setTraining(fields)\r\n  {\r\n    this.fieldsTraining.removeAll();\r\n    fields.forEach((f) =>\r\n    {\r\n      this.fieldsTraining.push(f);\r\n    });\r\n  }\r\n\r\n  cancelTraining()\r\n  {\r\n    this.fieldsTraining.removeAll();\r\n    this.bearifier.cancelTraining();\r\n  }\r\n\r\n  getTrainerValues()\r\n  {\r\n    const exceptions = [];\r\n    const ignores = [];\r\n    this.fieldsTraining.forEach((f) =>\r\n    {\r\n      if (f.trainingHtmlElement)\r\n      {\r\n        const select = f.trainingHtmlElement;\r\n        const xpath = Xpath.getElementXPath(f.getHtmlElement());\r\n        if (select.selectedIndex > 0)\r\n        {\r\n          if (select.selectedIndex === 1)\r\n          {\r\n            ignores.push(xpath);\r\n          }\r\n          else\r\n          {\r\n            const { value } = select.options[select.selectedIndex];\r\n            const formType = value.split(':')[0];\r\n            const fieldType = value.split(':')[1];\r\n            const defaultForm = {\r\n              key: new URL(window.location.href).hostname,\r\n              type: formType,\r\n              html: '',\r\n              raw_html: '',\r\n              is_hidden: false,\r\n              url: window.location.href,\r\n              ignore: [],\r\n              ignore_trainer: false\r\n            };\r\n            const exception = exceptions.find((_) => _.type === formType) || defaultForm;\r\n            exception[fieldType] = xpath;\r\n            if (exception === defaultForm)\r\n            {\r\n              exceptions.push(exception);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    exceptions.forEach((ex) =>\r\n    {\r\n      ex.ignore = ignores;\r\n    });\r\n    if (exceptions.length === 0)\r\n    {\r\n      const defaultForm = {\r\n        key: window.location.hostname,\r\n        type: 'login',\r\n        html: '',\r\n        raw_html: '',\r\n        is_hidden: false,\r\n        url: window.location.href,\r\n        ignore: ignores,\r\n        ignore_trainer: false\r\n      };\r\n      exceptions.push(defaultForm);\r\n    }\r\n    return exceptions;\r\n  }\r\n\r\n  /**\r\n   * !!NOTE ON FUNCTIONS BELOW!!\r\n   * The following functions are helper functions needed to complete the matrix calculations in this class. These are implemented\r\n   * here so we can remove the imported mathjs library and reduce the form detection package size. These functions are not\r\n   * designed to be complete 1 to 1 replacements for the corresponding mathjs functions that they are replacing, but are\r\n   * instead designed to fit the specific types of calculations needed by each, for our purposes in this class.\r\n   * 1-D list == Array [1,2,3,4] (MxN = 1x4)\r\n   * 2-D Matrix == Multidimensional Array [[1,2], [3,4]] (MxN = 2x2) | [[1,2,3,4]] (MxN = 1x4)\r\n   */\r\n\r\n  /**\r\n   * Add together matrix + matrix, matrix + number, list + list, list + number. (Matrices must be of same size & only works on 2-D matrices.)\r\n   * @param {[[number]] | [number] | number} a M*N matrix (2-D), list(1-D), or a single number\r\n   * @param {[[number]] | [number] | number} b M*N matrix (2-D), list(1-D), or a single number\r\n   * @returns {[[number]] | [number]} result of the matrix addition.\r\n   */\r\n  matrixAdd(a, b)\r\n  {\r\n    let ans;\r\n\r\n    // Find out what A is\r\n    const aType = typeof (a) === 'number' ? 'number'\r\n      : Array.isArray(a) && typeof (a[0]) === 'number' ? '1-D'\r\n        : Array.isArray(a) && Array.isArray(a[0]) && typeof (a[0][0]) === 'number' ? '2-D'\r\n          : undefined;\r\n\r\n    // Find out what B is\r\n    const bType = typeof (b) === 'number' ? 'number'\r\n      : Array.isArray(b) && typeof (b[0]) === 'number' ? '1-D'\r\n        : Array.isArray(b) && Array.isArray(b[0]) && typeof (b[0][0]) === 'number' ? '2-D'\r\n          : undefined;\r\n\r\n    if (aType === '2-D' && bType === '2-D') // Both 2-D matrixes\r\n    {\r\n      ans = Array.from(a);\r\n      ans = ans.map((arr, i) => arr.map((num, j) => num + b[i][j]));\r\n    }\r\n    else if (aType === '2-D' && bType === 'number') // 1st arg 2-D matrix, 2nd arg number\r\n    {\r\n      ans = Array.from(a);\r\n      ans = ans.map((arr) => arr.map((num) => num + b));\r\n    }\r\n    else if (aType === 'number' && bType === '2-D') // 1st arg number, 2nd 2-D matrix\r\n    {\r\n      ans = Array.from(b);\r\n      ans = ans.map((arr) => arr.map((num) => num + a));\r\n    }\r\n    else if (aType === '1-D' && bType === '1-D' && a.length === b.length) // Both 1-D matrixes\r\n    {\r\n      ans = Array.from(a);\r\n      ans = ans.map((val, i) => val + b[i]);\r\n    }\r\n    else if (aType === '1-D' && bType === 'number') // 1st arg 1-D matrix, 2nd arg number\r\n    {\r\n      ans = Array.from(a);\r\n      ans = ans.map((val) => val + b);\r\n    }\r\n    else if (aType === 'number' && bType === '1-D') // 1st arg number, 2nd 1-D matrix\r\n    {\r\n      ans = Array.from(b);\r\n      ans = ans.map((val) => val + a);\r\n    }\r\n    else if (aType === bType) // different sized matrices are not valid\r\n    {\r\n      Globals.Logger.error('Different sized matrices are not supported');\r\n    }\r\n    else // any other combination is not valid\r\n    {\r\n      Globals.Logger.error(`unsopported types used: a: ${aType}, b: ${bType}`);\r\n    }\r\n\r\n    return ans;\r\n  }\r\n\r\n  /**\r\n   * Takes either a list, or a 2-D matrix and provides the max, row max, or column max\r\n   * @param {[number] | [[number]]} A 1-D list or 2-D Matrix\r\n   * @param {number} dim undefined 0, or 1. With dim = 0 it takes the max of each column and with dim = 1 it takes the max of each row.\r\n   * @returns the max, wor max or column max\r\n   */\r\n  matrixMax(A, dim)\r\n  {\r\n    const aType = Array.isArray(A) && typeof (A[0]) === 'number' ? '1-D'\r\n      : Array.isArray(A) && Array.isArray(A[0]) && typeof (A[0][0]) === 'number' ? '2-D'\r\n        : undefined;\r\n\r\n    if (!aType)\r\n    {\r\n      Globals.Logger.error('A param is of incorrect type. Must be 1-D or 2-D array');\r\n      return undefined;\r\n    }\r\n\r\n    if (dim === undefined)\r\n    {\r\n      if (aType === '1-D')\r\n      {\r\n        return A.reduce((a, b) => Math.max(a, b), -Infinity);\r\n      }\r\n\r\n      return A.flat().reduce((a, b) => Math.max(a, b), -Infinity);\r\n    }\r\n    if (dim === 0)\r\n    {\r\n      if (aType === '1-D')\r\n      {\r\n        return A.reduce((a, b) => Math.max(a, b), -Infinity);\r\n      }\r\n\r\n      const maxArr = Array.from(A[0]);\r\n      for (let row = 1; row < A.length; row++)\r\n      {\r\n        for (let col = 0; col < A[row].length; col++)\r\n        {\r\n          maxArr[col] = Math.max(maxArr[col], A[row][col]);\r\n        }\r\n      }\r\n      return maxArr;\r\n    }\r\n    if (dim === 1 && aType === '2-D')\r\n    {\r\n      const maxArr = new Array(A.length);\r\n      maxArr.fill(-Infinity);\r\n      for (let row = 0; row < A.length; row++)\r\n      {\r\n        for (let col = 0; col < A[row].length; col++)\r\n        {\r\n          maxArr[row] = Math.max(maxArr[row], A[row][col]);\r\n        }\r\n      }\r\n      return maxArr;\r\n    }\r\n    Globals.Logger.error('problem with either incorrect dim value (undefined, 0, or 1) or matrix type (1-D or 2-D)');\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Multiply two matrices together MxN * NxO or two lists.\r\n   * @param {[[number]] | [number]} A - MxN Matrix (2-D) or list(1-D)\r\n   * @param {[[number]] | [number]} B - NxO Matrix (2-D) or list(1-D)\r\n   * @returns MxO Matrix(2-D) or list(1-D)\r\n   */\r\n  matrixMultiply(A, B)\r\n  {\r\n    // Find out what A is\r\n    const aType = Array.isArray(A) && typeof (A[0]) === 'number' ? '1-D'\r\n      : Array.isArray(A) && Array.isArray(A[0]) && typeof (A[0][0]) === 'number' ? '2-D'\r\n        : undefined;\r\n\r\n    // Find out what B is\r\n    const bType = Array.isArray(B) && typeof (B[0]) === 'number' ? '1-D'\r\n      : Array.isArray(B) && Array.isArray(B[0]) && typeof (B[0][0]) === 'number' ? '2-D'\r\n        : undefined;\r\n\r\n    // if both are 1-D\r\n    if (aType === '1-D' && bType === '1-D' && A.length === B.length)\r\n    {\r\n      let result = 0;\r\n      for (let i = 0; i < A.length; i++)\r\n      {\r\n        result += A[i] * B[i];\r\n      }\r\n      return result;\r\n    }\r\n    // if both are 2-D\r\n    if (aType === '2-D' && bType === '2-D' && A[0].length === B.length)\r\n    {\r\n      const resRows = A.length;\r\n      const aCols = A[0].length;\r\n      const resCols = B[0].length;\r\n      const result = new Array(resRows);\r\n      for (let i = 0; i < result.length; i++)\r\n      {\r\n        result[i] = new Array(resCols);\r\n        result[i].fill(0);\r\n      }\r\n\r\n      for (let row = 0; row < resRows; row++)\r\n      {\r\n        for (let col = 0; col < resCols; col++)\r\n        {\r\n          for (let acc = 0; acc < aCols; acc++)\r\n          {\r\n            result[row][col] += A[row][acc] * B[acc][col];\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    }\r\n    Globals.Logger.error('Unable to multiply the two matricies. Most likely incorrect dimensions or mismath in types (1-D) and (2-D)');\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Transpose a matrix\r\n   * @param {[[number]]} A - MxN Matrix (2-D)\r\n   * @returns {[[number]]} Transpose of A (NxM Matrix)\r\n   */\r\n  matrixTranspose(A)\r\n  {\r\n    // Find out what A is\r\n    const aType = Array.isArray(A) && Array.isArray(A[0]) && typeof (A[0][0]) === 'number' ? '2-D'\r\n      : undefined;\r\n\r\n    if (!aType)\r\n    {\r\n      Globals.Logger.error('incorrect type of A param');\r\n      return undefined;\r\n    }\r\n\r\n    const result = new Array(A[0].length);\r\n    for (let i = 0; i < result.length; i++)\r\n    {\r\n      result[i] = new Array(A.length);\r\n      result[i].fill(0);\r\n    }\r\n\r\n    for (let row = 0; row < result.length; row++)\r\n    {\r\n      for (let col = 0; col < result[row].length; col++)\r\n      {\r\n        result[row][col] = A[col][row];\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { FieldType, VaultItemType, FieldDescription } from './trainerModels';\r\nimport { LoginItem, LoginItemMetadata, FieldInfo } from './models';\r\nimport ScoringServiceImpl from './scoring';\r\nimport ScrapingServiceImpl from './scraper';\r\nimport { FDHtmlElement, FDWindow } from './utils';\r\nimport { Globals } from './globals';\r\n\r\nexport default class AutoFillImpl\r\n{\r\n  constructor()\r\n  {\r\n    this.currentPageInfo = undefined;\r\n    this.currentLoginItem = undefined;\r\n    this.pendingAutofillPassword = false;\r\n  }\r\n\r\n  clearFormInfos()\r\n  {\r\n    this.currentPageInfo = undefined;\r\n  }\r\n\r\n  getPageInfo(forcedLogin = false)\r\n  {\r\n    if (!this.currentPageInfo || forcedLogin === true)\r\n    {\r\n      this.currentPageInfo = new ScoringServiceImpl().getPageInfo(forcedLogin);\r\n    }\r\n\r\n    return this.currentPageInfo;\r\n  }\r\n\r\n  getFormInfos(forcedLogin = false)\r\n  {\r\n    return this.getPageInfo(forcedLogin).forms;\r\n  }\r\n\r\n  fillContentVaultItem(vaultItem)\r\n  {\r\n    if (vaultItem.metadata.type === VaultItemType.LoginItem)\r\n    {\r\n      if (vaultItem.queryMatch)\r\n      {\r\n        if (new URL(vaultItem.queryMatch).hostname !== window.location.hostname)\r\n        {\r\n          if (vaultItem.whitelistMatch)\r\n          {\r\n            const hasHostNameInWhitelist = vaultItem.whitelistMatch.some((hostname) => hostname === window.location.hostname);\r\n            if (!hasHostNameInWhitelist)\r\n            {\r\n              Globals.Logger.log(`Not autofilling - no whitelist match${window.location.href}`);\r\n              return;\r\n            }\r\n          }\r\n          else\r\n          {\r\n            Globals.Logger.log(`Not autofilling - no queryMatch${window.location.href}`);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      const loginItem = vaultItem;\r\n      this.fillLoginItem(loginItem);\r\n    }\r\n    else if (vaultItem.metadata.type === VaultItemType.CreditCardItem)\r\n    {\r\n      const cc = vaultItem;\r\n      this.fillCreditCardItem(cc);\r\n    }\r\n  }\r\n\r\n  fillLoginItemIfPending()\r\n  {\r\n    if (this.pendingAutofillPassword === true && this.currentLoginItem)\r\n    {\r\n      this.pendingAutofillPassword = false;\r\n      this.fillLoginItem(this.currentLoginItem, true, true);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  fillLoginItem(loginItem, autoSubmit = false, loginInfo = undefined, fieldInfo = undefined)\r\n  {\r\n    // This function has been updated to use the current formInfo object associated to the login item being passed\r\n    // as a first choice, then will fall back to the logic below if one is not provided.\r\n    if (loginInfo === undefined)\r\n    {\r\n      let formInfos = this.getFormInfos();\r\n      if (formInfos.length === 0)\r\n      {\r\n        this.clearFormInfos();\r\n        formInfos = this.getFormInfos(true);\r\n      }\r\n      loginInfo = formInfos\r\n        .sort((a, b) => b.formDescription.priority - a.formDescription.priority)\r\n        .find((_) => _.formDescription.vaultItemType === VaultItemType.LoginItem);\r\n    }\r\n\r\n    if (loginInfo)\r\n    {\r\n      loginInfo.vaultItem = loginItem;\r\n      this.currentLoginItem = loginItem;\r\n      const loginFieldMap = this.getAllLoginAndSignupFields(loginInfo, loginItem, fieldInfo, true);\r\n      loginFieldMap.forEach((el) =>\r\n      {\r\n        const { field } = el;\r\n        const { value } = el;\r\n        this.pendingAutofillPassword = false;\r\n        if (field && value && field.field.getEditableHtmlElement().value !== value)\r\n        {\r\n          this.setValueForFieldInfo(field, value);\r\n          if (el.type !== 'password' && el.type !== 'newpassword')\r\n          {\r\n            this.pendingAutofillPassword = true;\r\n          }\r\n        }\r\n      });\r\n      const usernameField = loginInfo.fieldInfos.find((_) => _.fieldDescription.name === 'username');\r\n      if (!loginItem.metadata.username && usernameField && usernameField.field.getHtmlElement().innerText === '')\r\n      {\r\n        return;\r\n      }\r\n\r\n      const submitFields = loginInfo.fieldInfos.filter((_) => _.fieldDescription.name === 'submit');\r\n      autoSubmit = autoSubmit && !loginInfo.grabParentForms().some((_) => FDHtmlElement.inputFieldsCount(_) >= 2 || FDHtmlElement.passwordFieldsCount(_) > 1 || FDHtmlElement.hasCaptcha(_) === true);\r\n      if (autoSubmit === true && submitFields.length > 0)\r\n      {\r\n        let foundButton = false;\r\n        if (fieldInfo)\r\n        {\r\n          const parent = fieldInfo.field.getParent();\r\n          if (parent)\r\n          {\r\n            const submitField = loginInfo.fieldInfos.find((f) => f.field.getParent() === parent && f.fieldDescription.name === 'submit');\r\n            if (submitField)\r\n            {\r\n              foundButton = true;\r\n              // This has to appear as a real mouse click and not a simmulated one to trigger the onSubmitForm() in TrueKeyMV3.\r\n              FDHtmlElement.performRealMouseClick(submitField.field.getHtmlElement());\r\n            }\r\n          }\r\n        }\r\n        if (!foundButton)\r\n        {\r\n          // This has to appear as a real mouse click and not a simmulated one to trigger the onSubmitForm() in TrueKeyMV3.\r\n          FDHtmlElement.performRealMouseClick(submitFields[0].field.getHtmlElement());\r\n        }\r\n      }\r\n      // If auto submit is enabled and no submit fields were found, we will try and find a submit field via the parent form,\r\n      // or press the enter key on the password input box, or the username input box to do the autosubmit instead.\r\n      // This will make the autologon more robust.\r\n      else if (autoSubmit)\r\n      {\r\n        const passwordField = loginInfo.fieldInfos.find((_) => _.fieldDescription.name === 'password');\r\n\r\n        const parent = passwordField && passwordField.field.getParent() ? passwordField.field.getParent()\r\n          : usernameField && usernameField.field.getParent() ? usernameField.field.getParent()\r\n            : null;\r\n\r\n        if (parent && parent.tagName === 'FORM' && parent.elements && parent.elements.length > 0)\r\n        {\r\n          for (let i = 0; i < parent.elements.length; i++)\r\n          {\r\n            if (parent.elements[i].type === 'submit')\r\n            {\r\n              // click this element.\r\n              FDHtmlElement.performRealMouseClick(parent.elements[i]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        else if (passwordField)\r\n        {\r\n          FDHtmlElement.performEnterKeyPress(passwordField.field.getHtmlElement());\r\n        }\r\n        else if (usernameField)\r\n        {\r\n          FDHtmlElement.performEnterKeyPress(usernameField.field.getHtmlElement());\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getFieldForDescription(formInfo, fieldDescription)\r\n  {\r\n    return formInfo.fieldInfos.find((_) => _.fieldDescription.name === fieldDescription);\r\n  }\r\n\r\n  getAllLoginAndSignupFields(formInfo, loginItem, clickedField = undefined, autofilling = false)\r\n  {\r\n    const allLoginAndSignupFields = [];\r\n    let currentType = '';\r\n    let currentField;\r\n    let currentValue = '';\r\n\r\n    (formInfo.fieldInfos.filter((_) => _.fieldDescription.name.includes('username'))).forEach((field) =>\r\n    {\r\n      currentType = 'username';\r\n      currentField = field;\r\n      currentValue = loginItem && loginItem.metadata.username;\r\n      allLoginAndSignupFields.push({ type: currentType, field: currentField, value: currentValue });\r\n    });\r\n\r\n    (formInfo.fieldInfos.filter((_) => _.fieldDescription.name.includes('password') && _.fieldDescription.name !== 'newpassword' && _.fieldDescription.name !== 'confirmpassword')).forEach((field) =>\r\n    {\r\n      currentType = 'password';\r\n      currentField = field;\r\n      if (autofilling === true || (clickedField && clickedField.fieldDescription.name !== 'newpassword' && clickedField.fieldDescription.name !== 'confirmpassword'))\r\n      {\r\n        currentValue = loginItem.content.password;\r\n      }\r\n      else\r\n      {\r\n        currentValue = field.field.getEditableHtmlElement().value;\r\n      }\r\n      allLoginAndSignupFields.push({ type: currentType, field: currentField, value: currentValue });\r\n    });\r\n\r\n    if (formInfo.formDescription.name === 'changepassword')\r\n    {\r\n      (formInfo.fieldInfos.filter((_) => _.fieldDescription.name.includes('password') && _.fieldDescription.name !== 'oldpassword')).forEach((field) =>\r\n      {\r\n        currentType = 'newpassword';\r\n        currentField = field;\r\n        if (clickedField && (clickedField.fieldDescription.name === 'newpassword' || clickedField.fieldDescription.name === 'confirmpassword'))\r\n        {\r\n          currentValue = loginItem.content.password;\r\n        }\r\n        else\r\n        {\r\n          currentValue = field.field.getEditableHtmlElement().value;\r\n        }\r\n        allLoginAndSignupFields.push({ type: currentType, field: currentField, value: currentValue });\r\n      });\r\n    }\r\n    return allLoginAndSignupFields;\r\n  }\r\n\r\n  fillCreditCardItem(ccItem)\r\n  {\r\n    let formInfos = this.getFormInfos();\r\n    if (formInfos.length === 0)\r\n    {\r\n      this.clearFormInfos();\r\n      formInfos = this.getFormInfos(false);\r\n    }\r\n\r\n    const ccInfo = formInfos\r\n      .sort((a, b) => b.formDescription.priority - a.formDescription.priority)\r\n      .find((_) => _.formDescription.vaultItemType === VaultItemType.CreditCardItem);\r\n\r\n    if (ccInfo)\r\n    {\r\n      ccInfo.vaultItem = ccItem;\r\n      const fieldCCMap = [\r\n        [this.getFieldForDescription(ccInfo, 'cc_number'), ccItem.content.number],\r\n        [this.getFieldForDescription(ccInfo, 'cc_name'), ccItem.content.cardholder],\r\n        [this.getFieldForDescription(ccInfo, 'cc_mm'), ccItem.content.expiryMonth],\r\n        [this.getFieldForDescription(ccInfo, 'cc_yy'), ccItem.content.expiryYear],\r\n        [this.getFieldForDescription(ccInfo, 'cc_cvc'), ccItem.content.verification],\r\n        [this.getFieldForDescription(ccInfo, 'cc_date'), `${ccItem.content.expiryMonth}-${ccItem.content.expiryYear}`]\r\n      ];\r\n      fieldCCMap.forEach((el) =>\r\n      {\r\n        const field = el[0];\r\n        const value = el[1];\r\n        if (field && value)\r\n        {\r\n          this.setValueForFieldInfo(field, value);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setValueForField(field, value)\r\n  {\r\n    const htmlElement = field.getEditableHtmlElement();\r\n    try\r\n    {\r\n      htmlElement.click(); // Click may fail and we don't want whole script to crash becasue of this.\r\n      htmlElement.value = value.toString();\r\n      FDHtmlElement.triggerValueChange(htmlElement);\r\n    }\r\n    catch (e)\r\n    {\r\n      Globals.Logger.log(e.message);\r\n    }\r\n  }\r\n\r\n  setValueForFieldInfo(fieldInfo, value)\r\n  {\r\n    // This will return an empty object if field element is not editable. In those cases the script would crash as click unable to be processed.\r\n    const htmlElement = fieldInfo.field.getEditableHtmlElement();\r\n    try\r\n    {\r\n      htmlElement.click(); // Click may fail and we don't want whole script to crash becasue of this.\r\n\r\n      let filled = false;\r\n      if (fieldInfo.fieldDescription.name === 'cc_yy')\r\n      {\r\n        filled = this.setSpecialValueForCCYear(htmlElement, value.toString());\r\n      }\r\n      else if (fieldInfo.fieldDescription.name === 'cc_mm')\r\n      {\r\n        const valueAsNumber = value;\r\n        filled = this.setSpecialValueForCCMonth(htmlElement, valueAsNumber);\r\n      }\r\n      else if (fieldInfo.fieldDescription.name === 'cc_date')\r\n      {\r\n        filled = this.setSpecialValueForExpiryDate(htmlElement, value.toString());\r\n      }\r\n      if (filled === false)\r\n      {\r\n        htmlElement.value = value.toString();\r\n      }\r\n      FDHtmlElement.triggerValueChange(htmlElement);\r\n    }\r\n    catch (e)\r\n    {\r\n      Globals.Logger.log(e.message);\r\n    }\r\n  }\r\n\r\n  setSpecialValueForCCYear(htmlElement, value)\r\n  {\r\n    if (htmlElement instanceof HTMLSelectElement)\r\n    {\r\n      if (htmlElement.options.length > 1)\r\n      {\r\n        const firstOrSecondValue = htmlElement.options.item(1).value;\r\n        if (firstOrSecondValue)\r\n        {\r\n          if (firstOrSecondValue.length === 2 && value.length === 4)\r\n          {\r\n            htmlElement.value = value.substring(2);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setSpecialValueForCCMonth(htmlElement, value)\r\n  {\r\n    if (htmlElement instanceof HTMLSelectElement)\r\n    {\r\n      const lastValue = htmlElement.options.item(htmlElement.options.length - 1).value;\r\n      if (lastValue)\r\n      {\r\n        if (lastValue.length > 2)\r\n        {\r\n          for (let i = 0; i < htmlElement.options.length; i++)\r\n          {\r\n            const option = htmlElement.options[i];\r\n            if (this.isMMMfromMM(option.value, value) === true)\r\n            {\r\n              option.selected = true;\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  setSpecialValueForExpiryDate(htmlElement, value)\r\n  {\r\n    if (htmlElement instanceof HTMLInputElement)\r\n    {\r\n      const splitValue = value.split('-');\r\n      if (htmlElement.size === 4 || htmlElement.maxLength === 4)\r\n      {\r\n        htmlElement.value = splitValue[0] + splitValue[1].substring(2);\r\n        return true;\r\n      }\r\n      if (htmlElement.size === 6 || htmlElement.maxLength === 6)\r\n      {\r\n        htmlElement.value = splitValue[0] + splitValue[1];\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isMMMfromMM(mmm, mm)\r\n  {\r\n    const allMmmTomm = [\r\n      ['jan', 1],\r\n      ['feb', 2],\r\n      ['mar', 3],\r\n      ['apr', 4],\r\n      ['may', 5],\r\n      ['jun', 6],\r\n      ['jul', 7],\r\n      ['aug', 8],\r\n      ['sep', 9],\r\n      ['oct', 10],\r\n      ['nov', 11],\r\n      ['dec', 12]\r\n    ];\r\n    const mmmTomm = allMmmTomm.firstOrDefault((_) => mmm.toLowerCase().indexOf(_[0]) !== -1, undefined);\r\n    return mmmTomm && mmmTomm[1] === mm;\r\n  }\r\n\r\n  grabUnAssignedPasswordFieldAfter(currentPasswordField)\r\n  {\r\n    const pageInfo = this.getPageInfo();\r\n    const allPasswordFields = pageInfo.fields.filter((f) => f.getType() === FieldType.Password);\r\n    const alreadyAssignedPasswordFields = pageInfo.forms.map((formInfo) => formInfo.fieldInfos.filter((f) => f.field.getType() === FieldType.Password)).flatMap((array) => array).map((fieldInfo) => fieldInfo.field);\r\n    const unAssignedPasswordFields = [];\r\n    allPasswordFields.forEach((pw) =>\r\n    {\r\n      if (alreadyAssignedPasswordFields.some((f) => f.getHtmlElement() === pw.getHtmlElement()) === false)\r\n      {\r\n        if (pw.getHtmlElement().compareDocumentPosition(currentPasswordField.getHtmlElement()) === Node.DOCUMENT_POSITION_PRECEDING)\r\n        {\r\n          unAssignedPasswordFields.push(pw);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (unAssignedPasswordFields.length > 0)\r\n    {\r\n      return unAssignedPasswordFields[0];\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  fillPassword(password, fieldInfo = undefined)\r\n  {\r\n    const formInfos = this.getFormInfos();\r\n    const signupForms = formInfos.filter((f) => f.formDescription.name === 'signup');\r\n    const self = this;\r\n    let passwordFields = [];\r\n    if (fieldInfo)\r\n    {\r\n      const formInfo = formInfos.find((f) => f.fieldInfos.some((fi) => fi.field.getHtmlElement() === fieldInfo.field.getHtmlElement()));\r\n      if (formInfo && formInfo.formDescription.name === 'signup' && fieldInfo.fieldDescription.name === 'password')\r\n      {\r\n        // Have to convert fieldInfo's to field types so they can be consumed by the setValue function to set the passwords.\r\n        passwordFields.push(fieldInfo.field);\r\n        fieldInfo.field.sibling && passwordFields.push(fieldInfo.field.sibling.field);\r\n      }\r\n      else if (formInfo && formInfo.formDescription.name === 'changepassword' && fieldInfo.fieldDescription.name === 'oldpassword')\r\n      {\r\n        passwordFields.push(fieldInfo.field);\r\n      }\r\n      else if (formInfo && formInfo.formDescription.name === 'changepassword')\r\n      {\r\n        passwordFields = formInfo.fieldInfos.filter((field) => field.fieldDescription.name === 'newpassword' || field.fieldDescription.name === 'confirmpassword').map((_) => _.field);\r\n      }\r\n      else if (fieldInfo.field.getParent())\r\n      {\r\n        passwordFields = new ScrapingServiceImpl().getPasswordFields(fieldInfo.field.getParent());\r\n      }\r\n      else\r\n      {\r\n        passwordFields = formInfo.fieldInfos.filter((f) => f.field.getType() === FieldType.Password).map((_) => _.field);\r\n        if (passwordFields.length < 2)\r\n        {\r\n          const potentialSecondPasswordField = this.grabUnAssignedPasswordFieldAfter(passwordFields[0]);\r\n          if (potentialSecondPasswordField)\r\n          {\r\n            passwordFields.push(potentialSecondPasswordField);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else if (signupForms.length > 0 && signupForms[0].fieldInfos.length > 0)\r\n    {\r\n      const parent = signupForms[0].fieldInfos[0].field.getParent();\r\n      if (parent)\r\n      {\r\n        passwordFields = new ScrapingServiceImpl().getPasswordFields(fieldInfo.field.getParent());\r\n      }\r\n      else\r\n      {\r\n        passwordFields = signupForms[0].fieldInfos.filter((f) => f.field.getType() === FieldType.Password).map((_) => _.field);\r\n        if (passwordFields.length < 2)\r\n        {\r\n          const potentialSecondPasswordField = this.grabUnAssignedPasswordFieldAfter(passwordFields[0]);\r\n          if (potentialSecondPasswordField)\r\n          {\r\n            passwordFields.push(potentialSecondPasswordField);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else\r\n    {\r\n      passwordFields = formInfos.flatMap((f) => f.fieldInfos).filter((f) => f.field.getType() === FieldType.Password).map((_) => _.field);\r\n    }\r\n    passwordFields.slice(0, 2).forEach((p) => self.setValueForField(p, password));\r\n  }\r\n\r\n  getSignupSecondPasswordField(formInfo, fieldInfo)\r\n  {\r\n    let passwordFields = [];\r\n    if (fieldInfo.field.getParent())\r\n    {\r\n      passwordFields = new ScrapingServiceImpl().getPasswordFields(fieldInfo.field.getParent());\r\n    }\r\n    else\r\n    {\r\n      passwordFields = formInfo.fieldInfos.filter((f) => f.field.getType() === FieldType.Password).map((_) => _.field);\r\n      if (passwordFields.length < 2)\r\n      {\r\n        const potentialSecondPasswordField = this.grabUnAssignedPasswordFieldAfter(passwordFields[0]);\r\n        if (potentialSecondPasswordField)\r\n        {\r\n          passwordFields.push(potentialSecondPasswordField);\r\n        }\r\n      }\r\n    }\r\n    passwordFields = passwordFields.filter((passwordField) => passwordField.FDProcessedID !== fieldInfo.field.FDProcessedID);\r\n\r\n    if (passwordFields.length > 0)\r\n    {\r\n      // convert password field here to FieldInfo object\r\n      const passwordFieldDescription = new FieldDescription('confirmpassword', FieldType.Password);\r\n      const passwordFieldInfo = new FieldInfo(passwordFieldDescription, passwordFields[0]);\r\n\r\n      return passwordFieldInfo;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getLoginItem(pageInfo, formInfo)\r\n  {\r\n    const loginItem = new LoginItem();\r\n    loginItem.changed = true;\r\n    const originalItem = !formInfo ? undefined : formInfo.vaultItem !== undefined ? formInfo.vaultItem : undefined;\r\n\r\n    const favicon = FDWindow.getFavicon();\r\n    if (pageInfo.url)\r\n    {\r\n      const host = new URL(pageInfo.url).hostname;\r\n      const name = originalItem ? originalItem.metadata.name : host;\r\n      const frameHost = new URL(window.location.href).hostname;\r\n      if (host !== frameHost)\r\n      {\r\n        loginItem.metadata = new LoginItemMetadata(pageInfo.url, name, pageInfo.url, favicon, frameHost);\r\n      }\r\n      else\r\n      {\r\n        loginItem.metadata = new LoginItemMetadata(pageInfo.url, name, pageInfo.url, favicon);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      const name = originalItem ? originalItem.metadata.name : window.location.host;\r\n      loginItem.metadata = new LoginItemMetadata(window.location.href, name, window.location.href, favicon);\r\n    }\r\n\r\n    const loginFieldMap = this.getAllLoginAndSignupFields(formInfo, loginItem);\r\n    const usernameField = loginFieldMap.find((_) => _.type === 'username');\r\n    const passwordField = loginFieldMap.find((_) => _.type === 'password');\r\n    const newPasswordField = loginFieldMap.find((_) => _.type === 'newpassword');\r\n\r\n    if (usernameField)\r\n    {\r\n      loginItem.metadata.username = usernameField.field.field.getEditableHtmlElement().value;\r\n    }\r\n\r\n    if (newPasswordField)\r\n    {\r\n      loginItem.content.password = newPasswordField.field.field.getEditableHtmlElement().value;\r\n    }\r\n\r\n    else if (passwordField)\r\n    {\r\n      loginItem.content.password = passwordField.field.field.getEditableHtmlElement().value;\r\n    }\r\n\r\n    if (formInfo.formDescription.name === 'signup')\r\n    {\r\n      if (!this.currentPageInfo.forms.some((_) => _.formDescription.name === 'login'))\r\n      {\r\n        loginItem.metadata.loginUrl = '';\r\n      }\r\n    }\r\n\r\n    loginItem.metadata.type = 'LoginItem';\r\n    return [loginItem, originalItem];\r\n  }\r\n\r\n  getVaultItemFromFormInfo(formInfo)\r\n  {\r\n    // Returns a tuple\r\n    const [loginItem, originalItem] = this.getLoginItem(this.currentPageInfo, formInfo);\r\n\r\n    if (originalItem !== undefined)\r\n    {\r\n      loginItem.changed = !LoginItem.isSame(loginItem, originalItem);\r\n    }\r\n\r\n    return loginItem;\r\n  }\r\n}\r\n","/* eslint-disable no-console */\r\n/**\r\n * Fallback for when no logger is passed into the library from the caller.\r\n */\r\nexport class Logger\r\n{\r\n  log(message)\r\n  {\r\n    console.log(message);\r\n  }\r\n\r\n  error(message)\r\n  {\r\n    console.error(message);\r\n  }\r\n\r\n  warn(message)\r\n  {\r\n    console.warn(message);\r\n  }\r\n\r\n  debug(message)\r\n  {\r\n    console.debug(message);\r\n  }\r\n}\r\n","import ScrapingServiceImpl from './scraper';\r\nimport ScoringServiceImpl from './scoring';\r\nimport AutoFillImpl from './autofill';\r\nimport { Globals } from './globals';\r\nimport { Logger } from './logger';\r\nimport { FDHtmlElement } from './utils';\r\nimport { FieldType } from './trainerModels';\r\n\r\nexport default class FDContentListener\r\n{\r\n  constructor(onSubmitFormInfo = undefined)\r\n  {\r\n    this.scraper = null;\r\n    this.scoreService = null;\r\n    this.autoFill = null;\r\n    this.fields = [];\r\n    this.pageInfoForms = null;\r\n    this.submissionListeners = []; // Array contains the id's of elements with form detection submission listeners attached.\r\n    this.formSubmissionListeners = []; // Array containing the compare strings of formInfo objects that already have submission event listeners attached to them.\r\n    this.onSubmitFormInfo = onSubmitFormInfo; // Callback function passed in by caller on object creation to handle functionality for when a form is submitted.\r\n  }\r\n\r\n  init(config)\r\n  {\r\n    // Globals need to be initialized before these other clases as they may require them.\r\n    Globals.AllowLocalHost = config.allowLocalhost || false;\r\n    Globals.Logger = config.logger || new Logger();\r\n    Globals.Weights = config.weights || null;\r\n    Globals.Exceptions = config.exceptions || null;\r\n    Globals.CrfParams = config.crfParams || null;\r\n\r\n    this.scraper = new ScrapingServiceImpl();\r\n    this.scoreService = new ScoringServiceImpl();\r\n    this.autoFill = new AutoFillImpl();\r\n\r\n    if (!this.onSubmitFormInfo)\r\n    {\r\n      this.onSubmitFormInfo = () =>\r\n      {\r\n        Globals.Logger.log('No form submission callback function was provided on object creation.');\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the formtypes found on the current page.\r\n   * @returns Promise that resolve to a string array containing the different formtypes found on the page.\r\n   */\r\n  getPageType()\r\n  {\r\n    const promise = new Promise((accept) =>\r\n    {\r\n      const retrievePageTypes = (tries) =>\r\n      {\r\n        if (tries < 6 && this.pageInfoForms === null)\r\n        {\r\n          setTimeout(() =>\r\n          {\r\n            retrievePageTypes(tries + 1);\r\n          }, 500);\r\n        }\r\n        else if (this.pageInfoForms === null || this.pageInfoForms.length === 0)\r\n        {\r\n          accept([]);\r\n        }\r\n        else\r\n        {\r\n          const formTypes = this.pageInfoForms.map((formInfo) => formInfo.formDescription.name);\r\n          accept(formTypes);\r\n        }\r\n      };\r\n\r\n      retrievePageTypes(0);\r\n    });\r\n\r\n    return promise;\r\n  }\r\n\r\n  /**\r\n   * Scrape the webpage and retrieve information about form fields.\r\n   */\r\n  shouldGetPageInfo()\r\n  {\r\n    this.scraper.clearFields();\r\n    let hasChanged = false;\r\n    const newFields = this.scraper.getAllFields();\r\n\r\n    // Determine change based on mismatch of # form fields\r\n    if (this.fields.length !== newFields.length)\r\n    {\r\n      hasChanged = true;\r\n    }\r\n\r\n    // Check if any of the items from the local list isn't in new list\r\n    if (!hasChanged)\r\n    {\r\n      // seems like we can guarantee the same order when scraping\r\n      // the longer the list the more we'll skip\r\n      let itemsToSkip = Math.floor(Math.log2(this.fields.length));\r\n      if (itemsToSkip < 1) // Skipping can cause us to miss out on form field changes sometimes, but does bring performance benefits.\r\n      {\r\n        itemsToSkip = 1;\r\n      }\r\n\r\n      for (let i = 0; i < this.fields.length; i += itemsToSkip)\r\n      {\r\n        if (this.fields[i].getHtmlElement() !== newFields[i].getHtmlElement())\r\n        {\r\n          hasChanged = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (hasChanged)\r\n    {\r\n      this.fields = newFields;\r\n    }\r\n\r\n    return hasChanged;\r\n  }\r\n\r\n  /**\r\n   * Add submission listeners to a form.\r\n   * @param {*} formInfo - formInfo object for the form we want to add listeners to.\r\n   * @returns\r\n   */\r\n  addSubmissionListeners(formInfo)\r\n  {\r\n    // Assign click events to the submit buttons\r\n    let formHasSubmit = false;\r\n    for (const { field, fieldDescription } of formInfo.fieldInfos)\r\n    {\r\n      if (fieldDescription.type === FieldType.Button && this.submissionListeners.indexOf(field.FDProcessedID) === -1)\r\n      {\r\n        // Add element to submission listeners list, then add listener.\r\n        this.submissionListeners.push(field.FDProcessedID);\r\n        field.getHtmlElement().addEventListener('click', (e) =>\r\n        {\r\n          this.onSubmitFormInfo(e, formInfo);\r\n        });\r\n        formHasSubmit = true;\r\n      }\r\n\r\n      // Put a listener on the parent of the field if it is a form element.\r\n      const parent = field.getParent();\r\n      if (parent && parent.tagName === 'FORM')\r\n      {\r\n        const parentFDProcessedID = FDHtmlElement.addOrGetFDProcessedID(parent);\r\n        if (this.submissionListeners.indexOf(parentFDProcessedID) === -1)\r\n        {\r\n          this.submissionListeners.push(parentFDProcessedID);\r\n          parent.addEventListener('submit', (e) =>\r\n          {\r\n            this.onSubmitFormInfo(e, formInfo);\r\n          });\r\n\r\n          // Since the parent is a form element then we will also check if there are any\r\n          // uncaught submission elements or possible submit buttons within it.\r\n          if (parent.elements && parent.elements.length > 0)\r\n          {\r\n            for (let i = 0; i < parent.elements.length; i++)\r\n            {\r\n              if (parent.elements[i].type === 'submit')\r\n              {\r\n                // check if this element has been added already, if not add a listener to it.\r\n                const curElement = parent.elements[i];\r\n                const curElementFDProcessedID = FDHtmlElement.addOrGetFDProcessedID(curElement);\r\n                if (this.submissionListeners.indexOf(curElementFDProcessedID) === -1)\r\n                {\r\n                  this.submissionListeners.push(curElementFDProcessedID);\r\n                  // Add a click listener to that button\r\n                  curElement.addEventListener('click', (e) =>\r\n                  {\r\n                    this.onSubmitFormInfo(e, formInfo);\r\n                  });\r\n                  formHasSubmit = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // If no submit buttons are found for the form, then we use this as a last ditch effort to catch submission.\r\n    // Once a keypress occurs on an input field, we add a listener to call submit the form info before the page unloads.\r\n    if (!formHasSubmit)\r\n    {\r\n      for (const { field } of formInfo.fieldInfos)\r\n      {\r\n        if (this.submissionListeners.indexOf(field.FDProcessedID) === -1)\r\n        {\r\n          // Add element to submission listeners list, then add listener.\r\n          this.submissionListeners.push(field.FDProcessedID);\r\n          field.getHtmlElement().addEventListener('keypress', (e) =>\r\n          {\r\n            // When page unloads\r\n            window.onbeforeunload = () =>\r\n            {\r\n              this.onSubmitFormInfo(e, formInfo);\r\n            };\r\n          }, { once: true });\r\n        }\r\n      }\r\n    }\r\n\r\n    // We want the same behaviour for when submitting a form using the enter key, as clicking the submit button,\r\n    // so in order to have that, we are adding the keypress listeners here too.\r\n    document.addEventListener('keypress', (e) =>\r\n    {\r\n      this.onTriggerKeyPressFormInfo(e, formInfo);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Will check if window keypress listener has already been added for the corresponding formInfo object, using the forminfoCompareStr of that object.\r\n   * @param {String} formInfoCompareStr - Identifier created for each formInfo object by getting the FDProcessedIDs, sorting them, and concatenate them into a string.\r\n   * @returns Boolean indicating whether or not the listener has already been added. True if already added, false otherwise.\r\n   */\r\n  doesFormHaveSubmissionListeners(formInfoCompareStr)\r\n  {\r\n    for (let i = 0; i < this.formSubmissionListeners.length; i++)\r\n    {\r\n      if (formInfoCompareStr === this.formSubmissionListeners[i] || this.formSubmissionListeners[i].includes(formInfoCompareStr))\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Process the form only if the enter key was pressed\r\n   * @param {*} event - javascript event parameter passed back from keypress listener\r\n   * @param {*} formInfo - formInfo object\r\n   */\r\n  onTriggerKeyPressFormInfo(event, formInfo)\r\n  {\r\n    if (event.code === 'Enter')\r\n    {\r\n      this.onSubmitFormInfo(event, formInfo);\r\n    }\r\n  }\r\n}\r\n","export default class ScriptBase\r\n{\r\n  constructor(pingCommand)\r\n  {\r\n    this.pingCommand = pingCommand;\r\n    this.basePingListener();\r\n  }\r\n\r\n  basePingListener(callback = null)\r\n  {\r\n    chrome.runtime.onMessage.addListener((request, sender, responseCb) =>\r\n    {\r\n      if (sender.id !== chrome.runtime.id)\r\n      {\r\n        return;\r\n      }\r\n\r\n      const { command } = request;\r\n      if (command === this.pingCommand)\r\n      {\r\n        responseCb({ content: true });\r\n        if (typeof callback === 'function') callback();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\n/////////////////////////////////\n//////////////////////////////////\n//////////\nexport default class Utils\n{\n  /**\n   * Creates a debounced function that delays invoking func until after wait\n   * milliseconds have elapsed since the last time the debounced function was invoked.\n   * source: http://davidwalsh.name/javascript-debounce-function\n  */\n  static debounce(func, wait, immediate)\n  {\n    let timeout;\n    return (...args) =>\n    {\n      const later = () =>\n      {\n        timeout = null;\n        if (!immediate) func(...args);\n      };\n\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(later, wait);\n      if (callNow) func(...args);\n    };\n  }\n\n  static isBrowserEN()\n  {\n    const language = extension.i18n.getUILanguage();\n    return language.toLowerCase().startsWith('en');\n  }\n\n  static isChromeBrowser()\n  {\n    // window.opr is only defined for opera. Edge Chromium has user agent Edg. So avoid these two as\n    // chrome extension can be installed even in these two popular browsers, window.navigator\n    const ua = navigator.userAgent.toLowerCase();\n\n    // Check if browser is chromium based, window.chrome\n    if (!ua.includes('chrome') || !!chrome === false) return false;\n\n    // check if it is opera browser, window.opr\n    if (ua.includes('opr')) return false;\n\n    // check if it is edge browser\n    if (ua.includes('edg')) return false;\n\n    return true;\n  }\n}\n\n/**\n * Vanilla JS solution to JQuery's $(document).ready() API\n */\nexport const onDOMContentReady = (cb) =>\n{\n  if (typeof document === 'undefined' || document === null)\n  {\n    return;\n  }\n\n  if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll))\n  {\n    cb();\n  }\n  else\n  {\n    document.addEventListener('DOMContentLoaded', cb);\n  }\n};\n\nexport const getBrowserInfo = () =>\n{\n  const ua = navigator.userAgent.toLowerCase();\n\n  const match = /(edge)\\/([\\w.]+)/.exec(ua)\n        || /(edg)\\/([\\w.]+)/.exec(ua)\n        || /(opr)[/]([\\w.]+)/.exec(ua)\n        || /(chrome)[ /]([\\w.]+)/.exec(ua)\n        || /(iemobile)[/]([\\w.]+)/.exec(ua)\n        || /(version)(applewebkit)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+).*(version)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+)/.exec(ua)\n        || /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua)\n        || /(msie) ([\\w.]+)/.exec(ua)\n        || (ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua))\n        || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua))\n        || [];\n\n  const platformMatch = /(ipad)/.exec(ua)\n        || /(ipod)/.exec(ua)\n        || /(windows phone)/.exec(ua)\n        || /(iphone)/.exec(ua)\n        || /(kindle)/.exec(ua)\n        || /(silk)/.exec(ua)\n        || /(android)/.exec(ua)\n        || /(win)/.exec(ua)\n        || /(mac)/.exec(ua)\n        || /(linux)/.exec(ua)\n        || /(cros)/.exec(ua)\n        || /(playbook)/.exec(ua)\n        || /(bb)/.exec(ua)\n        || /(blackberry)/.exec(ua)\n        || [];\n\n  const matched = {\n    browser: match[5] || match[3] || match[1] || '',\n    version: match[4] || match[2] || '0',\n    platform: platformMatch[0] || '',\n  };\n\n  if (matched.browser === 'mozilla')\n  {\n    matched.browser = 'firefox';\n  }\n\n  if (matched.browser === 'edg')\n  {\n    matched.browser = 'edge';\n  }\n\n  return matched;\n};\n\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n */\nexport async function digestMessage(message)\n{\n  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8); // hash the message\n  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n  return hashHex;\n}\n/////////////////////////////////\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////\n \n/////\n///\n////////////////////\n/////////////////\n///////////////////////\n///////////////////\n////////////////////////\n//////////////////////\n////////////////////////////\n//////////////////\n/////////////////////////////\n///////\n//////\n\n////////////////////////////////////////////\n///\n///////////////\n///\n//////////////\n///\n \n//////////\n","import { ContentCommands } from '@extension/common/commands';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n// import { Logger } from '@extension/common/logger';\r\nimport FDContentListener from '@mcafee/form-detection/index';\r\nimport { Globals as FDGlobals } from '@mcafee/form-detection/globals';\r\nimport { FieldType, VaultItemType } from '@mcafee/form-detection/trainerModels';\r\nimport ScriptBase from '@extension/scripts/content_base';\r\nimport Utils from '@extension/utilities/utils';\r\nimport { CommonUtils } from '@mcafee/form-detection/utils';\r\n\r\nexport default class IframeFormDetection extends ScriptBase\r\n{\r\n  constructor()\r\n  {\r\n    super(ContentCommands.PING_IFRAME_FORM_DETECTION);\r\n    this.debouncedOnSubmitFormInfo = Utils.debounce(this.onSubmitFormInfo.bind(this), 500, true);\r\n    this.fdContentListener = new FDContentListener(this.debouncedOnSubmitFormInfo);\r\n    this.apsEnabled = false; // Flag for whether aps is enabled or not\r\n  }\r\n\r\n  async main()\r\n  {\r\n    // BkGlobals will determine if the IDPS feature should be shown\r\n    const promises = [BackgroundIPC.getBkGlobals(), BackgroundIPC.getFDWeights(), BackgroundIPC.getFDExceptions(), BackgroundIPC.getFDCrfParams()];\r\n    const [bkGlobals, fdWeights, fdExceptions, fdCrfParams] = await Promise.all(promises);\r\n\r\n    if (!bkGlobals)\r\n    {\r\n      // Logger.warn('startFormDetection: Failed to retrieved bkGlobals');\r\n      return;\r\n    }\r\n\r\n    const { IDPS_FEATURE_ENABLED, APS_COHORT } = bkGlobals.nativeSettings;\r\n    const idpsFeatureEnabled = bkGlobals.IDPS_IS_ENTITLED && IDPS_FEATURE_ENABLED.value > 0;\r\n    const config = { allowLocalhost: bkGlobals.ALLOW_LOCALHOST, weights: fdWeights, /* logger: Logger*/ exceptions: fdExceptions, crfParams: fdCrfParams };\r\n    this.apsEnabled = APS_COHORT.value > 0;\r\n\r\n    this.fdContentListener.init(config);\r\n    this.startFdContentListener(idpsFeatureEnabled);\r\n  }\r\n\r\n  /**\r\n   * This method will invoke a document level observer that watches for DOM changes on the current page,\r\n   * and will trigger the corresponding events if either any login, signup, or changepassword forms are detected.\r\n   */\r\n  startFdContentListener(submitListener = false)\r\n  {\r\n    // Initial call to get original page type.\r\n    this.getPageInfo(submitListener);\r\n\r\n    // Defining Observer to listen for page changes.\r\n    const observer = new MutationObserver(() =>\r\n    {\r\n      // disconnect observer if more than 80 (CPU usage spikes in getPageInfo while guessing fields)\r\n      if (this.fdContentListener.fields.length > 80)\r\n      {\r\n        // Logger.log('stopping observer, (too many fields)');\r\n        observer.disconnect();\r\n      }\r\n\r\n      // Only need to proceed when this method returns true and there are new or modified form fields.\r\n      if (this.fdContentListener.shouldGetPageInfo())\r\n      {\r\n        this.getPageInfo(submitListener);\r\n      }\r\n    });\r\n\r\n    const observerConfig = { childList: true, subtree: true };\r\n    observer.observe(document, observerConfig);\r\n  }\r\n\r\n  /**\r\n   * Gets all pageinfo for the current page, and also adds submission listeners if specified.\r\n   * @param {Boolean} onSubmit - If this param is set to true, then it will add submission listeners for when the forms on the page are submitted.\r\n   */\r\n  getPageInfo(onSubmit = true)\r\n  {\r\n    // Get login/signup fields and forms for current page.\r\n    this.fdContentListener.autoFill.clearFormInfos();\r\n    let pageInfo = this.fdContentListener.autoFill.getPageInfo();\r\n\r\n    // Whenever no forms are found, but there is a text field, password field, and button field found,\r\n    // we re-get the pageinfo with the forced login flag true. This should help us to detect more login pages.\r\n    const hasTextField = pageInfo.fields.some((field) => field.type === FieldType.Text);\r\n    const hasPasswordField = pageInfo.fields.some((field) => field.type === FieldType.Password);\r\n    const hasClickableField = pageInfo.fields.some((field) => field.type === FieldType.Button);\r\n    if (pageInfo.forms.length === 0 && ((hasTextField && hasClickableField) || (hasPasswordField && hasClickableField)))\r\n    {\r\n      pageInfo = this.fdContentListener.autoFill.getPageInfo(true);\r\n    }\r\n\r\n    if (!pageInfo || !pageInfo.forms) return;\r\n    this.fdContentListener.pageInfoForms = pageInfo.forms;\r\n\r\n    this.fdContentListener.pageInfoForms && this.fdContentListener.pageInfoForms.forEach((formInfo) =>\r\n    {\r\n      // Get all fieldinfo.field.FDProcessedIDs, sort them, and concatenate them into a string, to be used for comparisons.\r\n      // This is how we identify if formInfos are the same, instead of trying to do some type of object compare.\r\n      const newFormInfoCompareStr = formInfo.fieldInfos.map((fieldInfo) => fieldInfo.field.FDProcessedID).sort().join('');\r\n\r\n      if (this.fdContentListener.doesFormHaveSubmissionListeners(newFormInfoCompareStr)) return;\r\n\r\n      if (formInfo.formDescription.vaultItemType !== VaultItemType.LoginItem) return;\r\n\r\n      this.fdContentListener.formSubmissionListeners.push(newFormInfoCompareStr);\r\n\r\n      if (formInfo.formDescription.name === 'signup')\r\n      {\r\n        this.signupFormFound(formInfo);\r\n      }\r\n\r\n      if (onSubmit)\r\n      {\r\n        this.fdContentListener.addSubmissionListeners(formInfo);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handles desired functionality for when a signup form is detected on the page.\r\n   */\r\n  signupFormFound()\r\n  {\r\n    if (this.apsEnabled)\r\n    {\r\n      BackgroundIPC.signUpFormDetected();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles desired behaviour for when a login, signup, or changepassword is submitted.\r\n   * @param {*} _ - js event that triggered the listener\r\n   * @param {*} formInfo - formInfo object corresponding to the submit button or key press event that triggered this function\r\n   * @returns boolean\r\n   */\r\n  onSubmitFormInfo(_, formInfo)\r\n  {\r\n    const isHostNameInvalid = window.location.hostname === '' || window.location.hostname === 'localhost';\r\n    if (isHostNameInvalid && !FDGlobals.AllowLocalHost)\r\n    {\r\n      // Logger.log('Ignoring localhost');\r\n      return;\r\n    }\r\n\r\n    if (formInfo.formDescription.vaultItemType !== VaultItemType.LoginItem)\r\n    {\r\n      // Logger.log('Ignoring form submit');\r\n      return;\r\n    }\r\n\r\n    const vaultItem = this.fdContentListener.autoFill.getVaultItemFromFormInfo(formInfo);\r\n\r\n    if (formInfo.formDescription.name === 'login' || formInfo.formDescription.name === 'signup' || formInfo.formDescription.name === 'changepassword')\r\n    {\r\n      const loginItem = vaultItem;\r\n      const usernameField = formInfo.fieldInfos.find((_) => _.fieldDescription.name === 'username');\r\n      const passwordField = formInfo.fieldInfos.find((_) => ['password', 'newpassword', 'confirmpassword'].includes(_.fieldDescription.name));\r\n\r\n      if (usernameField && passwordField)\r\n      {\r\n        // Logger.debug('[Form Detection - Index] Both username and password field are present.');\r\n      }\r\n\r\n      // GMAIL HACK: When trying to create an account on account.google.com and a gmail email option is selected, the email value will not contain the email domain (@gmail.com)\r\n      if (window.location.hostname === 'accounts.google.com' && loginItem && loginItem.metadata && !CommonUtils.validateEmailFormat(loginItem.metadata.username))\r\n      {\r\n        loginItem.metadata.username = `${loginItem.metadata.username}@gmail.com`;\r\n      }\r\n\r\n      // Both username/email and password field are available. login\r\n      if (usernameField && passwordField && loginItem.content && loginItem.content.password && loginItem.metadata && loginItem.metadata.username)\r\n      {\r\n        if (!CommonUtils.validateEmailFormat(loginItem.metadata.username) && formInfo.formDescription.name === 'login')\r\n        {\r\n          // Logger.debug('[Form Detection - Index] The username field does not contain an email address, it may be a phone number or an username');\r\n          return;\r\n        }\r\n        BackgroundIPC.saveFormInfo(loginItem.metadata.username.toLowerCase(), this.fdContentListener.scraper.hostname);\r\n        return;\r\n      }\r\n      // Only username/email is available.\r\n      if (usernameField && loginItem.metadata && loginItem.metadata.username && !passwordField)\r\n      {\r\n        // Logger.debug('[Form Detection - Index] Only the username field was detected');\r\n        const data = {\r\n          username: loginItem.metadata.username.toLowerCase(),\r\n          hostname: this.fdContentListener.scraper.hostname\r\n        };\r\n        BackgroundIPC.saveMultiStepLogin(data, false);\r\n        return;\r\n      }\r\n      // Only password available, send to background\r\n      if (!usernameField && passwordField && loginItem.content)\r\n      {\r\n        // Logger.debug('[Form Detection - Index] Only the password field was detected.');\r\n        const data = {\r\n          hostname: this.fdContentListener.scraper.hostname\r\n        };\r\n        BackgroundIPC.saveMultiStepLogin(data, true);\r\n      }\r\n\r\n      // Logger.log(\"[Form Detection - Index] Didn't do anything with vaultitem, is it a mistake? Unable to find username or password input values.\");\r\n    }\r\n  }\r\n}\r\n\r\nconst iframeFormDetection = new IframeFormDetection();\r\niframeFormDetection.main();\r\n"],"names":["BackgroundCommands","ContentCommands","extension","chrome","HandlePromise","static","message","customCallback","Promise","resolve","reject","runtime","sendMessage","data","lastError","defaultCallback","BackgroundIPC","action","command","handlePromiseMessage","url","requestData","referer","request","commandId","params","type","bIncludeSearchEngines","then","val","JSON","parse","showInNewTab","domain","id","x","y","telemetry","frameUrls","engine","payload","extension_id","showed","searchTerm","setting","username","hostname","completeLogin","email","name","value","personal","activity","FieldType","VaultItemType","FieldDescription","constructor","trainerTextValue","this","Xpath","element","getElementTreeXPath","paths","nodeType","Node","ELEMENT_NODE","parentNode","index","hasFollowingSiblings","sibling","previousSibling","DOCUMENT_TYPE_NODE","nodeName","nextSibling","tagName","prefix","localName","pathIndex","splice","length","join","rule","regElement","regAttr1","regAttr2","regPseudo","regCombinator","regComma","parts","lastRule","String","trim","m","exec","push","substr","indexOf","doc","css","xpath","cssToXPath","getElementsByXPath","evaluateXPath","undefined","ex","contextNode","resultType","XPathResult","ANY_TYPE","result","evaluate","nodes","NUMBER_TYPE","numberValue","STRING_TYPE","stringValue","BOOLEAN_TYPE","booleanValue","UNORDERED_NODE_ITERATOR_TYPE","ORDERED_NODE_ITERATOR_TYPE","item","iterateNext","UNORDERED_NODE_SNAPSHOT_TYPE","ORDERED_NODE_SNAPSHOT_TYPE","i","snapshotLength","snapshotItem","ANY_UNORDERED_NODE_TYPE","FIRST_ORDERED_NODE_TYPE","singleNodeValue","selectorText","Field","parent","htmlElement","manualLoginScore","trainingHtmlElement","scores","getElementXPath","hasAttribute","FDProcessedID","getAttribute","fdpid","Math","random","toString","substring","setAttribute","getId","getFDProcessedID","getName","getHtmlElement","getEditableHtmlElement","HTMLInputElement","HTMLSelectElement","getParent","getType","matchesType","fieldType","ClickableField","super","clickedTime","PageInfo","fields","clickableFields","forms","forced","window","location","href","FieldInfo","fieldDescription","field","ExportableField","ExportableFieldInfo","FormInfo","fieldInfos","exception","averageScore","grabParentForms","filter","_","map","uniqueForms","forEach","f","HTMLFormElement","some","getExportableObj","ExportableFormInfo","formInfo","formDescription","VaultItem","VaultItemMetadata","LoginItemMetadata","website","loginUrl","favicon","frameUrl","originatingTabUrl","LoginItem","content","item1","item2","valuesToCompare","metadata","password","propertiesForm","propertiesOther","propertiesAll","word2fa","wordAccount","wordDate","wordCard","wordCCNumber","wordConfirm","wordCVC","wordEmail","wordExpiry","wordForget","wordJoin","wordMonth","wordNewsletter","wordFirstName","wordLastName","wordName","wordNumber","wordPhone","wordRecipient","wordRemember","wordReset","wordPassword","wordPasswordQuestion","wordPayment","wordPaymentService","wordPrivacy","wordSearch","wordSend","wordSender","wordSubject","wordSubscribe","wordUsername","wordYear","wordsAuthLogin","concat","wordsAuthSignup","wordsNames","manualWordsLogin","wordsAll","formWords","surroundingWords","urlWords","CommonUtils","trainingData","formName","domains","exceptions","test","FDBoolean","bool","FDWindow","safari","links","document","getElementsByTagName","ancestorOrigins","FDHtmlElement","el","hidden","tabIndex","styles","getComputedStyle","visibility","display","includes","opacity","getBoundingClientRect","documentRect","documentElement","top","height","left","max","right","width","elements","Array","prototype","slice","call","querySelectorAll","isHiddenFromScreen","inputEvent","Event","bubbles","cancelable","dispatchEvent","changeEvent","keyupEvent","blur","toLowerCase","array","closest","parentElement","offsetParentDiv","offsetParent","HTMLDivElement","zone","elementRect","bottom","realMouseClick","MouseEvent","view","cancellable","detail","enterKeyPress","KeyboardEvent","altKey","cancelBubble","charCode","code","composed","ctrlKey","currentTarget","defaultPrevented","eventPhase","isComposing","isTrusted","key","keyCode","metaKey","repeat","returnValue","shiftKey","which","hasFDProcessedID","ScrapingServiceImpl","textFields","passwordFields","selectFields","clickeableFields","URL","_storeFieldInfo","getOffsetDiv","_storeClickableFieldInfo","parentDiv","clearFields","getAllFields","getAllTextFields","getAllSelectFields","getAllPasswordFields","getAllClickeableFields","sort","a","b","compareDocumentPosition","DOCUMENT_POSITION_PRECEDING","getTextFields","inputs","inputTypes","from","form","getSelectFields","getPasswordFields","getClickeableInputFields","getDivButtons","divs","j","node","shouldIgnoreButton","getFieldType","clickableElements","className","HTMLButtonElement","disabled","getAttributeValues","matcher","attributeName","getAttributeValuesForMatcher","properties","propIndex","getFieldFormSurrounding","list","children","HTMLScriptElement","HTMLFontElement","parentOfParent","getFieldSurrounding","getFieldSurroundingDOM","getFieldSurroundingVisual","nextField","nextElementSibling","previousField","previousElementSibling","countNext","fieldRect","maxHeightOnTopAndBottomOfField","maxWidthOnLeftAndRightOfField","nextParent","intersectWithClientRect","getHtmlElementsThatIntersect","notHtmlElement","parentToLookIn","HTMLElement","Globals","AllowLocalHost","Logger","Weights","Exceptions","CrfParams","ScoringServiceImpl","exists","instance","scraper","combineExceptions","fieldsTraining","inputFields","crfParams","crf","fetchFormInfoTypes","priority","isTrainable","isScorable","vaultItemType","setFeaturesForFields","featuresDescription","features","getFeaturesForField","feature","getCRFFormInfos","formTypes","observations","getCRFParams","transition_probs","crfTransitionProbs","classes","viterbi","weights","guess","formType","fieldName","split","find","getFeaturesDescription","getAllFeaturesDescription","getNumFeatures","getPageInfo","forceLogin","fieldDescriptions","pageInfo","isBrowser","getExceptions","e","ignore","fieldsToIgnore","deleteFirst","formInfoFromException","getFormInfoFromException","Boolean","forcedLogin","getForcedLoginForm","getFakePageInfoWithCC","ccNumberDescription","ccNameDescription","ccMMDescription","ccYYDescription","ccCVCDescription","ccNumber","ccHolder","ccMM","ccYY","ccCVC","log","onlyInputAndPasswordFields","tempFormInfos","loginDescription","formDesc","passwordDescription","fieldDesc","usernameDescription","passwordField","sameParentInputFields","inputField","selectedInputField","reduce","previous","current","featuresValue","getFeaturesForValue","argmax","arr","maxIndex","transitionProbs","states","matrixMultiply","cur","stack","state","curCon","transProbs","matrixTranspose","matrixAdd","nextState","statesCon","maxColIxs","p","matrixMax","stateSeq","nextMaxCol","pop","reverse","output","exceptionHostname","error","is_hidden","fieldInfo","getAllFeatures","negative","yes","no","featureWords","RegExp","setCrfParams","words","getFeaturesFieldType","getFeaturesParentComposition","getFeaturesParent","getFeaturesSurrounding","getFeaturesUrl","getFeaturesFieldTypeDesc","getFeaturesParentCompositionDesc","getFeaturesParentDesc","getFeaturesSurroundingDesc","getFeaturesUrlDesc","toBit","formValue","parentPasswordFieldsCount","passwordFieldsCount","parentInputfieldsCount","inputFieldsCount","surroundingValue","getOriginUrlForTraining","setTraining","removeAll","cancelTraining","bearifier","getTrainerValues","ignores","select","selectedIndex","options","defaultForm","html","raw_html","ignore_trainer","ans","aType","isArray","bType","num","A","dim","Infinity","flat","maxArr","row","col","fill","B","resRows","aCols","resCols","acc","AutoFillImpl","currentPageInfo","currentLoginItem","pendingAutofillPassword","clearFormInfos","getFormInfos","fillContentVaultItem","vaultItem","queryMatch","whitelistMatch","loginItem","fillLoginItem","cc","fillCreditCardItem","fillLoginItemIfPending","autoSubmit","loginInfo","formInfos","getAllLoginAndSignupFields","setValueForFieldInfo","usernameField","innerText","submitFields","hasCaptcha","foundButton","submitField","performRealMouseClick","performEnterKeyPress","getFieldForDescription","clickedField","autofilling","allLoginAndSignupFields","currentField","currentType","currentValue","ccItem","ccInfo","number","cardholder","expiryMonth","expiryYear","verification","setValueForField","click","triggerValueChange","filled","setSpecialValueForCCYear","valueAsNumber","setSpecialValueForCCMonth","setSpecialValueForExpiryDate","firstOrSecondValue","lastValue","option","isMMMfromMM","selected","splitValue","size","maxLength","mmm","mm","mmmTomm","firstOrDefault","grabUnAssignedPasswordFieldAfter","currentPasswordField","allPasswordFields","alreadyAssignedPasswordFields","flatMap","unAssignedPasswordFields","pw","fillPassword","signupForms","self","fi","potentialSecondPasswordField","getSignupSecondPasswordField","passwordFieldDescription","getLoginItem","changed","originalItem","getFavicon","host","frameHost","loginFieldMap","newPasswordField","getVaultItemFromFormInfo","isSame","console","warn","debug","FDContentListener","onSubmitFormInfo","scoreService","autoFill","pageInfoForms","submissionListeners","formSubmissionListeners","init","config","allowLocalhost","logger","getPageType","accept","retrievePageTypes","tries","setTimeout","shouldGetPageInfo","hasChanged","newFields","itemsToSkip","floor","log2","addSubmissionListeners","formHasSubmit","addEventListener","parentFDProcessedID","addOrGetFDProcessedID","curElement","curElementFDProcessedID","onbeforeunload","once","onTriggerKeyPressFormInfo","doesFormHaveSubmissionListeners","formInfoCompareStr","event","ScriptBase","pingCommand","basePingListener","callback","onMessage","addListener","sender","responseCb","Utils","func","wait","immediate","timeout","args","callNow","clearTimeout","i18n","getUILanguage","startsWith","ua","navigator","userAgent","debouncedOnSubmitFormInfo","debounce","bind","fdContentListener","apsEnabled","async","promises","getBkGlobals","getFDWeights","getFDExceptions","getFDCrfParams","bkGlobals","fdWeights","fdExceptions","fdCrfParams","all","IDPS_FEATURE_ENABLED","APS_COHORT","nativeSettings","idpsFeatureEnabled","IDPS_IS_ENTITLED","ALLOW_LOCALHOST","startFdContentListener","submitListener","observer","MutationObserver","disconnect","observe","childList","subtree","onSubmit","hasTextField","hasPasswordField","hasClickableField","newFormInfoCompareStr","signupFormFound","signUpFormDetected","validateEmailFormat","saveFormInfo","saveMultiStepLogin","main"],"sourceRoot":""}
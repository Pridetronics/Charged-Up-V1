{"version":3,"file":"scripts/content_annotation.js","mappings":"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CACA,+BACA,4BACA,wCACA,mBACA,0BACA,8BACA,2BACA,6BACA,2BACA,qBACA,+BACA,iCACA,2CACA,8BACA,6BACA,sCACA,0CACA,4BACA,2BACA,+BACA,2BACA,oCACA,0BACA,uBACA,qCACA,+BACA,+BACA,6BACA,yBACA,uBACA,qCACA,2BACA,4BACA,yBACA,6BACA,2BACA,6BACA,8BACA,2BACA,2BACA,sDACA,4BACA,8BACA,sBACA,0BACA,0BACA,0BACA,yBACA,+BACA,yBACA,6BACA,gCACA,4BACA,6CACA,wBACA,2BACA,2BACA,uBACA,iDACA,4BACA,oCACA,yBACA,4BACA,wCACA,yBACA,8BACA,wBACA,qBACA,0BACA,yBACA,0BACA,qCACA,uBACA,2BACA,2BACA,sCACA,6BACA,uBACA,kCACA,2BACA,wCACA,yBACA,yBACA,yBACA,8BACA,2BACA,0BACA,iCACA,kCACA,kCACA,wCACA,yBACA,4CACA,2CACA,yCACA,6CACA,gDACA,6CACA,+BACA,6BACA,+BACA,+CACA,2BACA,6BACA,wBACA,gCExJAC,eAAgB/F,GAChBgG,eAAgBnF,GAChBoF,cAAe,KACfC,aFwJ0B,CAC1B,CACEC,OAAQ,yBACRC,KAAM,IAER,CACED,OAAQ,sBACRC,KAAM,CACJ,4DAGJ,CACED,OAAQ,qBACRC,KAAM,IAER,CACED,OAAQ,6BACRC,KAAM,IAER,CACED,OAAQ,cACRC,KAAM,IAER,CACED,OAAQ,iBACRC,KAAM,IAER,CACED,OAAQ,gBACRC,KAAM,IAER,CACED,OAAQ,qBACRC,KAAM,IAER,CACED,OAAQ,gBACRC,KAAM,KE5LRC,iBAAiB,EAGjBC,qBAAsB,KACtBC,gBAAiB,KACjBC,eAAe,EACfC,gBAAgB,EAGhBC,cAAe,KACfC,kBAAmB5G,GACnB6G,oBAAqB,MACrBC,gBAAiBrO,EAGjBsO,gCAAgC,EAGhCC,iBAAiB,EAGjBC,cAAe,6CACfC,sBAAuB,gEACvBC,mBAAoB,KACpBC,kBAAkB,EAClBC,kBAAmB,KACnBC,kBAAmB,gCAGnBC,UAAW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","sources":["webpack:///./WABrowserExtension-Common/Annotations-Package/thirdparty/punycode_min_es6.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///webpack/runtime/node module decorator","webpack:///./extension/common/constants.js","webpack:///./extension/common/sma_variables.js","webpack:///./extension/common/annotation_variables.js","webpack:///./extension/common/webextension.js","webpack:///./extension/common/commands.js","webpack:///./extension/common/cache_store_variables.js","webpack:///./extension/common/tab_data.js","webpack:///./extension/common/background_constants.js","webpack:///./extension/background/dispatchers/native/native_settings.js","webpack:///./extension/background/background_globals.js","webpack:///./extension/ui/foreground/foreground_globals.js","webpack:///./extension/common/logger.js","webpack:///./coreengine/globals.js","webpack:///./coreengine/external_msg_dispatcher.js","webpack:///./extension/common/http_service.js","webpack:///./coreengine/resource_requestor.js","webpack:///./coreengine/search_engine.js","webpack:///./extension/common/handle_promise.js","webpack:///./extension/common/background_ipc.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/globals.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/constants.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/link_harvester.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/resource_manager.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Balloon/balloon_displayer.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/event_handler.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/search_engine_utils.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Annotation/annotation_variables.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Balloon/balloon.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Balloon/balloon_creator.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Annotation/annotation_inserter.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Annotation/annotation_engine.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Annotation/annotation.js","webpack:///./WABrowserExtension-Common/Annotations-Package/MutationObserver/mutation_response.js","webpack:///./WABrowserExtension-Common/Annotations-Package/MutationObserver/annotation_mutation.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Annotation/annotation_properties.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Balloon/balloon_properties.js","webpack:///./WABrowserExtension-Common/Annotations-Package/index.js","webpack:///./extension/telemetry/common_telemetry.js","webpack:///./extension/common/background_common.js","webpack:///./extension/telemetry/telemetry_message_modifiers.js","webpack:///./extension/utilities/utils.js","webpack:///./extension/telemetry/context_telemetry.js","webpack:///./extension/common/url_parser.js","webpack:///./WABrowserExtension-Common/Common-Utils-Package/logger/logger_settings.js","webpack:///./WABrowserExtension-Common/Common-Utils-Package/logger/logger.js","webpack:///./WABrowserExtension-Common/HTI-Package/hti/hti_commands.js","webpack:///./WABrowserExtension-Common/HTI-Package/hti/hti_proxy.js","webpack:///./WABrowserExtension-Common/HTI-Package/content_hti_requestor.js","webpack:///./WABrowserExtension-Common/GTI-Package/gti/gti_commands.js","webpack:///./WABrowserExtension-Common/GTI-Package/gti/gti_proxy.js","webpack:///./WABrowserExtension-Common/GTI-Package/content_gti_requestor.js","webpack:///./extension/scripts/content_base.js","webpack:///./extension/scripts/content_annotation.js"],"sourcesContent":["/* eslint-disable */\r\n/* Copyright Mathias Bynens <https://mathiasbynens.be/>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\n/* ! https://mths.be/punycode v1.4.0 by @mathias */\r\nconst e = typeof exports === 'object' && exports && !exports.nodeType && exports; const o = typeof module === 'object' && module && !module.nodeType && module; const r = typeof global === 'object' && global; if (r.global === r || r.window === r || r.self === r) { root = r; } let n; const g = 2147483647; const x = 36; const b = 1; const C = 26; const t = 38; const i = 700; const j = 72; const m = 128; const A = '-'; const f = /^xn--/; const u = /[^\\x20-\\x7E]/; const l = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; const a = { overflow: 'Overflow: input needs wider integers to process', 'not-basic': 'Illegal input >= 0x80 (not a basic code point)', 'invalid-input': 'Invalid input' }; const c = x - b; const y = Math.floor; const I = String.fromCharCode; let s; function E(e) { throw new RangeError(a[e]); } function p(e, o) { let r = e.length; const n = []; while (r--) { n[r] = o(e[r]); } return n; } function d(e, o) { const r = e.split('@'); let n = ''; if (r.length > 1) { n = `${r[0]}@`; e = r[1]; }e = e.replace(l, '.'); const t = e.split('.'); const i = p(t, o).join('.'); return n + i; } function F(e)\r\n{\r\n  const o = []; let r = 0; const n = e.length; let t; let i; while (r < n)\r\n  {\r\n    t = e.charCodeAt(r++); if (t >= 55296 && t <= 56319 && r < n)\r\n    {\r\n      i = e.charCodeAt(r++); if ((i & 64512) == 56320) { o.push(((t & 1023) << 10) + (i & 1023) + 65536); }\r\n      else { o.push(t); r--; }\r\n    }\r\n    else { o.push(t); }\r\n  } return o;\r\n} function w(e) { return p(e, (e) => { let o = ''; if (e > 65535) { e -= 65536; o += I(e >>> 10 & 1023 | 55296); e = 56320 | e & 1023; }o += I(e); return o; }).join(''); } function k(e) { if (e - 48 < 10) { return e - 22; } if (e - 65 < 26) { return e - 65; } if (e - 97 < 26) { return e - 97; } return x; } function O(e, o) { return e + 22 + 75 * (e < 26) - ((o != 0) << 5); } function S(e, o, r) { let n = 0; e = r ? y(e / i) : e >> 1; e += y(e / o); for (;e > c * C >> 1; n += x) { e = y(e / c); } return y(n + (c + 1) * e / (e + t)); } function h(e) { const o = []; const r = e.length; let n; let t = 0; let i = m; let f = j; let u; let l; let a; let c; let s; let p; let d; let h; let v; u = e.lastIndexOf(A); if (u < 0) { u = 0; } for (l = 0; l < u; ++l) { if (e.charCodeAt(l) >= 128) { E('not-basic'); }o.push(e.charCodeAt(l)); } for (a = u > 0 ? u + 1 : 0; a < r;) { for (c = t, s = 1, p = x; ;p += x) { if (a >= r) { E('invalid-input'); }d = k(e.charCodeAt(a++)); if (d >= x || d > y((g - t) / s)) { E('overflow'); }t += d * s; h = p <= f ? b : p >= f + C ? C : p - f; if (d < h) { break; }v = x - h; if (s > y(g / v)) { E('overflow'); }s *= v; }n = o.length + 1; f = S(t - c, n, c == 0); if (y(t / n) > g - i) { E('overflow'); }i += y(t / n); t %= n; o.splice(t++, 0, i); } return w(o); } function v(e) { let o; let r; let n; let t; let i; let f; let u; let l; let a; let c; let s; const p = []; let d; let h; let v; let w; e = F(e); d = e.length; o = m; r = 0; i = j; for (f = 0; f < d; ++f) { s = e[f]; if (s < 128) { p.push(I(s)); } }n = t = p.length; if (t) { p.push(A); } while (n < d) { for (u = g, f = 0; f < d; ++f) { s = e[f]; if (s >= o && s < u) { u = s; } }h = n + 1; if (u - o > y((g - r) / h)) { E('overflow'); }r += (u - o) * h; o = u; for (f = 0; f < d; ++f) { s = e[f]; if (s < o && ++r > g) { E('overflow'); } if (s == o) { for (l = r, a = x; ;a += x) { c = a <= i ? b : a >= i + C ? C : a - i; if (l < c) { break; }w = l - c; v = x - c; p.push(I(O(c + w % v, 0))); l = y(w / v); }p.push(I(O(l, 0))); i = S(r, h, n == t); r = 0; ++n; } }++r; ++o; } return p.join(''); } function T(e) { return d(e, (e) => (f.test(e) ? h(e.slice(4).toLowerCase()) : e)); } function L(e) { return d(e, (e) => (u.test(e) ? `xn--${v(e)}` : e)); }n = { version: '1.3.2', ucs2: { decode: F, encode: w }, decode: h, encode: v, toASCII: L, toUnicode: T }; module.exports = n;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","/**\r\n * The different webpage/url states that exists within WebAdvisor\r\n */\r\nexport const BlockState = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  TYPOSQUATTING: 5,\r\n  PHISHING: 6,\r\n  * [Symbol.iterator]() // Create an iterable that returns all the \"bad\" states\r\n  {\r\n    for (const prop of Object.keys(this))\r\n    {\r\n      if (prop !== 'GREEN' && prop !== 'UNKNOWN')\r\n      {\r\n        yield this[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * The browsers that WebAdvisor supports\r\n */\r\nexport const BrowserType = {\r\n  UNKNOWN: -1,\r\n  FIREFOX: 1,\r\n  CHROME: 2,\r\n  EDGE: 3\r\n};\r\n\r\n/**\r\n * The default settings for extension. These settings are overrided at build time\r\n */\r\nexport const BuildSettings = {\r\n  /* eslint-disable no-undef */\r\n  BROWSER_TYPE: WEBPACK_BROWSER_TYPE,\r\n  DEBUG_MODE: WEBPACK_DEBUG_MODE,\r\n  EXTENSION_VERSION: WEBPACK_EXTN_VERSION,\r\n  LOG_LEVEL: WEBPACK_LOG_LEVEL,\r\n  ENGINES_VERSION: WEBPACK_ENGINES_VERSION,\r\n  YEAR: WEBPACK_YEAR,\r\n  /* eslint-enable no-undef */\r\n};\r\n\r\n/**\r\n * Values to let the native know which Block Page type was shown\r\n */\r\nexport const WPSBlockPageType = {\r\n  Red: 1,\r\n  Yellow: 2,\r\n  Phishing: 3,\r\n  Typoquatting: 4,\r\n  iFrame: 5,\r\n  Crypto: 6,\r\n};\r\n\r\n/**\r\n * Every possible color status shown on WebAdvisor\r\n */\r\nexport const Color = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  DISABLED: 5,\r\n};\r\n\r\n/**\r\n * The different commands that can be executed in the application\r\n */\r\nexport const ExecuteCommands = {\r\n  RAISE_NEW_TAB_EVENT: 3,\r\n  UPDATE_CACHE_STATS: 4 // deprecated.\r\n};\r\n\r\n/**\r\n * The corresponding color values for browser action icon\r\n */\r\nexport const BrowseActionColors = {\r\n  [Color.GREEN]: 'GREEN',\r\n  [Color.YELLOW]: 'YELLOW',\r\n  [Color.RED]: 'RED',\r\n  [Color.UNKNOWN]: 'WHITE',\r\n  [Color.DISABLED]: 'DISABLED',\r\n};\r\n\r\n/**\r\n * The score value ranges that determine the outcome of a webpage's safety\r\n */\r\nexport const Score = {\r\n  CLEAN: 70, // Green\r\n  UNVERIFIED: 30, // Yellow\r\n  DIRTY: 1, // Red\r\n}; // Default Grey (0)\r\n\r\n/**\r\n * Constructs a new object with the object key and values swapped.\r\n * @param   {Object} original - The original object to swap the key and values\r\n * @returns {Object} - The new constructed object with the key and values swapped\r\n */\r\nexport const swapObjectPropertyAndValues = (original) =>\r\n{\r\n  const swapped = {};\r\n\r\n  Object.keys(original).forEach((prop) =>\r\n  {\r\n    swapped[original[prop]] = prop;\r\n  });\r\n\r\n  return swapped;\r\n};\r\n\r\nexport const SEARCH_EXTENSION_DOWNLOAD_URLS = {\r\n  FF: 'https://sadownload.mcafee.com/products/SA/Win/xpi/searchextension/searchextension.xpi',\r\n};\r\n\r\nexport const SEARCH_EXTENSION_STORE_URLS = {\r\n  CH: 'https://chrome.google.com/webstore/detail/mcafee%C2%AE-secure-search/enppghjcblldgigemljohkgpcompnjgh',\r\n  ED: 'https://microsoftedge.microsoft.com/addons/detail/dbghilognjpbmkdcpjgodiieiflmlaeb'\r\n};\r\n\r\n// generate a range of numbers for using in WhitelistedKeys' codes\r\nexport const KEY_CODES_RANGE = (start, end) => Array.from(Array(end + 1).keys()).slice(start);\r\n\r\nexport const SEARCH_URL = {\r\n  YAHOO: 'https://search.yahoo.com/search?fr=mcafee&type=C040US0D19700101&p=',\r\n  BING: 'https://www.bing.com/search?partnercode=MC99&q=',\r\n};\r\n","export const SocialMediaTypes = {\r\n  NONE: 0,\r\n  LINKEDIN: 1,\r\n  INSTAGRAM: 2,\r\n  YOUTUBE: 4,\r\n  FACEBOOK: 8,\r\n  TWITTER: 16,\r\n  REDDIT: 32\r\n};\r\n\r\n// Sum of all Social Media Types\r\nexport const SocialMediaAllTypes = Object.values(SocialMediaTypes).reduce((sum, value) => sum + value);\r\n\r\nexport const SocialMediaActions = {\r\n  TOGGLE_ON: 'TOGGLE_ON',\r\n  TOGGLE_OFF: 'TOGGLE_OFF',\r\n  ANNOTATION_ENABLE_ALL: 'ANNOTATION_ENABLE_ALL',\r\n  ANNOTATION_DISABLE_ALL: 'ANNOTATION_DISABLE_ALL',\r\n  ANNOTATION_ENABLE: 'ANNOTATION_ENABLE',\r\n  ANNOTATION_DISABLE: 'ANNOTATION_DISABLE',\r\n  GET: 'GET',\r\n};\r\n","export const SearchAnnotationActions = {\r\n  GET: 'GET',\r\n  SET: 'SET',\r\n};\r\n\r\nexport const AnnotationOptions = {\r\n  NONE: 'NONE',\r\n  ONLY_SECURE_SEARCH: 'ONLY_SECURE_SEARCH',\r\n  ALL: 'ALL',\r\n  * [Symbol.iterator]() // Override the iterable protocol to allow spreading of keys (...AnnotationOptions)\r\n  {\r\n    for (const key of Object.keys(this))\r\n    {\r\n      yield key;\r\n    }\r\n  }\r\n};\r\n\r\n// DO NOT CHANGE the number for the search engine types\r\n// Some of these numbers are mapped to native's search providers\r\nexport const SearchEngineTypes = {\r\n  UNKNOWN: 0,\r\n  // Search engine annotations\r\n  GOOGLE: 1,\r\n  YAHOO: 2,\r\n  AOL: 3,\r\n  ASK: 4,\r\n  UOL: 5,\r\n  GOO: 6,\r\n  MYWAY: 7,\r\n  TERRA: 8,\r\n  WEB: 9,\r\n  BIGLOBE: 10,\r\n  GMX: 11,\r\n  EXCITE: 12,\r\n  SKY: 13,\r\n  NAVER: 14,\r\n  NIFTY: 15,\r\n  RAKUTEN: 16,\r\n  IXQUICK: 17,\r\n  XFINITY: 18,\r\n  SOGOU: 19,\r\n  DOGPILE: 20,\r\n  SEARCH: 21,\r\n  WEBCRAWLER: 22,\r\n  BING: 23,\r\n  INFO: 24,\r\n  YANDEX: 25,\r\n  YIPPY: 26, // No longer supported\r\n  WOW: 27,\r\n  HAOSO: 28,\r\n  DUCKDUCKGO: 30,\r\n  ONESEARCH: 31,\r\n  // Social media annotations\r\n  LINKEDIN: 100,\r\n  FACEBOOK: 101,\r\n  YOUTUBE: 102,\r\n  INSTAGRAM: 103,\r\n  REDDIT: 104,\r\n  TWITTER: 105,\r\n};\r\n\r\nexport const EngineType = {\r\n  SEARCH: 0,\r\n  SOCIALMEDIA: 1,\r\n};\r\n","export const extension = WEBPACK_BROWSER_NAME === 'chrome' || WEBPACK_BROWSER_NAME === 'edge' ? chrome : browser; // eslint-disable-line no-undef\r\n","/**\r\n * The command ids supported for IPC between content process and chrome/background process.\r\n */\r\n\r\nexport const BackgroundCommands = {\r\n  // Generic Commands\r\n  CACHE_STORE: 'CACHE_STORE',\r\n  CONTENT_HANDLER: 'CONTENT_HANDLER',\r\n  EXECUTE_COMMAND: 'EXECUTE_COMMAND',\r\n  FOCUS_OR_CREATE_TAB: 'FOCUS_OR_CREATE_TAB',\r\n  GET_BK_GLOBALS: 'GET_BK_GLOBALS',\r\n  GET_EXTENSION_STATUS: 'GET_EXTENSION_STATUS',\r\n  GET_TAB_DATA: 'GET_TAB_DATA',\r\n  TI_REQUEST: 'TI_REQUEST',\r\n  INSTALL_EXTENSION: 'INSTALL_EXTENSION',\r\n  PLACEHOLDER_TEXT: 'PLACEHOLDER_TEXT',\r\n  REMOVE_TAB: 'REMOVE_TAB',\r\n  SEND_TELEMETRY: 'SEND_TELEMETRY',\r\n  SET_VIEWPORT: 'SET_VIEWPORT',\r\n  WHITELIST: 'WHITELIST',\r\n  RESET_NATIVE_SETTING: 'RESET_NATIVE_SETTING',\r\n  UPDATE_BK_NATIVE_SETTINGS: 'UPDATE_BK_NATIVE_SETTINGS',\r\n\r\n  // Options Menu / Settings Page\r\n  SHOW_SIDEBAR_MAIN: 'SHOW_SIDEBAR_MAIN',\r\n  GET_POPUP_DATA: 'GET_POPUP_DATA',\r\n  GET_SETTINGS_DATA: 'GET_SETTINGS_DATA',\r\n  RESET_SETTINGS: 'RESET_SETTINGS',\r\n\r\n  // Autoplay video\r\n  AUTO_RUN_VIDEO_SITE: 'AUTO_RUN_VIDEO_SITE',\r\n  GET_CLICK_EVENT_TIME: 'GET_CLICK_EVENT_TIME',\r\n  SAVE_CLICK_EVENT_TIME: 'SAVE_CLICK_EVENT_TIME',\r\n\r\n  // Typosquatting\r\n  GET_TYPOSQUATTING_DATA: 'GET_TYPOSQUATTING_DATA',\r\n\r\n  // Block Page / Iframe / Site Report\r\n  IS_FRAME_BLOCKED: 'IS_FRAME_BLOCKED',\r\n  IS_WHITELISTED: 'IS_WHITELISTED',\r\n  ANY_BLOCKED_IFRAMES: 'ANY_BLOCKED_IFRAMES',\r\n  ANY_BLOCKED_CRYPTOSCRIPTS: 'ANY_BLOCKED_CRYPTOSCRIPTS',\r\n  UNBLOCK_ALL_IFRAMES: 'UNBLOCK_ALL_IFRAMES',\r\n  VIEW_SITE_REPORT: 'VIEW_SITE_REPORT',\r\n\r\n  // Annotations\r\n  SEARCH_ANNOTATION: 'SEARCH_ANNOTATION',\r\n  UPDATE_ENGINE_STATS: 'UPDATE_ENGINE_STATS',\r\n\r\n  // SMA\r\n  SOCIAL_MEDIA_ANNOTATION: 'SOCIAL_MEDIA_ANNOTATION',\r\n\r\n  // RAT Detection\r\n  UPDATE_RAT_DETECTION_SHOWING_FLAG: 'UPDATE_RAT_DETECTION_SHOWING_FLAG',\r\n\r\n  // Search Suggestion\r\n  SEARCH_SUGGEST: 'SEARCH_SUGGEST',\r\n\r\n  // Form detection\r\n  SAVE_FORM_INFO: 'SAVE_FORM_INFO',\r\n  GET_FORM_INFO_CACHE: 'GET_FORM_INFO_CACHE',\r\n  CLEAR_FORM_INFO_CACHE: 'CLEAR_FORM_INFO_CACHE',\r\n  SAVE_MULTISTEP_LOGIN: 'SAVE_MULTISTEP_LOGIN',\r\n  GET_FD_WEIGHTS: 'GET_FD_WEIGHTS',\r\n  GET_FD_EXCEPTIONS: 'GET_FD_EXCEPTIONS',\r\n  GET_FD_CRF_PARAMS: 'GET_FD_CRF_PARAMS',\r\n\r\n  // DWS\r\n  CLEAR_CACHED_DWS_INFO: 'CLEAR_DWS_INFO',\r\n  GET_CACHED_DWS_INFO: 'GET_CACHED_DWS_INFO',\r\n  UPDATE_DWS_WHITELIST: 'UPDATE_DWS_WHITELIST',\r\n  LAUNCH_IDPS_LOGIN: 'LAUNCH_IDPS_LOGIN',\r\n  UPDATE_DWS_SHOWN: 'UPDATE_DWS_SHOWN',\r\n\r\n  // APS\r\n  GET_APS_DETAILS: 'GET_APS_DETAILS',\r\n  FORM_PRE_CHECK_PASSED: 'FORM_PRE_CHECK_PASSED',\r\n  SIGN_UP_FORM_DETECTED: 'SIGN_UP_FORM_DETECTED',\r\n\r\n  // Firefox Policy Consent\r\n  SET_FF_POLICY_COLLECTION: 'SET_FF_POLICY_COLLECTION',\r\n  SET_FF_POLICY_LAST_SHOWN: 'SET_FF_POLICY_LAST_SHOWN',\r\n};\r\n\r\nexport const ContentCommands = {\r\n  // Commands handled by iframes\r\n  UNBLOCK_IFRAME: 'UNBLOCK_IFRAME',\r\n\r\n  // Content UI Handler Commands\r\n  BALLOON_MESSAGE: 'BALLOON_MESSAGE',\r\n  PAGE_OVERLAY: 'PAGE_OVERLAY',\r\n  SIDEBAR: 'SIDEBAR',\r\n  TOPBAR: 'TOPBAR',\r\n\r\n  // Ping\r\n  PING_CONTENT_ANNOTATION: 'PING_CONTENT_ANNOTATION',\r\n  PING_CONTENT_RAT_DETECTION: 'PING_CONTENT_RAT_DETECTION',\r\n  PING_CONTENT_IFRAME_BANNER: 'PING_CONTENT_IFRAME_BANNER',\r\n  PING_CONTENT_AUTOPLAY_DETECTION: 'PING_CONTENT_AUTOPLAY_DETECTION',\r\n  PING_CONTENT_SIDEBAR_MAIN: 'PING_CONTENT_SIDEBAR_MAIN',\r\n  PING_CONTENT_FF_DL_OVERLAY: 'PING_CONTENT_FF_DL_OVERLAY',\r\n  PING_CONTENT_CRYPTO_BLOCK: 'PING_CONTENT_CRYPTO_BLOCK',\r\n  PING_CONTENT_FF_VIEWPORTS: 'PING_CONTENT_FF_VIEWPORTS',\r\n  PING_CONTENT_IDPS: 'PING_CONTENT_IDPS',\r\n  PING_CONTENT_APS_TOAST: 'PING_CONTENT_APS_TOAST',\r\n  PING_CONTENT_APS_BALLOON: 'PING_CONTENT_APS_BALLOON',\r\n  PING_CONTENT_APS_OBSERVER: 'PING_CONTENT_APS_OBSERVER',\r\n  PING_CONTENT_SITE_LISTENER: 'PING_CONTENT_SITE_LISTENER',\r\n  PING_IFRAME_FORM_CHECK: 'PING_IFRAME_FORM_CHECK',\r\n  PING_IFRAME_FORM_DETECTION: 'PING_IFRAME_FORM_DETECTION',\r\n  PING_IFRAME_BLOCK: 'PING_IFRAME_BLOCK',\r\n\r\n  // APS\r\n  APS_REGISTRATION_PAGE: 'APS_REGISTRATION_PAGE',\r\n\r\n  // Broadcast to foreground\r\n  BROADCAST_TO_FOREGROUND: 'BROADCAST_TO_FOREGROUND',\r\n\r\n  // Annotation Journey Toast\r\n  TRIGGER_AJ_TOAST: 'TRIGGER_AJ_TOAST'\r\n};\r\n\r\n// **********************************************\r\n// SUB-COMMANDS USED BY CONTENT HANDLER COMMANDS:\r\n// **********************************************\r\n\r\nexport const SideBarCommands = {\r\n  MAIN: 'MAIN',\r\n  RELOAD: 'RELOAD',\r\n  SMA: 'SMA',\r\n  RAT_DETECTION: 'RAT_DETECTION',\r\n};\r\n\r\nexport const BalloonMessageCommands = {\r\n  ADVANCED_PROTECTION_SIGNAL: 'ADVANCED_PROTECTION_SIGNAL',\r\n  ADVANCED_PROTECTION_SIGNAL_TOAST: 'ADVANCED_PROTECTION_SIGNAL_TOAST',\r\n  DWS: 'DWS',\r\n};\r\n\r\nexport const TopBarCommands = {\r\n  CRYPTO_BLOCK: 'CRYPTO_BLOCK',\r\n  IFRAME_BLOCK: 'IFRAME_BLOCK',\r\n  TRIGGER_ALLOW: 'TRIGGER_ALLOW',\r\n};\r\n\r\nexport const PageOverlayCommands = {\r\n  SEARCH_EXTENSION_OVERLAY: 'SEARCH_EXTENSION_OVERLAY',\r\n  FINISH_DOWNLOAD: 'FINISH_DOWNLOAD',\r\n};\r\n\r\nexport const ExternalCommands = {\r\n  // Legacy\r\n  PING: 0,\r\n  DISCONNECT_NATIVE: 1,\r\n  SET_PROPERTY_EX: 2, //  For automation\r\n  SET_PROPERTY: 3, // For automation\r\n  GET_PROPERTY: 4, // For automation\r\n  CLEAR_GTI_CACHE: 5, // For automation\r\n  RESET_CRYPTO: 6, // For automation\r\n  CLEAN_TYPOSQUATING_WHITELIST: 7, // For automation\r\n  CLEAR_TYPOSQUATING_CACHE: 8, // For automation\r\n  CLEAN_CRYPTO_WHITELIST: 10, // For automation\r\n  CLEAN_RAT_WHITELIST: 12, // For automation\r\n  CLEAN_RAT_CACHE: 13, // For automation\r\n  REPLACE_TRUSTED_DOMAIN: 15, // For automation\r\n  VERIFY_GTI_REQUEST: 17, // For automation\r\n  VERIFY_TYPOSQUAT_SERVER: 18, // For watchdog automation\r\n  GET_ALL_WA_SETTINGS: 19, // For automation extension\r\n  SET_STORAGE_PROPERTY: 20, // Set a local storage property within WA\r\n  GET_STORAGE_PROPERTY: 21, // Get a local storage property within WA (for automation)\r\n  REINIT_SCHEDULED_TASKS: 22,\r\n  OPEN_SETTINGS: 23, // For personal protection hub\r\n  OPEN_ACTION_PANEL: 24, // For personal protection hub\r\n  GET_MEMORY_FOOTPRINT: 26, // For automation, endurance run\r\n  ENDURANCE_TEST_RESET: 27, // For automation, endurance run\r\n  FORM_DETECTION_RESULT: 28,\r\n  SHOW_UNUSED_SELECTORS: 29, // For automation\r\n  SET_MTI_GLOBALS: 30\r\n};\r\n\r\nexport const ExternalResponse = {\r\n  PONG: 0,\r\n};\r\n","import { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\n\r\nconst { NONE, ...NonZeroSocialMediaTypes } = SocialMediaTypes;\r\n\r\nexport const CacheStoreActions = {\r\n  SET: 'SET',\r\n  GET: 'GET',\r\n  CLEAR: 'CLEAR',\r\n};\r\n\r\n// All keys must be same as value\r\n// Stored in browser storage\r\nexport const LocalStorageVariables = {\r\n  // Number of times the first variant of yellow block page sidebar has been shown\r\n  BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Did user accept SS in the past\r\n  // Sidebar Action Panels related\r\n  BLOCK_PAGE_RED_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_RED_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Whitelist related\r\n  BLOCK_PAGE_WHITELIST: {\r\n    name: 'BLOCK_PAGE_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Number of times the first variant of red block page sidebar has been shown\r\n  BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // blockpage whitelisted sites\r\n  CRYPTO_WHITELIST: {\r\n    name: 'CRYPTO_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Telemetry related\r\n  ENGINE_DOWNLOAD_TASK: {\r\n    name: 'ENGINE_DOWNLOAD_TASK',\r\n    type: 'object'\r\n  },\r\n  // Engine JSON\r\n  ENGINES: {\r\n    name: 'ENGINES',\r\n    type: 'object'\r\n  },\r\n  ENGINES_FUTURE_TIME: { // TODO: Might not need - not being used\r\n    name: 'ENGINES_FUTURE_TIME',\r\n    type: 'object'\r\n  },\r\n  ENGINES_VERSION: {\r\n    name: 'ENGINES_VERSION',\r\n    type: 'string'\r\n  },\r\n  EXTENSION_LOGGING: {\r\n    name: 'EXTENSION_LOGGING',\r\n    options: [0, 1, 2, 3, 4],\r\n    type: 'number'\r\n  },\r\n  USE_NATIVE_LOGGER: {\r\n    name: 'USE_NATIVE_LOGGER',\r\n    type: 'boolean'\r\n  },\r\n  EXTN_UUID2: {\r\n    name: 'EXTN_UUID2',\r\n    type: 'string'\r\n  },\r\n\r\n  IFRAME_BLOCK_FIRST_TIME: {\r\n    name: 'IFRAME_BLOCK_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  LAST_HEARTBEAT_SENT: { // TODO: Might not need - not being used\r\n    name: 'LAST_HEARTBEAT_SENT',\r\n    type: 'object'\r\n  },\r\n  POPUP_STATS: {\r\n    name: 'POPUP_STATS',\r\n    type: 'object'\r\n  },\r\n  POST_INSTALLATION_PAGE_SHOWED: { // TODO: Might not need - not being used\r\n    name: 'POST_INSTALLATION_PAGE_SHOWED',\r\n    type: 'object'\r\n  },\r\n  RAT_DETECTION_WHITELIST: {\r\n    name: 'RAT_DETECTION_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  SEARCH_ANNOTATION_OPTION: {\r\n    name: 'SEARCH_ANNOTATION_OPTION',\r\n    options: [...AnnotationOptions],\r\n    type: 'string'\r\n  },\r\n  // Used as a flag to show SMA Notification for the first time only\r\n  SMA_ANNOTATION_OPTIONS: {\r\n    name: 'SMA_ANNOTATION_OPTIONS',\r\n    options: { ...NonZeroSocialMediaTypes }, // Objects signify checkboxes\r\n    type: 'number'\r\n  },\r\n  // SMA options the user has selected\r\n  SMA_USER_TOGGLE: {\r\n    name: 'SMA_USER_TOGGLE',\r\n    type: 'boolean'\r\n  },\r\n  TELEMETRY_HEARTBEAT_TASK: { // TODO: Complete definition\r\n    name: 'TELEMETRY_HEARTBEAT_TASK',\r\n    type: 'object'\r\n  },\r\n  TYPOSQUATTING_WHITELIST: {\r\n    name: 'TYPOSQUATTING_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  CACHE_TYPOSQUATTING: {\r\n    name: 'CACHE_TYPOSQUATTING',\r\n    type: 'object'\r\n  },\r\n  CACHE_GTI: {\r\n    name: 'CACHE_GTI',\r\n    type: 'object'\r\n  },\r\n  CACHE_TAB_DATA: {\r\n    name: 'CACHE_TAB_DATA',\r\n    type: 'object'\r\n  },\r\n  // Flag to indicate whether to retrieve block page whitelist from native\r\n  USER_NATIVE_STATS: {\r\n    name: 'USER_NATIVE_STATS',\r\n    type: 'boolean'\r\n  },\r\n  // stats for what we have done for the user - shown on popup\r\n  WHITELIST_FLAG: {\r\n    name: 'WHITELIST_FLAG',\r\n    type: 'boolean'\r\n  },\r\n  // DWS Info\r\n  DWS_INFO: {\r\n    name: 'DWS_INFO',\r\n    type: 'object'\r\n  },\r\n  // list of emails already monitored or whitelisted by the user.\r\n  DWS_WHITELIST: {\r\n    name: 'DWS_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  DWS_UNIQUE_EMAILS: {\r\n    name: 'DWS_UNIQUE_EMAILS',\r\n    type: 'array'\r\n  },\r\n  APS_TOAST_FIRST_TIME: {\r\n    name: 'APS_TOAST_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  APS_FULL_MSG_SHOWN_ARRAY: {\r\n    name: 'APS_FULL_MSG_SHOWN_ARRAY',\r\n    type: 'array'\r\n  },\r\n  // Firefox user policy consent\r\n  FF_POLICY_PERSONAL_COLLECTION: {\r\n    name: 'FF_POLICY_PERSONAL_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_ACTIVITY_COLLECTION: {\r\n    name: 'FF_POLICY_ACTIVITY_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_LAST_SHOWN: {\r\n    name: 'FF_POLICY_LAST_SHOWN',\r\n    type: 'number'\r\n  },\r\n  // WA Affid\r\n  WA_AFFID: {\r\n    name: 'WA_AFFID',\r\n    type: 'number'\r\n  },\r\n  // APS TOGGLE SETTING\r\n  APS_TOGGLE_SETTING: {\r\n    name: 'APS_TOGGLE_SETTING',\r\n    type: 'boolean'\r\n  },\r\n  // ANNOTATION JOURNEY TOAST\r\n  AJ_TOAST: {\r\n    name: 'AJ_TOAST',\r\n    type: 'boolean'\r\n  },\r\n  AJ_APS_ENABLE: {\r\n    name: 'AJ_APS_ENABLE',\r\n    type: 'number'\r\n  },\r\n\r\n  HTI_THROTTLE: {\r\n    name: 'HTI_THROTTLE',\r\n    type: 'number'\r\n  },\r\n\r\n  IS_HTI: {\r\n    name: 'IS_HTI',\r\n    type: 'boolean'\r\n  },\r\n};\r\n\r\n// In memory only, not in browser storage, reset upon browser restart\r\nexport const CacheStorageVariables = {\r\n  // RAT Detection related:\r\n  RAT_DETECTION_SHOWING: {\r\n    name: 'RAT_DETECTION_SHOWING',\r\n    type: 'object'\r\n  },\r\n  // Form detection\r\n  FORM_INFO: {\r\n    name: 'FORM_INFO',\r\n    type: 'object'\r\n  },\r\n  SAVE_MULTI_STEP_LOGIN: {\r\n    name: 'SAVE_MULTI_STEP_LOGIN',\r\n    type: 'object'\r\n  },\r\n  APS_EMAIL_LINKS: {\r\n    name: 'APS_EMAIL_LINKS',\r\n    type: 'array'\r\n  },\r\n  WSS_EMAIL: {\r\n    name: 'WSS_EMAIL',\r\n    type: 'string'\r\n  }\r\n};\r\n","import { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n\r\n/**\r\n * Tab data class and it's helper functions\r\n */\r\nexport default class TabData\r\n{\r\n  // Values that will get reset everytime we nativagate to a new page\r\n  static getResetValues()\r\n  {\r\n    return { blockedIframes: [], cryptoBlockData: null, tabDomainTrusted: false };\r\n  }\r\n\r\n  static getDefaultValues()\r\n  {\r\n    return TabData.getResetValues();\r\n  }\r\n\r\n  reset(tabId)\r\n  {\r\n    this.update(tabId, TabData.getResetValues());\r\n  }\r\n\r\n  get(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    return cache[tabId] || TabData.getDefaultValues();\r\n  }\r\n\r\n  set(tabId, newTabData)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    cache[tabId] = newTabData;\r\n    BackgroundGlobals.cacheStore.set(LocalStorageVariables.CACHE_TAB_DATA.name, cache);\r\n  }\r\n\r\n  delete(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    delete (cache[tabId]);\r\n  }\r\n\r\n  update(tabId, newTabData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, ...newTabData });\r\n  }\r\n\r\n  setTabBlockPageData(tabId, blockPageData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, blockPageData });\r\n  }\r\n\r\n  addBlockedFrame(tabId, value)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes.push(value);\r\n  }\r\n\r\n  getBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    return currentTabData.blockedIframes;\r\n  }\r\n\r\n  resetBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes = [];\r\n  }\r\n}\r\n","export const BackgroundConstants = {\r\n  MAX_CACHE_RECORDS: 1000,\r\n  MAX_RESERVED_CALLBACK_ID: 5,\r\n  PHISHING_CATEGORY: 'ph',\r\n  SITE_ADVISOR_URL: 'www.siteadvisor.com/',\r\n  GTI_SERVER: 'https://webadvisorc.rest.gti.mcafee.com/1',\r\n  TYPOSQUATTING_SERVER: 'https://mip.api.mcafeewebadvisor.com/v1/typosquatting?',\r\n  ENGINE_VERSION_URL: 'https://sadownload.mcafee.com/products/SA/Win/extensions/engines/update.json',\r\n  HTI_SERVER: 'https://threat.api.mcafee.com/',\r\n};\r\n\r\n// Add 'watlab1.mcafee.int' to the list for testing.\r\nexport const TrustedDomains = new Set([\r\n  'www.mcafee.com',\r\n]);\r\n\r\nexport const CryptoBlacklist = [\r\n  'wss://*.gasolina.ml/*',\r\n  '*://kissdoujin.com/Content/js/c-hive.js*',\r\n  'wss://*.sen-to-zdrowie.ml/*',\r\n  '*://cookiescript.info/libs/*',\r\n  '*://rocks.io/assets/*',\r\n  '*://coin-have.com/c/*',\r\n  '*://coinnebula.com/lib/*',\r\n  'wss://*.coin-have.com/',\r\n  'ws://digger.cryptobara.com/*',\r\n  'ws://*.webminepool.tk/*',\r\n  '*://*.lewd.ninja/static/m.js*',\r\n  '*://tokyodrift.ga/dropyoulike/a-o/*',\r\n  '*://*.2giga.link/hive/lib/*',\r\n  '*://papoto.com/lib/*',\r\n  '*://load.jsecoin.com/*',\r\n  'ws://*.1q2w3.fun/*',\r\n  '*://*/*plugins/ajcryptominer/assets/*',\r\n  '*://monerominer.rocks/miner.php*',\r\n  '*://minemytraffic.com/*',\r\n  '*://*.monerise.com/core/*',\r\n  '*://*.cookiescript.info/libs/*',\r\n  'ws://hive.tubetitties.com/*',\r\n  'wss://*.freecontent.racing/*',\r\n  'wss://*.hodling.faith/*',\r\n  'ws://gtg02.bestsecurepractice.com/proxy',\r\n  '*://cryptoloot.pro/lib/*',\r\n  '*://lmodr.biz/*',\r\n  '*://*.webminepool.com/lib/base.js',\r\n  'ws://*.sen-to-zdrowie.ml/*',\r\n  'ws://*.morningdigit.com/*',\r\n  '*://mine.nahnoji.cz/*',\r\n  '*://*.minescripts.info/*',\r\n  '*://jsecoin.com/server*',\r\n  '*://coinhive.com/lib*',\r\n  'wss://*.webminepool.tk/*',\r\n  'ws://*.monerise.com/proxy/*',\r\n  '*://kisshentai.net/Content/js/c-hive.js*',\r\n  '*://mataharirama.xyz/*',\r\n  '*://*.coinpirate.cf/*',\r\n  'ws://*.playerassets.info/*',\r\n  'wss://*.1q2w3.fun/*',\r\n  '*://*.1q2w3.fun/*',\r\n  '*://anime.reactor.cc/js/ch/cryptonight.wasm*',\r\n  '*://webmine.cz/miner*',\r\n  'wss://ws.l33tsite.info/*',\r\n  '*://coinhive.com/captcha*',\r\n  'wss://www.mutuza.win/proxy',\r\n  '*://*.morningdigit.com/*',\r\n  'ws://*.host.d-ns.ga/*',\r\n  '*://*.doubleclick5.xyz/*',\r\n  '*://miner.pr0gramm.com/xmr.min.js*',\r\n  '*://*.freecontent.bid/*',\r\n  'ws://lewd.ninja/comics/*',\r\n  'wss://*.monerise.com:9333/proxy/*',\r\n  '*://*.webminepool.com/lib/captcha.js',\r\n  '*://coinerra.com/lib/*',\r\n  '*://*.playerassets.info/*',\r\n  'wss://*.webmine.pro/*',\r\n  'wss://lewd.ninja/comics/*',\r\n  '*://*.doubleclick1.xyz/*',\r\n  'ws://*.freecontent.racing/*',\r\n  '*://*.googleanalytcs.com/*',\r\n  'wss://*.coinnebula.com/proxy*',\r\n  'ws://*.monerise.com:9333/proxy/*',\r\n  'ws://*.freecontent.loan/*',\r\n  '*://party-nngvitbizn.now.sh/*',\r\n  'wss://api.l33tsite.info/*',\r\n  '*://coinlab.biz/lib/coinlab.js*',\r\n  'wss://*.monerise.com/proxy/*',\r\n  'ws://www.mutuza.win/proxy',\r\n  '*://jscdndel.com/content/vidm.min.js*',\r\n  '*://listat.biz/*',\r\n  '*://minecrunch.co/web/*',\r\n  'ws://*.chainblock.science/*',\r\n  '*://baiduccdn1.com/lib/*',\r\n  '*://*.mutuza.win/worker.js',\r\n  '*://*.load.jsecoin.com/*',\r\n  '*://ppoi.org/lib/*',\r\n  'wss://*.chainblock.science/*',\r\n  'wss://*.crypto-loot.com/proxy*',\r\n  'wss://gtg02.bestsecurepractice.com/proxy',\r\n  'wss://*.coinhive.com/proxy*',\r\n  '*://coin-hive.com/captcha*',\r\n  '*://jsccnn.com/content/vidm.min.js*',\r\n  '*://monerominer.rocks/scripts/miner.js*',\r\n  '*://*.jsecoin.com/server*',\r\n  '*://server.jsecoin.com/*',\r\n  'wss://*.coin-hive.com/proxy*',\r\n  '*://*.doubleclick4.xyz/*',\r\n  '*://miner.cryptobara.com/client/*',\r\n  '*://*.rocks.io/assets/*',\r\n  '*://*.ppoi.org/lib/*',\r\n  '*://you.tubetitties.com/worker.js*',\r\n  'wss://*.googleanalytcs.com/*',\r\n  'wss://hive.tubetitties.com/*',\r\n  '*://static.reasedoper.pw/*',\r\n  '*://*.ppoi.org/token/*',\r\n  'ws://*.webmine.pro/*',\r\n  '*://you.tubetitties.com/hash.wasm*',\r\n  '*://*.doubleclick3.xyz/*',\r\n  '*://*.turnsocial.com/m.js',\r\n  'ws://*.hodling.faith/*',\r\n  'wss://*.morningdigit.com/*',\r\n  '*://*.ad-miner.com/lib/*',\r\n  'wss://*.2giga.link/wproxy*',\r\n  'ws://*.googleanalytcs.com/*',\r\n  '*://*.doubleclick6.xyz/*',\r\n  'ws://turnsocial.now.sh/*',\r\n  '*://cdn.cloudcoins.co/javascript/cloudcoins.min.js*',\r\n  '*://joyreactor.cc/ws/ch/*',\r\n  '*://minero.pw/miner.min.js*',\r\n  '*://*.webmine.pro/*',\r\n  '*://punchsub.net/chm.js',\r\n  'wss://mine.nahnoji.cz/*',\r\n  'wss://mine.torrent.pw/*',\r\n  '*://*.mutuza.win/lib/*',\r\n  '*://*.kickass.cd/power2/m.js',\r\n  'ws://*.cpu2cash.link/*',\r\n  '*://*.server.jsecoin.com/*',\r\n  '*://*.mutuza.win/processor.js',\r\n  'wss://turnsocial.now.sh/*',\r\n  '*://kiwifarms.net/js/Jawsh/xmr/xmr.min.js*',\r\n  '*://*.rocks.io/proxy*',\r\n  '*://crypto-loot.com/lib*',\r\n  '*://*.chmproxy.bid/lib/*',\r\n  'ws://*.gasolina.ml/*',\r\n  '*://*.stackpathdns.com/assets/javascript/cr.js',\r\n  '*://*.coinblind.com/lib/*',\r\n  '*://miner.pr0gramm.com/pm.min.js*',\r\n  '*://*.bewhoyouare.gq/*',\r\n  'wss://*.zlx.com.br/proxy*',\r\n  '*://a-o.ninja/apk-AO/kingofthenorth/*',\r\n  '*://ad-miner.com/lib/*',\r\n  '*://*.webminepool.com/api/*',\r\n  '*://*.cpu2cash.link/*',\r\n  '*://*.hemnes.win/*',\r\n  'wss://*.cpu2cash.link/*',\r\n  'ws://*.coinpirate.cf/*',\r\n  'ws://ws.l33tsite.info/*',\r\n  '*://digger.cryptobara.com/client/*',\r\n  '*://kickass.cd/m.js*',\r\n  'ws://*.zlx.com.br/proxy*',\r\n  '*://*.doubleclick2.xyz/*',\r\n  '*://*.amazonaws.com/doubleclick13/*',\r\n  'wss://*.freecontent.loan/*',\r\n  '*://*.host.d-ns.ga/*',\r\n  '*://*.candid.zone/youtube.com/*',\r\n  'ws://api.l33tsite.info/*',\r\n  '*://gtg2.bestsecurepractice.com/lib/*',\r\n  'wss://*.host.d-ns.ga/*',\r\n  '*://coin-hive.com/lib*',\r\n  'ws://mine.nahnoji.cz/*',\r\n  'wss://*.playerassets.info/*',\r\n  '*://*.afminer.com/code/*',\r\n  'wss://*.coinpirate.cf/*',\r\n  '*://cookiescriptcdn.pro/libs/*',\r\n  '*://*.goredirect.party/assets/*',\r\n  '*://*.ZLX.COM.BR/assets/min.js*',\r\n  '*://*.ZLX.COM.BR/assets/playermon.js*',\r\n  '*://p.hemnes.win/lib/*',\r\n  '*://gtg02.bestsecurepractice.com/proxy2/*',\r\n  '*://gtg02.bestsecurepractice.com/meri.js',\r\n  '*://gtg02.bestsecurepractice.com/lv.js',\r\n  '*://gtg02.bestsecurepractice.com/worker.js',\r\n  '*://gtg02.bestsecurepractice.com/processor.js',\r\n  '*://gtg02.bestsecurepractice.com/demo.html',\r\n  '*://*.turnsocial.com/c.wasm*',\r\n  '*://*.turnsocial.com/m.js*',\r\n  '*://cdn.minescripts.info/c/*',\r\n  '*://tokyodrift.ga/dropyoulike/backup/c.wasm*',\r\n  '*://punchsub.net/chm2.js',\r\n  '*://*.kickass.cd/webmr4.js',\r\n  '*://*.kickass.cd/m.js',\r\n  'wss://*.authedmine.com/proxy'\r\n];\r\n\r\nexport const RatBlacklist = [\r\n  {\r\n    domain: 'www.beamyourscreen.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.connectwise.com',\r\n    urls: [\r\n      'www.connectwise.com/platform/unified-management/control'\r\n    ],\r\n  },\r\n  {\r\n    domain: 'get.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'fastsupport.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.join.me',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.de',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.securelink.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'join.zoho.com',\r\n    urls: [],\r\n  }\r\n];\r\n\r\nexport const ApsUrlList = {\r\n  shopping:\r\n  {\r\n    'www.amazon.com':\r\n    {\r\n      paths: ['buy/payselect/handlers', 'buy/addressselect/handlers']\r\n    }\r\n  },\r\n  email:\r\n  {\r\n    'mail.google.com/mail':\r\n    {\r\n      selector: 'table[role=presentation] > tr div[data-message-id] a'\r\n    },\r\n    'outlook.live.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office365.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'mail.yahoo.com':\r\n    {\r\n      selector: 'div[role=main] ul li a'\r\n    },\r\n  }\r\n};\r\n","import { BrowserType, BuildSettings } from '@extension/common/constants';\r\n\r\nclass NativeSettingsPreprocess\r\n{\r\n  static PreprocessSecureSearchRegEx(value)\r\n  {\r\n    return value.trim().split('\\n');\r\n  }\r\n\r\n  static getBrowserSuffix()\r\n  {\r\n    const BROWSER_SUFFIX = {\r\n      CH: '_ch',\r\n      FF: '_ff',\r\n      IE: '_ie',\r\n      EDGE: '_ed',\r\n    };\r\n\r\n    const { CH, FF, EDGE } = BROWSER_SUFFIX;\r\n    const suffixBrowserMap = {};\r\n    suffixBrowserMap[BrowserType.EDGE] = EDGE;\r\n    suffixBrowserMap[BrowserType.FIREFOX] = FF;\r\n    suffixBrowserMap[BrowserType.CHROME] = CH;\r\n\r\n    return suffixBrowserMap[BuildSettings.BROWSER_TYPE];\r\n  }\r\n}\r\n\r\nexport const SCOPE = {\r\n  SYSTEM: 0,\r\n  USER: 1,\r\n};\r\nconst { SYSTEM, USER } = SCOPE;\r\n\r\nexport const SETTINGS_TYPE = {\r\n  NONE: 0,\r\n  INT: 1,\r\n  INT64: 2,\r\n  BOOL: 3,\r\n  STRING: 4,\r\n};\r\n\r\nexport const NativeConstants = {\r\n  WEBBOOST_AUTO_PLAY_NOTIFICATION: 'AutoPlayNotificationRequired',\r\n  WEBBOOST_UPSELL_DISABLED: 'WBUpsellDisabled', // TODO: re-introduce for WB Upsell\r\n  USE_NATIVE_LOGGER: 'UseNativeLogger',\r\n};\r\n\r\n// For retrieving native settings just change the one json object below. Access the nativeSettings value as eg BkGlobals.nativeSettings.AFF_ID.value\r\nconst _browser = NativeSettingsPreprocess.getBrowserSuffix();\r\nexport const NativeSettings = {\r\n  // Dev\r\n  DEV_MODE: { scope: SYSTEM, name: 'dev_mode', value: false },\r\n\r\n  // Product\r\n  AFF_ID: { scope: SYSTEM, name: '*Affid', value: 0 },\r\n  BINARY_VERSION: { scope: SYSTEM, name: 'version', value: null },\r\n  EXTENSION_VERSION_CH: { scope: SYSTEM, name: 'ChromeExtVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_FF: { scope: SYSTEM, name: '*FirefoxXPIVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_ED: { scope: SYSTEM, name: 'EdgeExtVersion', value: '', writeOnly: true },\r\n\r\n  // Machine\r\n  BROWSER_TYPE: { scope: SYSTEM, name: 'browsertype', value: '', writeOnly: true },\r\n  USER_AGENT: { scope: SYSTEM, name: 'useragent', value: '', writeOnly: true },\r\n\r\n  // Secure Search\r\n  SUGGESTION_URL: { scope: SYSTEM, name: 'suggestion_url', value: '' },\r\n  SCRIPT_GENERATED_DEFAULT_SS_URL: { scope: USER, name: `SCRIPT_GENERATED_DEFAULT_SS_URL${_browser}`, value: '' },\r\n  SECURE_SEARCH_REGEXES: { scope: USER, name: 'SECURE_SEARCH_REGEXES', value: '', preprocess: NativeSettingsPreprocess.PreprocessSecureSearchRegEx },\r\n  SHOW_SEARCH_SETTINGS: { scope: SYSTEM, name: '*ShowSearchSettings', value: true },\r\n  SECURE_SEARCH_TOAST_STAMP: { scope: USER, name: `*SSDateStampShowedToast${_browser}`, value: 0 },\r\n  SECURE_SEARCH_ANNOTATION_ONLY: { scope: SYSTEM, name: '*OnlyShowAnnotationsOnSecureSearch', value: true },\r\n  SECURE_SEARCH_SHOW_ICONS: { scope: USER, name: '*Icons', value: true },\r\n  SECURE_SEARCH_CHOICE: { scope: USER, name: `*SSToastChoice${_browser}`, value: false },\r\n  SS_DEF: { scope: SYSTEM, name: `*SS_DEF${_browser}`, value: 0 },\r\n  ANNOTATIONS_CHOICE_EXPLICIT: { scope: SYSTEM, name: `*AnnotationsChoiceExplicit${_browser}`, value: false },\r\n  CURRENT_SAO_IN_EXTENSION: { scope: USER, name: `*CurrentSAOInExtension${_browser}`, value: '' },\r\n\r\n  // Firefox Toast\r\n  FF_EXTENSION_LAST_TOAST_TIME: { scope: USER, name: 'ff_extension_last_toast_time', value: 0, writeOnly: true },\r\n  FF_EXTENSION_TOAST_COUNT: { scope: USER, name: 'ff_extension_toast_count', value: 0, writeOnly: true },\r\n\r\n  // Checklist Settings\r\n  CHECKLIST_START_INGORE_DATE_AV: { scope: SYSTEM, name: 'startIgnoreDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_START_IGNORE_DATE_FW: { scope: SYSTEM, name: 'startIgnoreDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_IGNORE_DURACTION: { scope: SYSTEM, name: 'ignoreDuration', value: '14', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_AV: { scope: SYSTEM, name: 'fixGracePeriodStartDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_FW: { scope: SYSTEM, name: 'fixGracePeriodStartDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_DURATION: { scope: SYSTEM, name: 'fixGracePeriodDuration', value: '24', writeOnly: true },\r\n\r\n  // Crypto\r\n  CRYPTOJACKING_DISABLED: { scope: SYSTEM, name: 'CryptojackingDisabled', value: false },\r\n\r\n  // SMA\r\n  SMA_USER_TOGGLE: { scope: SYSTEM, name: `sma_user_toggle${_browser}`, value: false, writeOnly: true },\r\n  SMA_ANNOTATION_OPTIONS: { scope: SYSTEM, name: `sma_annotation_options${_browser}`, value: 0, writeOnly: true },\r\n\r\n  // Stats\r\n  PAGES_SCANNED: { scope: SYSTEM, name: '*CounterPagesScanned', value: 0 },\r\n  PAGES_BLOCKED: { scope: SYSTEM, name: '*CounterPagesBlocked', value: 0 },\r\n  DOWNLOADS_SCANNED: { scope: SYSTEM, name: '*CounterDownloadsScanned', value: 0 },\r\n  DOWNLOADS_BLOCKED: { scope: SYSTEM, name: '*CounterDownloadsBlocked', value: 0 },\r\n  CRYPTO_BLOCKED: { scope: SYSTEM, name: '*CounterCryptoJackingBlocked', value: 0 },\r\n\r\n  // Native Whitelist\r\n  BLOCKPAGE_WHITELIST: { scope: USER, name: '*WhiteList', value: '' },\r\n  TS_WHITELIST: { scope: USER, name: '*TListWhiteList', value: '' },\r\n\r\n  // GTI\r\n  CSP_ID_SETTING: { scope: SYSTEM, name: 'CSPIdValue', value: '__not_available__' },\r\n\r\n  // Uninstall URL\r\n  UNINSTALL_SURVEY_ENABLED: { scope: SYSTEM, name: 'uninstall_survey_enabled', value: false },\r\n  UNINSTALL_SURVEY_URL: { scope: SYSTEM, name: 'uninstall_survey_url', value: '' },\r\n\r\n  // RAT Detection\r\n  RAT_DETECTION_ENABLED: { scope: SYSTEM, name: 'rat_detection_enabled', value: true },\r\n\r\n  // IDPS - enum type (0 = feature turned off | 1 = feature partially on, only for sending telemetry | 2 = feature turned on completely)\r\n  IDPS_FEATURE_ENABLED: { scope: SYSTEM, name: 'idps_feature_enabled', value: 0 },\r\n\r\n  // Advanced Protection Signal\r\n  APS_COHORT: { scope: SYSTEM, name: 'aps_cohort', value: 0 },\r\n  APS_TOGGLE_SETTING: { scope: SYSTEM, name: 'aps_toggle_setting', value: true },\r\n\r\n  // Alternative triggers\r\n  ALT_TRIGGER: { scope: SYSTEM, name: 'alt_triggers_cohort', value: 0 },\r\n\r\n  // Form detection optimization feature\r\n  IFRAME_FORM_CHECK_ENABLED: { scope: SYSTEM, name: 'iframe_form_check_enabled', value: true },\r\n\r\n  ANNOTATION_JOURNEY_COHORT: { scope: SYSTEM, name: `annotation_journey_cohort${_browser}`, value: 0 },\r\n  ANNOTATION_JOURNEY_TOAST: { scope: USER, name: `aj_toast${_browser}`, value: null },\r\n\r\n  // The throttle percentage for extension\r\n  HTI_THROTTLE: { scope: SYSTEM, name: 'hti_throttle', value: 0 },\r\n  MTI_CLIENT_ID: { scope: SYSTEM, name: 'gti_client_id', value: '' },\r\n};\r\n","// Background\r\n\r\nimport TabData from '@extension/common/tab_data';\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { BackgroundConstants, CryptoBlacklist, TrustedDomains, RatBlacklist, ApsUrlList } from '@extension/common/background_constants';\r\nimport { NativeSettings } from '@extension/background/dispatchers/native/native_settings';\r\n\r\nexport const BackgroundGlobals = {\r\n  // This flag is set to false by automation to avoid isTrusted check in shadowDOM.\r\n  // Since WA use custom shadowDOM access in automation without using Selenium, isTrusted is false\r\n  // hence for tests to succeed automation will set this flag to false before running tests.\r\n  isTrustCheckRequired: true,\r\n  ExtensionTelemetryUrl: null,\r\n  scheduleManager: null,\r\n  schedules: null,\r\n  isNativeConnected: true,\r\n  telemetryEngine: null,\r\n  postInstallationPage: 'https://www.mcafee.com/consumer/v/wa-how.html',\r\n  listenerManager: null,\r\n  firefoxInternalUUID: '',\r\n  shadowMode: 'closed',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  cacheStore: null,\r\n  ffViewports: null,\r\n  garbageCollector: null,\r\n  typoCache: null,\r\n  logger: null,\r\n  loglevel: null,\r\n  messageDispatcher: null, // The message handler for native messaging\r\n  port: null,\r\n  tabData: new TabData(), // Information about all the tab\r\n  tabIdToLastClickTime: new Map(),\r\n  useNativeLogger: false,\r\n  wasm: null, // webassembly module\r\n  userAgentInBase64: null,\r\n  typoSquattingServer: BackgroundConstants.TYPOSQUATTING_SERVER,\r\n  tldParser: null,\r\n  cryptoBlacklist: CryptoBlacklist,\r\n  trustedDomains: TrustedDomains,\r\n  nativeSettings: NativeSettings,\r\n  searchSuggest: null,\r\n  ratBlacklist: RatBlacklist,\r\n  updatedByNative: false, // flag indicate whether these global variables have been updated by native\r\n\r\n  // WSS\r\n  wssMessageDispatcher: null, // The message handler for WSS native messaging\r\n  wssNativeClient: null,\r\n  WSS_INSTALLED: false,\r\n  isWPSInstalled: false,\r\n\r\n  // Engines JSON\r\n  searchEngines: null,\r\n  enginesVersionUrl: BackgroundConstants.ENGINE_VERSION_URL,\r\n  engineCheckInterval: 1000 * 60 * 60 * 24,\r\n  ENGINES_VERSION: BuildSettings.ENGINES_VERSION,\r\n\r\n  // Feature flags\r\n  AUTO_PLAY_NOTIFICATION_ENABLED: false,\r\n\r\n  // Automation specific flags\r\n  ALLOW_LOCALHOST: false,\r\n\r\n  // Form detection\r\n  IDPS_AUTH_URL: 'https://csptoken.ccs.mcafee.com/auth/token',\r\n  IDPS_BREACH_COUNT_URL: 'https://identity.unifiedapis.mcafee.com/breach/v1/BreachCount',\r\n  IDPS_CSP_CLIENT_ID: null,\r\n  IDPS_IS_ENTITLED: false,\r\n  IDPS_PROVISION_ID: null,\r\n  IDPS_LOGIN_DOMAIN: 'https://protection.mcafee.com',\r\n\r\n  // Unified Auth\r\n  UA_CLIENT: null,\r\n\r\n  // Typosquatting cache variables\r\n  TYPOSQUATTING_MAX_CACHE: 100,\r\n  TYPOSQUATTING_EXPIRY: 1000 * 60 * 60 * 24 * 30, // 1 month\r\n\r\n  // AMWA-11850 CPSIR-83 - Secret code that is appended to image requests to not allow external access to image files\r\n  WA_IMAGE_SECRET: null,\r\n\r\n  // Advanced Protection Signal URLs\r\n  apsUrlList: ApsUrlList,\r\n  apsAnimationTimeout: 5000,\r\n\r\n  downloadUrls: new Set(),\r\n\r\n  // Small Business Integration\r\n  wpsRequestedSettings: new Set(['SMA_USER_TOGGLE', 'SEARCH_ANNOTATION_OPTION', 'SMA_ANNOTATION_OPTIONS']),\r\n\r\n  // Permitted content types . These types are not blocked by URL but passed to native for download scanning.\r\n  permittedContentTypes: ['application/vnd.microsoft.portable-executable',\r\n    'application/octet-stream',\r\n    'application/x-msdos-program',\r\n    'application/x-msdownload',\r\n    'binary/octet-stream',\r\n    'application/x-msdownload'\r\n  ],\r\n\r\n  // supported extenal website connections\r\n  SUPPORTED_WEBSITE_LIST: [\r\n    'protection.mcafee.com',\r\n    'protection-dev-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-dev2-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-qa-roadhouse-int.dvqa.mcafee.com',\r\n  ],\r\n\r\n  // per user use either GTI or HTI. true means set HTI while installing and if false means set GTI\r\n  isHTI: false,\r\n  mtiRequestor: null,\r\n  gtiServer: BackgroundConstants.GTI_SERVER,\r\n  htiServer: BackgroundConstants.HTI_SERVER,\r\n  cspClientId: 'e87c73de-b45e-4427-b590-5124401795b6',\r\n};\r\n","export const ForegroundGlobals = {\r\n  loglevel: null, // specify the current recorded loglevel\r\n};\r\n","// Background\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\n// Common\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n// Foreground\r\nimport { ForegroundGlobals } from '@extension/ui/foreground/foreground_globals';\r\n\r\n/**\r\n * The different log levels considered when detecting / reporting errors in WebAdvisor\r\n * Note that a higher level means that more logs will be printed. (ie, level 3 will print level 2 and 1)\r\n */\r\nexport const LogLevels = {\r\n  NONE: 0,\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * The different log types\r\n */\r\nexport const LogTypes = {\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * Process type to distinguish which process called the logger\r\n */\r\nexport const ProcessTypes = {\r\n  BACKGROUND: 'BACKGROUND',\r\n  CONTENT: 'CONTENT',\r\n  TELEMETRY: 'TELEMETRY',\r\n  SMART_NATIVE_CLIENT: 'SMART_NATIVE_CLIENT'\r\n};\r\n\r\nexport const ProcessStyleMap = {\r\n  DEFAULT: 'color: #000000; font-weight: normal; font-style:normal; background: #FFFFFF;',\r\n  BACKGROUND: 'color: #8D0DBA; font-weight: bold; background: #FFFFFF;',\r\n  CONTENT: 'color: #F54A26; font-weight: bold; background: #FFFFFF;',\r\n  TELEMETRY: 'color: #147831; font-weight: bold; background: #FFFFFF;',\r\n  SMART_NATIVE_CLIENT: 'color: #004d7c; font-weight: bold; background: #FFFFFF;'\r\n};\r\n\r\n// *****************************************************************************\r\n// Set \"ExtensionLogging\" = 1 in registry at the same place we set LogLevel\r\n// will turn on native logging. This will log everything including INFO and ERR.\r\n// *****************************************************************************\r\n// *****************************************************************************\r\n// Type \"chrome.storage.local.set({'EXTENSION_LOGGING': 3});\" into the background\r\n// page console to forcefully turn on or turn off the logs inside extension\r\n// chrome = chrome/browser, # = the log level from 0 to 4\r\n// *****************************************************************************\r\nexport class Logger\r\n{\r\n  static processLog(message, logType, process = undefined)\r\n  {\r\n    if (logType === LogLevels.NONE)\r\n    {\r\n      return;\r\n    }\r\n\r\n    // verify that process is a valid option, else set it undefined\r\n    if (process && !Object.values(ProcessTypes).includes(process))\r\n    {\r\n      process = undefined;\r\n    }\r\n\r\n    // Checking whether native logging is enabled or not.\r\n    chrome.storage.local.get(LocalStorageVariables.USE_NATIVE_LOGGER.name, (useNativeLogger) =>\r\n    {\r\n      if (useNativeLogger[LocalStorageVariables.USE_NATIVE_LOGGER.name] === true)\r\n      {\r\n        if (!process)\r\n        {\r\n          // Check if the current code is being ran in the background or foreground\r\n          process = isBackground() ? ProcessTypes.BACKGROUND : ProcessTypes.CONTENT;\r\n        }\r\n        const details = {\r\n          processType: process,\r\n          browserType: BuildSettings.BROWSER_TYPE,\r\n          extensionType: 'wa',\r\n          logType,\r\n          message\r\n        };\r\n\r\n        BackgroundGlobals.messageDispatcher && BackgroundGlobals.messageDispatcher.logger(details);\r\n      }\r\n    });\r\n\r\n    // log within extension\r\n    consoleLog(message, logType, process);\r\n  }\r\n\r\n  /**\r\n   * Set the native Logging status\r\n   * @param {*} state\r\n   */\r\n  static setNativeLogging(state)\r\n  {\r\n    BackgroundGlobals.useNativeLogger = state;\r\n    chrome.storage.local.set(LocalStorageVariables.USE_NATIVE_LOGGER, state);\r\n  }\r\n\r\n  // Need to include processType for telemetry logging only.\r\n  static log(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.INFO, processType);\r\n  }\r\n\r\n  static error(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.ERROR, processType);\r\n  }\r\n\r\n  static warn(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.WARN, processType);\r\n  }\r\n\r\n  static debug(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.DEBUG, processType);\r\n  }\r\n}\r\n\r\nconst consoleLog = async (message, logType, process = undefined) =>\r\n{\r\n  const logLevel = await getLogLevel();\r\n  if (logLevel === LogLevels.NONE)\r\n  {\r\n    return;\r\n  }\r\n\r\n  const processType = process || (isBackground() ? ProcessTypes.BACKGROUND\r\n    : ProcessTypes.CONTENT);\r\n  const nowDate = new Date();\r\n  const logMessage = `%c[${processType} ${nowDate.toLocaleString([], { hour: '2-digit', minute: '2-digit', hour12: true })}]: %c${message}`;\r\n\r\n  const styleRegular = ProcessStyleMap.DEFAULT;\r\n  let hightlight = ProcessStyleMap[processType];\r\n\r\n  if (!hightlight)\r\n  {\r\n    hightlight = styleRegular;\r\n  }\r\n\r\n  if (logLevel >= LogLevels.ERROR && logType === LogTypes.ERROR)\r\n  {\r\n    console.error(logMessage, styleRegular, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.INFO && logType === LogTypes.INFO)\r\n  {\r\n    console.log(logMessage, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.WARN && logType === LogTypes.WARN)\r\n  {\r\n    const uniqueHighlight = 'color: #FFA500; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cWARN - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.DEBUG && logType === LogTypes.DEBUG)\r\n  {\r\n    const uniqueHighlight = 'color: #FF33D7; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cDEBUG - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n};\r\n\r\nconst isBackground = () =>\r\n{\r\n  const isBackground = BackgroundGlobals.cacheStore !== null;\r\n  return isBackground;\r\n};\r\n\r\nconst getLogLevel = async () =>\r\n{\r\n  // Check if the current code is being ran in the background or foreground\r\n  const context = isBackground() ? BackgroundGlobals : ForegroundGlobals;\r\n\r\n  // get loglevel from the current context\r\n  let level = context.loglevel;\r\n\r\n  // if current context loglevel is null (aka not set, we will retrieve the level from storage)\r\n  if (context.loglevel === null)\r\n  {\r\n    level = await getStorageLogLevelAsync();\r\n    context.loglevel = (level === null || level === undefined) ? BuildSettings.LOG_LEVEL : level;\r\n  }\r\n\r\n  if (Number.isInteger(level) && Object.values(LogLevels).includes(level))\r\n  {\r\n    return level;\r\n  }\r\n\r\n  return BuildSettings.LOG_LEVEL;\r\n};\r\n\r\nconst getStorageLogLevelAsync = async () =>\r\n{\r\n  const storageLocalGetAsync = new Promise((resolve) => chrome.storage.local.get(LocalStorageVariables.EXTENSION_LOGGING.name, resolve));\r\n  const response = await storageLocalGetAsync;\r\n  const storageLogLevel = response[LocalStorageVariables.EXTENSION_LOGGING.name];\r\n  if (Number.isInteger(storageLogLevel) && Object.values(LogLevels).includes(storageLogLevel))\r\n  {\r\n    return storageLogLevel;\r\n  }\r\n  return null;\r\n};\r\n","// This global object is used by core to store the properites that are shared across multiple objects in core.\r\n// Most of the properties set in this object are set during initialization of coreengine.\r\n\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\nimport ExternalMsgDispatcher from '@core-engine/external_msg_dispatcher';\r\n\r\nexport const Globals = {\r\n  uid: '0DE9E47C-871A-4F90-8440-B190C216800A',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  externalMsgDispatcher: new ExternalMsgDispatcher(),\r\n  reputationReqCount: 5,\r\n  imageCounter: 0,\r\n  isSearchHitSend: false,\r\n  resourceRequestor: null,\r\n  clientFunctions: null,\r\n  activeURI: null,\r\n  eventHandler: null,\r\n  bkGlobals: null,\r\n  searchEngine: null,\r\n  searchAnnotationOption: AnnotationOptions.ONLY_SECURE_SEARCH,\r\n  socialMediaOption: SocialMediaTypes.NONE,\r\n  socialMediaToggle: false,\r\n\r\n  // Show \"view site report\" link on annotation balloon\r\n  hasReportPage: true,\r\n};\r\n","import { extension } from '@extension/common/webextension';\r\nimport { ExternalCommands } from '@extension/common/commands';\r\nimport { Logger } from '@extension/common/logger';\r\n\r\nexport default class ExternalMsgDispatcher\r\n{\r\n  isvalidRequestType(requestType)\r\n  {\r\n    let valid = false;\r\n    for (const type in ExternalCommands)\r\n    {\r\n      if (ExternalCommands[type] === requestType)\r\n      {\r\n        valid = true;\r\n      }\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  validateMsg(requestType, payload)\r\n  {\r\n    if (\r\n      requestType === undefined\r\n      || payload === undefined\r\n      || !this.isvalidRequestType(requestType)\r\n    )\r\n    {\r\n      Logger.error('Invalid msg to be sent externally');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  sendExtnMsg(extnId, message, cb)\r\n  {\r\n    const defaultCb = (resolve, reject, data) =>\r\n    {\r\n      if (extension.runtime.lastError) reject(extension.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      const { request_type: requestType, payload } = message;\r\n      if (!this.validateMsg(requestType, payload))\r\n      {\r\n        reject(Error('sendExtnMsg: Invalid Message'));\r\n      }\r\n\r\n      extension.runtime.sendMessage(extnId, message, (data) =>\r\n      {\r\n        if (typeof cb === 'function') cb(resolve, reject, data);\r\n        else defaultCb(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Wrapper class making the http request call (using the built-in Fetch api).\r\n * Handling normal and exception cases.\r\n */\r\nexport default class HttpService\r\n{\r\n  onHttpResponse(response)\r\n  {\r\n    if (!response.ok)\r\n    {\r\n      const message = `HttpService Status: ${response.status}\\nError Text: ${response.statusText}`;\r\n      return Promise.reject(new Error(message));\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  sendHttpRequest({ url, headers, body, method = 'GET' })\r\n  {\r\n    return fetch(url, { headers, method, body }).then(this.onHttpResponse);\r\n  }\r\n}\r\n","import HttpService from '@extension/common/http_service';\r\nimport { extension } from '@extension/common/webextension';\r\n\r\nexport default class ResourceRequestor\r\n{\r\n  constructor()\r\n  {\r\n    this.http = new HttpService();\r\n  }\r\n\r\n  geti18nRes(attr, placeholders = [])\r\n  {\r\n    let str = extension.i18n.getMessage(attr, placeholders);\r\n    const productName = extension.i18n.getMessage('res_PRODUCT_NAME_TRADEMARKED');\r\n    str = str.replace(/%PRODUCTNAME%/g, productName);\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Get the message based on the resource id\r\n   * @param {Number}   resourceId - Resource id\r\n   * @param {Function} callback   - Handles the returned localized string\r\n   */\r\n  getResStr(resourceId, callback)\r\n  {\r\n    const message = this.geti18nRes(resourceId);\r\n    callback(\r\n      message === '??' ? '' : message\r\n    );\r\n  }\r\n}\r\n","// Common\r\nimport { SocialMediaTypes } from '@extension/common/sma_variables';\r\n\r\n/**\r\n * TODO: Comment\r\n */\r\nexport default class SearchEngine\r\n{\r\n  constructor(engines, socialMediaToggle, socialMediaOption, secureSearchRegExes)\r\n  {\r\n    this.engines = engines;\r\n    this.secureSearchRegExes = secureSearchRegExes;\r\n\r\n    this.socialMediaToggle = socialMediaToggle;\r\n    this.socialMediaOption = socialMediaOption;\r\n    if (socialMediaToggle && socialMediaOption)\r\n    {\r\n      this.updateSocialMedia();\r\n    }\r\n  }\r\n\r\n  updateSocialMedia()\r\n  {\r\n    if (!this.socialMediaToggle || this.socialMediaOption === SocialMediaTypes.NONE) return;\r\n\r\n    // The social media annotation engines are disabled by default.\r\n    // Here we are enabling those engines that have been set as enabled by user.\r\n    for (const engine of this.engines)\r\n    {\r\n      // Check if this engine is of social media type\r\n      if (engine.socialMediaType !== undefined)\r\n      {\r\n        // If so, we need to update the engines saved in bkglobals\r\n        // with the latest selected options from the user, as the list\r\n        // is always kept in memory.\r\n        if (engine.socialMediaType & this.socialMediaOption)\r\n        {\r\n          engine.enabled = true;\r\n        }\r\n        else\r\n        {\r\n          engine.enabled = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkEngineRegEx(url, engineRegexes)\r\n  {\r\n    for (let reindex = 0; reindex < engineRegexes.length; ++reindex)\r\n    {\r\n      const regexp = new RegExp(engineRegexes[reindex], 'i');\r\n      const ret = regexp.test(url);\r\n      if (ret) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getSecureEngineName(engineRegexesString)\r\n  {\r\n    if (engineRegexesString.includes('yahoo'))\r\n    {\r\n      return 'yahoo';\r\n    }\r\n\r\n    if (engineRegexesString.includes('bing'))\r\n    {\r\n      return 'bing';\r\n    }\r\n\r\n    if (engineRegexesString.includes('yandex'))\r\n    {\r\n      return 'yandex';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getEngineForUrl(url)\r\n  {\r\n    const SECURE_SEARCH_REGEXES = this.secureSearchRegExes.value;\r\n    let secureEngineName = null;\r\n    if (SECURE_SEARCH_REGEXES.length > 0)\r\n    {\r\n      secureEngineName = this.getSecureEngineName(SECURE_SEARCH_REGEXES[0]);\r\n    }\r\n\r\n    const engineData = this.engines.find((engine) =>\r\n    {\r\n      if (!engine.enabled)\r\n      {\r\n        return false;\r\n      }\r\n\r\n      if (engine.secureurlre)\r\n      {\r\n        const ssRegEx = secureEngineName === engine.name ? SECURE_SEARCH_REGEXES : engine.secureurlre;\r\n\r\n        const ret = this.checkEngineRegEx(url, ssRegEx);\r\n        if (ret)\r\n        {\r\n          engine.issecuresearch = true;\r\n          return true;\r\n        }\r\n      }\r\n\r\n      const ret = this.checkEngineRegEx(url, engine.urlre);\r\n      if (ret)\r\n      {\r\n        engine.issecuresearch = false;\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return engineData;\r\n  }\r\n\r\n  /**\r\n   * Gets the list of all selectors. This include disabled selectors as well.\r\n   */\r\n  getEngines()\r\n  {\r\n    return this.engines;\r\n  }\r\n}\r\n","export default class HandlePromise\r\n{\r\n  static handlePromiseMessage(message, customCallback = null)\r\n  {\r\n    const defaultCallback = (resolve, reject, data) =>\r\n    {\r\n      if (chrome.runtime.lastError) reject(chrome.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      chrome.runtime.sendMessage(message, (data) =>\r\n      {\r\n        if (typeof customCallback === 'function') customCallback(resolve, reject, data);\r\n        else defaultCallback(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\r\nimport { BackgroundCommands, ContentCommands } from '@extension/common/commands';\r\nimport HandlePromise from '@extension/common/handle_promise';\r\n\r\n/**\r\n * Handles communication from content process to the background process.\r\n */\r\nexport default class BackgroundIPC\r\n{\r\n  static cacheStore(action, data)\r\n  {\r\n    const command = BackgroundCommands.CACHE_STORE;\r\n    return HandlePromise.handlePromiseMessage({ command, action, data });\r\n  }\r\n\r\n  static isFrameBlocked(url)\r\n  {\r\n    const command = BackgroundCommands.IS_FRAME_BLOCKED;\r\n    return HandlePromise.handlePromiseMessage({ command, url });\r\n  }\r\n\r\n  static makeMTIRequest(requestData, referer)\r\n  {\r\n    const command = BackgroundCommands.TI_REQUEST;\r\n    const request = { command, requestData, referer };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static executeCommand(commandId, params)\r\n  {\r\n    const command = BackgroundCommands.EXECUTE_COMMAND;\r\n    extension.runtime.sendMessage({ command, commandId, params });\r\n  }\r\n\r\n  static focusOrCreateTab(url)\r\n  {\r\n    const command = BackgroundCommands.FOCUS_OR_CREATE_TAB;\r\n    extension.runtime.sendMessage({ command, url });\r\n  }\r\n\r\n  static closeTab()\r\n  {\r\n    const command = BackgroundCommands.REMOVE_TAB;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static whitelist(action, type, data)\r\n  {\r\n    const command = BackgroundCommands.WHITELIST;\r\n    return HandlePromise.handlePromiseMessage({ action, command, type, data });\r\n  }\r\n\r\n  static getPopupData()\r\n  {\r\n    const command = BackgroundCommands.GET_POPUP_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getSettingsData()\r\n  {\r\n    const command = BackgroundCommands.GET_SETTINGS_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static searchAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static socialMediaAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SOCIAL_MEDIA_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static async getBkGlobals(bIncludeSearchEngines = false)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const command = BackgroundCommands.GET_BK_GLOBALS;\r\n      const promise = HandlePromise.handlePromiseMessage({ command, bIncludeSearchEngines });\r\n      promise.then((val) => { resolve(JSON.parse(val)); });\r\n    });\r\n  }\r\n\r\n  static viewSiteReport(url = null, showInNewTab = false)\r\n  {\r\n    const command = BackgroundCommands.VIEW_SITE_REPORT;\r\n    extension.runtime.sendMessage({ command, url, showInNewTab });\r\n  }\r\n\r\n  static getTypoSquattingData(domain)\r\n  {\r\n    const command = BackgroundCommands.GET_TYPOSQUATTING_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command, domain });\r\n  }\r\n\r\n  static getPlaceholderText(id)\r\n  {\r\n    const command = BackgroundCommands.PLACEHOLDER_TEXT;\r\n    return HandlePromise.handlePromiseMessage({ command, id });\r\n  }\r\n\r\n  static setViewPort(x, y)\r\n  {\r\n    const command = BackgroundCommands.SET_VIEWPORT;\r\n    extension.runtime.sendMessage({ command, x, y });\r\n  }\r\n\r\n  static sendTelemetry(telemetry)\r\n  {\r\n    const command = BackgroundCommands.SEND_TELEMETRY;\r\n    extension.runtime.sendMessage({ command, telemetry });\r\n  }\r\n\r\n  static anyBlockedIframes(frameUrls)\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_IFRAMES;\r\n    return HandlePromise.handlePromiseMessage({ command, frameUrls });\r\n  }\r\n\r\n  static anyBlockedCryptoScripts()\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_CRYPTOSCRIPTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static resetSettings()\r\n  {\r\n    const command = BackgroundCommands.RESET_SETTINGS;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static sendEngineStat(engine)\r\n  {\r\n    extension.runtime.sendMessage({ command: BackgroundCommands.UPDATE_ENGINE_STATS, engine });\r\n  }\r\n\r\n  static contentHandler(message)\r\n  {\r\n    const command = BackgroundCommands.CONTENT_HANDLER;\r\n    extension.runtime.sendMessage({ command, message });\r\n  }\r\n\r\n  static getTabData(payload = {})\r\n  {\r\n    const command = BackgroundCommands.GET_TAB_DATA;\r\n    const request = { command, ...payload };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static isWhitelisted(url)\r\n  {\r\n    const command = BackgroundCommands.IS_WHITELISTED;\r\n    const request = { command, url };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static getExtensionStatus(id)\r\n  {\r\n    return HandlePromise.handlePromiseMessage({ command: BackgroundCommands.GET_EXTENSION_STATUS, extension_id: id });\r\n  }\r\n\r\n  static unblockAllIframes()\r\n  {\r\n    const command = BackgroundCommands.UNBLOCK_ALL_IFRAMES;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateRatDetectionShowingFlag(showed)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_RAT_DETECTION_SHOWING_FLAG;\r\n    extension.runtime.sendMessage({ command, showed });\r\n  }\r\n\r\n  /**\r\n   * Send a message to the background to retrieve the results from Search Suggestion for the search term\r\n   *\r\n   * @param {String} searchTerm\r\n   */\r\n  static getSearchSuggest(searchTerm)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_SUGGEST;\r\n    const request = { command, searchTerm };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static resetNativeSetting(setting)\r\n  {\r\n    const command = BackgroundCommands.RESET_NATIVE_SETTING;\r\n    extension.runtime.sendMessage({ command, setting });\r\n  }\r\n\r\n  /**\r\n   * Save form info (logging info)\r\n   * @param {string} username - username entered in the form.\r\n   * @param {string} hostname - hostname of the page the form was submitted on.\r\n   */\r\n  static saveFormInfo(username, hostname)\r\n  {\r\n    const command = BackgroundCommands.SAVE_FORM_INFO;\r\n    extension.runtime.sendMessage({ command, username, hostname });\r\n  }\r\n\r\n  /**\r\n   * Send message to the backend to save login from multi-step detection\r\n   * @param {Object} data - Object containing the neccesary info from the form.\r\n   * @param {string} data.username - (optional) username entered into the form. Only supplied if login not complete, ie first step of multistep form.\r\n   * @param {string} data.hostanme - hostname of the page the form was submitted on.\r\n   * @param {Boolean} completeLogin - Whether or not the multistep login process is completed or not.\r\n   */\r\n  static saveMultiStepLogin(data, completeLogin)\r\n  {\r\n    const command = BackgroundCommands.SAVE_MULTISTEP_LOGIN;\r\n    extension.runtime.sendMessage({ command, data, completeLogin });\r\n  }\r\n\r\n  static getFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.GET_FORM_INFO_CACHE;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static clearFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.CLEAR_FORM_INFO_CACHE;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  /**\r\n   * Update list of emails to be excluded from DWS offering.\r\n   * The email is whitelisted either because the user said not to offer it again, or because the user\r\n   * added it to be monitored in the web portal.\r\n   * @param {*} email\r\n   */\r\n  static updateDWSWhitelist(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_WHITELIST;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.GET_CACHED_DWS_INFO;\r\n    const request = { command, email };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static clearCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.CLEAR_CACHED_DWS_INFO;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static updateDWSShown(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_SHOWN;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getAPSDetails()\r\n  {\r\n    const command = BackgroundCommands.GET_APS_DETAILS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static signUpFormDetected()\r\n  {\r\n    const command = BackgroundCommands.SIGN_UP_FORM_DETECTED;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateBkNativeSettings(name, value)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_BK_NATIVE_SETTINGS;\r\n    extension.runtime.sendMessage({ command, name, value });\r\n  }\r\n\r\n  static launchIDPSLogin()\r\n  {\r\n    const command = BackgroundCommands.LAUNCH_IDPS_LOGIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static showSidebarMain()\r\n  {\r\n    const command = BackgroundCommands.SHOW_SIDEBAR_MAIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static setFFPolicyCollection({ personal, activity })\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_COLLECTION;\r\n    extension.runtime.sendMessage({ command, personal, activity });\r\n  }\r\n\r\n  static setFFPolicyLastShown()\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_LAST_SHOWN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  // This will broadcast a sendMessage to all page owned by us\r\n  // For example, to all foreground pages. A message will be sent to\r\n  // background as well but it will not be processed\r\n  static broadcastToForeground(payload)\r\n  {\r\n    const command = ContentCommands.BROADCAST_TO_FOREGROUND;\r\n    extension.runtime.sendMessage({ command, payload });\r\n  }\r\n\r\n  static getFDWeights()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_WEIGHTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDExceptions()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_EXCEPTIONS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDCrfParams()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_CRF_PARAMS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n}\r\n","export const Globals = {\r\n  ANNOTATION: {},\r\n  BackgroundIPC: null,\r\n  BackgroundCommons: null,\r\n  ContextTelemetry: null,\r\n  TelemetryEventNames: null,\r\n  UrlParser: null,\r\n  Utils: null,\r\n  Commands: {},\r\n  CommonConstants: {},\r\n  extension: null,\r\n  SearchEngineHelper: null,\r\n  prevLink: null,\r\n  Logger: null\r\n};\r\n","export const CONSTANTS = {\r\n  annotationTime: 'mcafee_wa_annotationtime',\r\n  bingPartnerCode: 'PC=MC',\r\n  bubbleLayer: 'BubbleLayer',\r\n  expectedCount: 'mcafee_wa_expectedcount',\r\n  gtiRequestTime: 'mcafee_wa_requesttime',\r\n  harvestingTime: 'mcafee_wa_harvestingtime',\r\n  mcafeeWaAnn: 'mcafee_wa_ann',\r\n  mcafeeWaHidden: 'mcafee_wa_hidden',\r\n  processedid: 'waprocessedid',\r\n};\r\n\r\n/**\r\n * Every possible color status shown on WebAdvisor\r\n */\r\nexport const Color = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  DISABLED: 5,\r\n};\r\n","// Common\r\nimport { Globals } from './globals';\r\nimport { CONSTANTS } from './constants';\r\nimport * as punycode from '../thirdparty/punycode_min_es6';\r\n\r\nconst UriFilterType = {\r\n  filterWithStartEnd: 0\r\n};\r\n\r\nconst PROCESSED_TAG = 'waprocessedanchor';\r\nconst ORIGINAL_TARGET = 'original_target';\r\n\r\n/**\r\n * The links within a web page are harvested in this class. It first checks whether\r\n * there are any links that are not annotated. To figure out whether a link is\r\n * annotated or not, while annotating we add a new attribute by name 'waprocessedanchor'\r\n * for every annotated node. That way a recheck and resending of entry to dss Server is\r\n * avoided. All links which are not annotated are then checked against each selector unless\r\n * there is a match. If there is a match then that is the link which is send to receive\r\n * notification. This class returns a collection of all such links that have to be\r\n * annotated.\r\n */\r\nexport default class LinkHarvester\r\n{\r\n  static anchorHandler(anchor, unProcessedAnchors, processedAnchors)\r\n  {\r\n    const processedtag = anchor.getAttribute(PROCESSED_TAG);\r\n    const href = anchor.getAttribute('href');\r\n\r\n    if (\r\n      !href\r\n      || href.length < 3\r\n      || href.substr(0, 1) === '#'\r\n      || (href.indexOf('.') === -1 && href.indexOf('%2E') === -1)\r\n    )\r\n    {\r\n      return;\r\n    }\r\n\r\n    if (processedtag !== 'true')\r\n    {\r\n      unProcessedAnchors.push(anchor);\r\n      return;\r\n    }\r\n\r\n    processedAnchors.push(anchor);\r\n  }\r\n\r\n  // Parse out the actual URI from within the complete href. The URI is between a\r\n  // start and end tokens.\r\n  static getFilteredURI(originalURI, filterObj)\r\n  {\r\n    if (undefined !== filterObj)\r\n    {\r\n      let uri = decodeURIComponent(originalURI);\r\n      switch (filterObj.filterType)\r\n      {\r\n        case UriFilterType.filterWithStartEnd:\r\n        {\r\n          const startIndex = uri.indexOf(filterObj.startsWith, 0);\r\n          if (startIndex === -1)\r\n          {\r\n            break;\r\n          }\r\n          const endIndex = uri.indexOf(filterObj.endsWith, startIndex);\r\n          if (endIndex === -1)\r\n          {\r\n            break;\r\n          }\r\n          uri = uri.slice(startIndex + filterObj.startsWith.length, endIndex);\r\n          break;\r\n        }\r\n      }\r\n      return uri;\r\n    }\r\n    return originalURI;\r\n  }\r\n\r\n  static getUnProcessedAnchors()\r\n  {\r\n    const unProcessedAnchors = [];\r\n    const processedAnchors = [];\r\n\r\n    try\r\n    {\r\n      // Grab all of the anchors from the search page\r\n      const anchorTags = document.getElementsByTagName('a');\r\n\r\n      // For each anchor element now figure out the unprocessed anchor elements\r\n      for (let i = 0; i < anchorTags.length; i++)\r\n      {\r\n        this.anchorHandler(anchorTags[i], unProcessedAnchors, processedAnchors);\r\n      }\r\n    }\r\n    catch (e)\r\n    {\r\n      Globals.Logger.error(e.message);\r\n    }\r\n\r\n    return { unProcessedAnchors, processedAnchors };\r\n  }\r\n\r\n  static shouldExcludeURI(expression, url)\r\n  {\r\n    if (undefined !== expression)\r\n    {\r\n      try\r\n      {\r\n        const regexp = new RegExp(expression, 'i');\r\n        const ret = regexp.test(url);\r\n        return ret;\r\n      }\r\n      catch (e)\r\n      {\r\n        Globals.Logger.error(e.message);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  static getParam(document, uri, paramName)\r\n  {\r\n    const ahref = document.createElement('a');\r\n    ahref.href = uri;\r\n    const param = ahref.search.replace('?', '');\r\n    const params = param.split('&');\r\n\r\n    for (let index = 0; index < params.length; ++index)\r\n    {\r\n      if (!params[index])\r\n      {\r\n        continue;\r\n      }\r\n      const pair = params[index].split('=');\r\n      if (pair !== null && pair.length === 2 && pair[0] === paramName)\r\n      {\r\n        const quri = decodeURIComponent(pair[1]);\r\n        return quri;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static getURI(document, element, selObj)\r\n  {\r\n    let uri = null;\r\n\r\n    if (undefined !== selObj.hrefattr)\r\n    {\r\n      // If specific attribute has to be searched for actual URI then do it.\r\n      for (let attrIndex = 0; attrIndex < selObj.hrefattr.length; ++attrIndex)\r\n      {\r\n        const attrib = element.getAttribute(selObj.hrefattr[attrIndex]);\r\n        if (attrib !== null)\r\n        {\r\n          uri = attrib.value;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (uri === null)\r\n    {\r\n      // If specific attribute was there or not there and in\r\n      // either case if uri could not be found then take the default a href as uri.\r\n      uri = element.getAttribute('href');\r\n\r\n      if (selObj.actualhref)\r\n      {\r\n        uri = element.getAttribute(selObj.actualhref);\r\n      }\r\n\r\n      // if hrefqstring is mentioned the parse it out of the query string.\r\n      if (undefined !== selObj.hrefqstring)\r\n      {\r\n        const paramValue = this.getParam(document, uri, selObj.hrefqstring);\r\n        if (paramValue !== null)\r\n        {\r\n          uri = paramValue;\r\n        }\r\n      }\r\n\r\n      // Retrieve URL from within the 'a' tag's inner content\r\n      if (selObj.inTagUrl)\r\n      {\r\n        const tagText = element.textContent;\r\n        if (tagText.startsWith('http://') || tagText.startsWith('https://'))\r\n        {\r\n          uri = tagText;\r\n        }\r\n      }\r\n    }\r\n\r\n    const aElem = document.createElement('a');\r\n    aElem.href = uri;\r\n    uri = `${aElem.protocol}//${aElem.hostname}${aElem.port}${aElem.pathname}${aElem.search}${aElem.hash}`;\r\n\r\n    if (!uri)\r\n    {\r\n      return null;\r\n    }\r\n\r\n    if (uri.startsWith('http') || uri.startsWith('https') || uri.startsWith('ftp') || uri.startsWith('sftp'))\r\n    {\r\n      return uri;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   YOUTUBE SMA HACK\r\n    Workaround fix for Youtube Description annotation (SMA)\r\n    Things to note about Youtube Description links (when navigating to another video):\r\n    1. Link Element does not get removed\r\n    2. Link's Attribute remains\r\n    3. Link's Children will be removed\r\n    4. McAfee Annotation added in the description as a sibling of the Link will not get removed.\r\n      Causing multiple annotation to show up\r\n  Solution:\r\n  - To address #4: we had to insert the annotation inside the Link. That way on every video navigation\r\n    the annotation will be removed (due to #3)\r\n  - Next problem #2: Since the attribute remains, our PROCESSED_TAG gets added on the first youtube video\r\n    but any subsequent video will have the PROCESSED_TAG which prevents us from adding an annotation.\r\n    Workaround is to look at the PROCESSED_TAG and only 're-annotate' if the child does not contain an annotation.\r\n  - Next issue: For some reason there are mutliple annotation requests for the same URL and this causes the Link\r\n    to be annotated multiple times. We only want to perform the 're-annotation' hack once but the annotation\r\n    has not yet been added since this is part of the annotation_inserter code. Hence, as a solution we insert a\r\n    hidden div (mcafee_wa_hidden) right when we perform a queue to 're-annonate' only if the 'hidden div'\r\n    does not exist AND there are no child annotation in the Link\r\n  **/\r\n  static reprocessAnnotationForYoutube(unProcessedAnchors, processedAnchors, engine)\r\n  {\r\n    processedAnchors.forEach((anchor) =>\r\n    {\r\n      const selectorObject = this.getMatchedSelector(anchor, engine.selectors);\r\n      if (selectorObject !== null && selectorObject.reProcessAnchor)\r\n      {\r\n        let foundAnnotation = false;\r\n        let foundHiddenDiv = false;\r\n        anchor.childNodes.forEach((element) =>\r\n        {\r\n          if (element.getAttribute)\r\n          {\r\n            // Check if there is a mcafee child annotation\r\n            if (element.getAttribute(CONSTANTS.mcafeeWaAnn)) foundAnnotation = true;\r\n\r\n            // check if there is a mcafee hidden tag\r\n            if (element.getAttribute(CONSTANTS.mcafeeWaHidden)) foundHiddenDiv = true;\r\n          }\r\n        });\r\n\r\n        if (!foundHiddenDiv && !foundAnnotation)\r\n        {\r\n          anchor.removeAttribute(PROCESSED_TAG);\r\n          unProcessedAnchors.push(anchor);\r\n\r\n          // Removing the PROCESSED_TAG is not enough! Since there could be multiple hits from the\r\n          // same URL and we only add the Annotation later (on annotation_inserter). Therefore, we\r\n          // just create a 'hidden div' to avoid adding more annotations.\r\n          const hiddenDiv = document.createElement('div');\r\n          hiddenDiv.setAttribute(CONSTANTS.mcafeeWaHidden, 'true');\r\n          hiddenDiv.style.cssText = 'display: none;';\r\n          anchor.appendChild(hiddenDiv);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  static harvestLinks(engine, fncallback)\r\n  {\r\n    try\r\n    {\r\n      const { unProcessedAnchors, processedAnchors } = this.getUnProcessedAnchors(engine);\r\n\r\n      if (!unProcessedAnchors.length && !processedAnchors.length)\r\n      {\r\n        // Nothing to process\r\n        return false;\r\n      }\r\n\r\n      this.reprocessAnnotationForYoutube(unProcessedAnchors, processedAnchors, engine);\r\n      let requestURLs = [];\r\n      let requestElements = [];\r\n\r\n      for (let elemIndex = 0; elemIndex < unProcessedAnchors.length; elemIndex++)\r\n      {\r\n        const element = unProcessedAnchors[elemIndex];\r\n        const selObj = this.getMatchedSelector(element, engine.selectors);\r\n\r\n        if (selObj !== null)\r\n        {\r\n          const newelem = {};\r\n\r\n          newelem.styles = selObj.styles;\r\n\r\n          if (selObj.parent === true)\r\n          {\r\n            newelem.node = element.parentNode;\r\n          }\r\n          else\r\n          {\r\n            newelem.node = element;\r\n          }\r\n\r\n          if (selObj.inline === true)\r\n          {\r\n            newelem.node.style.display = 'inline-block';\r\n          }\r\n\r\n          const uri = this.getURI(document, element, selObj);\r\n          if (uri === null)\r\n          {\r\n            continue;\r\n          }\r\n\r\n          const bExclude = this.shouldExcludeURI(selObj.excluderegex, uri);\r\n          if (bExclude === true)\r\n          {\r\n            continue;\r\n          }\r\n\r\n          const filteredUrl = this.getFilteredURI(uri.toLowerCase(), selObj.filterURI);\r\n\r\n          newelem.url = punycode.toASCII(filteredUrl); // eslint-disable-line no-undef\r\n          newelem.node.setAttribute(ORIGINAL_TARGET, newelem.url);\r\n          newelem.insertIntoLink = selObj.insertIntoLink;\r\n          newelem.insertIntoSelector = selObj.insertIntoSelector;\r\n\r\n          // pid will be used to assosicate each link with an annotation that gets inserted\r\n          const pid = Math.random().toString(36).substring(7);\r\n          newelem.pid = pid;\r\n          newelem.node.setAttribute(CONSTANTS.processedid, pid);\r\n\r\n          if (selObj.child !== undefined)\r\n          {\r\n            newelem.annotationNode = newelem.node.querySelector(selObj.child);\r\n          }\r\n\r\n          if (newelem.url.length > 0)\r\n          {\r\n            requestElements.push(newelem);\r\n            requestURLs.push(newelem.url);\r\n          }\r\n        }\r\n\r\n        element.setAttribute(PROCESSED_TAG, 'true');\r\n\r\n        if (Globals.ANNOTATION.reputationReqCount > 0 && Globals.ANNOTATION.reputationReqCount === requestElements.length)\r\n        {\r\n          fncallback(requestURLs, requestElements);\r\n          requestURLs = [];\r\n          requestElements = [];\r\n        }\r\n      }\r\n\r\n      // Whatever is pending invoke callback\r\n      if (requestURLs.length > 0)\r\n      {\r\n        fncallback(requestURLs, requestElements);\r\n      }\r\n    }\r\n    catch (e)\r\n    {\r\n      Globals.Logger.error(e.message);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Determine if node added is susceptible to annotation\r\n   * @param {Object} element - Element added\r\n   * @param {[String]} selectors - Array of DOM query strings\r\n   */\r\n  static shouldHarvestElement(element, selectors)\r\n  {\r\n    const match = this.getMatchedSelector(element, selectors);\r\n    return Boolean(match);\r\n  }\r\n\r\n  /**\r\n   * Test element against list of DOM queries stored in the engine config\r\n   * @param {Object} element - Element added\r\n   * @param {String[]} selectors - Array of DOM query strings\r\n   */\r\n  static getMatchedSelector(element, selectorList)\r\n  {\r\n    for (const item of selectorList)\r\n    {\r\n      const isMatched = element.matches(item.selector);\r\n\r\n      if (isMatched)\r\n      {\r\n        item.matched++;\r\n        return item;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import { Globals } from './globals';\r\n\r\nexport default class ResourceManager\r\n{\r\n  /**\r\n   * Obtain the corresponding string for the resource name\r\n   * @param {String}   name     - The name of the resource\r\n   * @param {Function} callback - Handles the localized string returned\r\n   */\r\n  static getResString(name, callback)\r\n  {\r\n    Globals.ANNOTATION.resourceRequestor.getResStr(name, (value) =>\r\n    {\r\n      if (!value)\r\n      {\r\n        Globals.Logger.error(`Resource string ${name} failed to fetch through resource requestor`);\r\n      }\r\n      else\r\n      {\r\n        callback(value);\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Common\nimport { Globals } from '../Common/globals';\nimport { CONSTANTS } from '../Common/constants';\nimport ResourceManager from '../Common/resource_manager';\n/////////////////////////////////\n////////////////////////////////////\n//////////\n\nconst recElemStyle = {\n  Small: 0,\n  Normal: 1\n};\n\n// This is the maximum chars that can be accomodated as recommendation in balloon. If the rec. is longer than this then\n// the font of element is reduced to recElemStyle.Small to accomodate the complete string.\nconst recElemLength = {\n  maxLength: 30\n};\n\n/**\n * This class takes care of displaying the annotation balloon when user hovers over the annotation image.\n */\nexport default class BalloonDisplayer\n{\n  constructor()\n  {\n    this.balloonElement = null;\n    this.bubbleLayerElement = null;\n    this.dossierElement = null;\n    this.iconElement = null;\n    this.iconContainerElement = null;\n    this.recommendationElement = null;\n    this.recommendationDefStyle = [];\n  }\n\n  getRecommendationString(annoItem, onLocaleReceivedCb)\n  {\n    const color = Globals.BackgroundCommon.toColor(annoItem);\n    const colorIndexMap = Globals.CommonConstants.swapObjectPropertyAndValues(Globals.CommonConstants.Color);\n    ResourceManager.getResString(`annotation_balloon_color_${colorIndexMap[color].toLowerCase()}`, onLocaleReceivedCb);\n  }\n\n  init(isBalloonDisplayed)\n  {\n    try\n    {\n      Globals.Logger.debug(isBalloonDisplayed ? 'Showing balloon' : 'Hiding balloon');\n\n      this.bubbleLayerElement = document.getElementById(`${CONSTANTS.bubbleLayer}-${Globals.ANNOTATION.uid}`);\n\n      if (isBalloonDisplayed)\n      {\n        // These elements are required only when balloon bubble is being shown\n        this.balloonElement = document.getElementById(`${CONSTANTS.bubbleLayer}-${Globals.ANNOTATION.uid}`);\n        this.iconElement = document.getElementById(`balloon__icon-${Globals.ANNOTATION.uid}`);\n        this.iconContainerElement = document.getElementById(`balloon__status-${Globals.ANNOTATION.uid}`);\n        this.recommendationElement = document.getElementById(`content__header-${Globals.ANNOTATION.uid}`).firstElementChild;\n        this.dossierElement = document.getElementById(`content__link-${Globals.ANNOTATION.uid}`).firstElementChild;\n\n        if (this.recommendationDefStyle.length === 0)\n        {\n          this.recommendationDefStyle[recElemStyle.Small] = { fontSize: '15px' }; // Make font size 19px when number of chars > maxLength\n          this.recommendationDefStyle[recElemStyle.Normal] = { fontSize: this.recommendationElement.style.fontSize }; // Recommendation div font size = 20px by default\n        }\n      }\n\n      return true;\n    }\n    catch (e)\n    {\n      Globals.Logger.error(e.message);\n      return false;\n    }\n  }\n\n  async setCategories(categories)\n  {\n    const listElement = document.getElementById('content__cat_container');\n    const newCategories = await Globals.BackgroundCommon.toGTICategoriesString(categories);\n\n    const licategories = [];\n    for (const category of newCategories)\n    {\n      licategories.push(`<div id=\"content__cat_item\">${category.name}</div>`);\n    }\n\n    // Clear pre-existing list items from previous event invocations handling the annotation balloon\n    while (listElement.firstChild)\n    {\n      listElement.removeChild(listElement.firstChild);\n    }\n    listElement.insertAdjacentHTML('beforeend', licategories.slice(0, 3).join(''));\n  }\n\n  /**\n   * TODO: Comments\n   * @param {Object} pageDocument -\n   * @param {Object} engine       -\n   * @param {Object} eventData    -\n   */\n  showBalloon(pageDocument, engine, eventData)\n  {\n    const annotation = {\n      data: null,\n      item: null\n    };\n\n    let element = eventData.toElement || null;\n\n    // Initialize all elements since we are showing balloon\n    if (!this.init(true) || element === null)\n    {\n      return;\n    }\n\n    // In case of hover balloon the hightlighted element coud be something like <strong> which is within the <a>\n    // We need to get <a> to get to the annotationData , since we insert the data as parent to <a>\n    while (annotation.data === null && element !== null && element.getAttribute)\n    {\n      annotation.data = element.getAttribute(CONSTANTS.mcafeeWaAnn);\n\n      if (annotation.data !== null)\n      {\n        break;\n      }\n\n      element = element.parentNode;\n    }\n\n    annotation.item = JSON.parse(annotation.data);\n\n    // Return early if the annotation data is absent or if the annotation data cannot be parsed\n    if (annotation.data === null || annotation.item === null)\n    {\n      return;\n    }\n\n    // Grab the link's state color and the associated appearance for the balloon component\n    const color = Globals.BackgroundCommon.toColor(annotation.item);\n    const appearance = Globals.ANNOTATION.BALLOON_PROPERTIES.appearance[`color_${color}`];\n\n    if (!appearance)\n    {\n      return;\n    }\n\n    if (this.iconElement !== null)\n    {\n      // Getting the reputation icon takes a while so we first clear the icon to avoid confusion\n      this.iconElement.src = '';\n      this.iconElement.src = Globals.extension.runtime.getURL(`${appearance.srcImage}?secret=${Globals.ANNOTATION.bkGlobals.WA_IMAGE_SECRET}`);\n    }\n\n    if (this.iconContainerElement !== null)\n    {\n      this.iconContainerElement.style.backgroundColor = appearance.backgroundColor;\n    }\n\n    if (this.recommendationElement !== null)\n    {\n      this.getRecommendationString(annotation.item, (titleMessage) =>\n      {\n        // Resize the title to accomodate for short/long strings\n        if (titleMessage.length > recElemLength.maxLength)\n        {\n          this.recommendationElement.style.fontSize = this.recommendationDefStyle[recElemStyle.Small].fontSize;\n        }\n        else\n        {\n          this.recommendationElement.style.fontSize = this.recommendationDefStyle[recElemStyle.Normal].fontSize;\n        }\n\n/////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\n//////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////\n        this.recommendationElement.innerHTML = titleMessage;\n//////////////////\n      });\n    }\n\n    if (this.bubbleLayerElement !== null && !this.bubbleLayerElement.getAttribute('has-listener'))\n    {\n      this.bubbleLayerElement.setAttribute('has-listener', true);\n      this.bubbleLayerElement.addEventListener('mouseleave', (eventData) =>\n      {\n        this.hideBalloon(this._document, Globals.ANNOTATION.uid, eventData);\n      });\n\n      // Event handle for when focusout from the balloon and again focus on respected annotation\n      this.bubbleLayerElement.addEventListener('focusout', (eventData) =>\n      {\n        const leavingParent = !this.bubbleLayerElement.contains(eventData.relatedTarget);\n        if (Globals.prevLink !== null && leavingParent)\n        {\n          this.hideBalloon(this._document, Globals.ANNOTATION.uid, eventData);\n          document.getElementById(Globals.prevLink).focus();\n        }\n      });\n    }\n\n    if (this.balloonElement !== null)\n    {\n      this.balloonElement.style.width = Globals.ANNOTATION.BALLOON_PROPERTIES.width;\n      this.balloonElement.style.borderColor = appearance.backgroundColor;\n      this.balloonElement.style.display = 'flex';\n      this.balloonElement.style.flexDirection = 'row';\n    }\n\n    if (annotation.item.category !== undefined)\n    {\n      this.setCategories(annotation.item.category);\n    }\n\n    // hide the site report button if it does not have a report page or if the navigation api is not available\n    if (!Globals.ANNOTATION.hasReportPage || typeof Globals.BackgroundIPC.viewSiteReport !== 'function')\n    {\n      this.dossierElement.style.display = 'none';\n    }\n    else if (this.dossierElement !== null)\n    {\n      ResourceManager.getResString('annotation_balloon_view_site_report', (siteReportLinkText) =>\n      {\n        const balloonString = color === Globals.CommonConstants.Color.UNKNOWN ? '' : siteReportLinkText;\n/////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////\n//////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////\n        this.dossierElement.innerHTML = balloonString;\n//////////////////\n        this.dossierElement.onclick = () =>\n        {\n          const eventData = {};\n          eventData.toElement = this.dossierElement;\n          this.hideBalloon(document, Globals.ANNOTATION.uid, eventData);\n          Globals.BackgroundIPC.viewSiteReport(annotation.item.dossierUrl, true);\n          return false;\n        };\n      });\n    }\n\n    this.moveBubble(pageDocument, element);\n\n    if (Number(engine.autoclose) > 0)\n    {\n      // Per engine auto close of balloon can be turned on.\n      // If defined and if value is greater than 0 then its the milliseconds for which to retain the balloon before auto-closing it.\n      Globals.ANNOTATION._activeBalloonElement = element;\n\n      setTimeout(() =>\n      {\n        if (Globals.ANNOTATION._activeBalloonElement === element)\n        {\n          this.bubbleLayerElement.style.visibility = 'hidden';\n        }\n      }, engine.autoclose);\n    }\n  }\n\n  getBalloonPosition(pageDocument, elem)\n  {\n    const box = elem.getBoundingClientRect();\n    const { body } = pageDocument;\n    const docElem = pageDocument.documentElement;\n    const scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n    const scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n    const clientTop = docElem.clientTop || body.clientTop || 0;\n    const clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    let top = box.top + scrollTop - clientTop;\n    let left = box.right + scrollLeft - clientLeft;\n\n    const balloonRect = this.bubbleLayerElement.getBoundingClientRect();\n\n    // If balloon cannot fit into the browser window then donot show it.\n    if (balloonRect.height > window.innerHeight || balloonRect.width > window.innerWidth)\n    {\n      return {\n        top: -1,\n        left: -1\n      };\n    }\n\n    const margin = 15;\n\n    if (top + balloonRect.height + margin > window.innerHeight + scrollTop)\n    {\n      top = top - (balloonRect.height - (window.innerHeight + scrollTop - top)) - margin;\n    }\n\n    if (left + balloonRect.width + margin > window.innerWidth + scrollLeft)\n    {\n      left = left - (balloonRect.width - (window.innerWidth + scrollLeft - left)) - margin;\n    }\n\n    return {\n      top: Math.round(top),\n      left: Math.round(left)\n    };\n  }\n\n  // function: moveBubble to element that contains annotation info\n  moveBubble(pageDocument, element)\n  {\n    const image = element;\n    const position = this.getBalloonPosition(pageDocument, image);\n\n    if (position.top === -1 || position.left === -1)\n    {\n      // Hide balloon when there is no space to show it.\n      Globals.Logger.log('Hiding balloon since there is no space to show it');\n      this.bubbleLayerElement.style.visibility = 'hidden';\n      return;\n    }\n\n    Globals.Logger.debug(`Showing balloon at ${position.top} , ${position.left}`);\n\n    this.bubbleLayerElement.style.top = `${position.top}px`;\n    this.bubbleLayerElement.style.left = `${position.left}px`;\n    this.bubbleLayerElement.style.visibility = 'visible';\n  }\n\n  // function: hideBalloon\n  hideBalloon(document, uid, evt)\n  {\n    this._document = document;\n    this._uid = uid;\n\n    if (!this.init(false))\n    {\n      // Initialize only the elements required for hiding.\n      return;\n    }\n\n    // Get the element to which mouse is moving to.\n    // evt.toElement - used for when mouse moves from annotation icon to other elements\n    // evt.relatedTarget - used for when mouse moves from annotation balloon to other elements\n    // one of them will always be undefined\n    const toElement = evt.toElement || evt.relatedTarget;\n\n    // Check that the mouse isn't moving into the annotation or other pieces of the balloon\n    if (toElement !== null && this.bubbleLayerElement.contains(toElement))\n    {\n      return;\n    }\n\n    this.bubbleLayerElement.style.visibility = 'hidden';\n  }\n}\n","// Common\r\nimport { Globals } from './globals';\r\n// Balloon\r\nimport BalloonDisplayer from '../Balloon/balloon_displayer';\r\n\r\nexport default class EventHandler\r\n{\r\n  constructor(engine)\r\n  {\r\n    this._engine = engine;\r\n    this._displayer = new BalloonDisplayer();\r\n  }\r\n\r\n  // isFromLinks - whether balloon is shown from link (true) or annotation icon (false)\r\n  showBalloon(evt, isFromLinks = false)\r\n  {\r\n    // toElement - the element mouse moved to\r\n    const ev = {};\r\n\r\n    if (isFromLinks)\r\n    {\r\n      ev.toElement = evt.target;\r\n    }\r\n    else\r\n    {\r\n      ev.toElement = document.getElementById(evt.toId);\r\n    }\r\n\r\n    this._displayer.showBalloon(document, this._engine, ev);\r\n  }\r\n\r\n  // isFromLinks - whether balloon is shown from link (true) or annotation icon (false)\r\n  hideBalloon(evt)\r\n  {\r\n    this._displayer.hideBalloon(document, Globals.ANNOTATION.uid, evt);\r\n  }\r\n}\r\n","// Utilities\r\nimport { CONSTANTS } from './constants';\r\n\r\n/**\r\n * Helper class providings util methods for parsing, analyzing, and understanding the different search results\r\n * provided by various search engines.\r\n */\r\nexport default class SearchEngineUtils\r\n{\r\n  static isBingSecureSearchInCookie()\r\n  {\r\n    const cookies = document.cookie.split(';');\r\n    for (const cookie of cookies)\r\n    {\r\n      if (cookie.toLocaleLowerCase().includes(CONSTANTS.bingPartnerCode.toLowerCase()))\r\n      {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","export const ANNOTATION_OPTIONS = {\r\n  none: 'NONE',\r\n  onlySecureSearch: 'ONLY_SECURE_SEARCH',\r\n  all: 'ALL'\r\n};\r\n\r\nexport const SEARCH_ANNOTATION_ACTIONS = {\r\n  get: 'GET',\r\n  set: 'SET',\r\n};\r\n\r\n// DO NOT CHANGE the number for the search engine types\r\n// Some of these numbers are mapped to native's search providers\r\nexport const SEARCH_ENGINE_TYPES = {\r\n  UNKNOWN: 0,\r\n  // Search engine annotations\r\n  GOOGLE: 1,\r\n  YAHOO: 2,\r\n  AOL: 3,\r\n  ASK: 4,\r\n  UOL: 5,\r\n  GOO: 6,\r\n  MYWAY: 7,\r\n  TERRA: 8,\r\n  WEB: 9,\r\n  BIGLOBE: 10,\r\n  GMX: 11,\r\n  EXCITE: 12,\r\n  SKY: 13,\r\n  NAVER: 14,\r\n  NIFTY: 15,\r\n  RAKUTEN: 16,\r\n  IXQUICK: 17,\r\n  XFINITY: 18,\r\n  SOGOU: 19,\r\n  DOGPILE: 20,\r\n  SEARCH: 21,\r\n  WEBCRAWLER: 22,\r\n  BING: 23,\r\n  INFO: 24,\r\n  YANDEX: 25,\r\n  YIPPY: 26, // No longer supported\r\n  WOW: 27,\r\n  HAOSO: 28,\r\n  DUCKDUCKGO: 30,\r\n  // Social media annotations\r\n  LINKEDIN: 100,\r\n  FACEBOOK: 101,\r\n  YOUTUBE: 102,\r\n  INSTAGRAM: 103,\r\n  REDDIT: 104,\r\n  TWITTER: 105,\r\n};\r\n\r\nexport const EngineType = {\r\n  SEARCH: 0,\r\n  SOCIALMEDIA: 1,\r\n};\r\n","// Common\r\nimport { Globals } from '../Common/globals';\r\nimport { CONSTANTS } from '../Common/constants';\r\n\r\n/**\r\n * Balloon markup template and styles\r\n */\r\nexport default class Balloon\r\n{\r\n  /**\r\n   * Create the balloon component\r\n   */\r\n  static create()\r\n  {\r\n    // Banner styles inside head element\r\n    document.querySelector('head').insertAdjacentHTML('beforeend', balloonStyles());\r\n    // Inject balloon component into DOM\r\n    document.querySelector('body').insertAdjacentHTML('beforebegin', balloonTemplate());\r\n  }\r\n}\r\n\r\n/**\r\n * TODO: Comments\r\n */\r\nfunction balloonTemplate()\r\n{\r\n  const waImagePath = Globals.extension.runtime.getURL(`${Globals.ANNOTATION.BALLOON_PROPERTIES.logoImage}?secret=${Globals.ANNOTATION.bkGlobals.WA_IMAGE_SECRET}`);\r\n\r\n  return `\r\n  <div tabindex='0'></div>\r\n    <div id=\"${CONSTANTS.bubbleLayer}-${Globals.ANNOTATION.uid}\" onselectstart=\"return false\" oncontextmenu=\"return false\" tabindex=\"0\">\r\n      <div id=\"balloon__status-${Globals.ANNOTATION.uid}\" aria-hidden=\"true\">\r\n        <img id=\"balloon__icon-${Globals.ANNOTATION.uid}\" alt=\"Annotation icon\">\r\n      </div>\r\n      <div id=\"balloon__content-${Globals.ANNOTATION.uid}\">\r\n        <div id=\"content__header-${Globals.ANNOTATION.uid}\">\r\n        <div id=\"content__title\"></div>\r\n        </div>\r\n        <div id=\"content__categories-${Globals.ANNOTATION.uid}\"  aria-hidden=\"true\">\r\n          <div id=\"content__cat_container\"></div>\r\n        </div>\r\n        <div id=\"content__link-${Globals.ANNOTATION.uid}\">\r\n          <a href=\"#\" tabindex=\"0\"></a>\r\n        </div>\r\n        <div id=\"content__separator-${Globals.ANNOTATION.uid}\"></div>\r\n        <div id=\"content__wa_logo-${Globals.ANNOTATION.uid}\" aria-hidden=\"true\">\r\n          <img src=\"${waImagePath}\" alt=\"WebAdvisor logo\">\r\n        </div>        \r\n      </div>\r\n    </div>\r\n  `;\r\n}\r\n\r\n/**\r\n * TODO: Comments\r\n */\r\nfunction balloonStyles()\r\n{\r\n  const resolvePath = Globals.extension.runtime.getURL;\r\n\r\n  return `\r\n    <style>\r\n      @font-face {\r\n        font-family: 'Open Sans';\r\n        src: url(${resolvePath('fonts/OpenSans-Regular.ttf')});\r\n      }\r\n\r\n      #${CONSTANTS.bubbleLayer}-${Globals.ANNOTATION.uid} {\r\n        background-color: #fff;\r\n        border: 1.5px solid red;\r\n        cursor: default;\r\n        display: flex;\r\n        font-family: 'Open Sans', sans-serif;\r\n        position: absolute;\r\n        visibility: hidden;\r\n        z-index: 2147483647;\r\n        outline:none;\r\n        line-height: 17px;\r\n      }\r\n\r\n      #balloon__content-${Globals.ANNOTATION.uid} {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1;\r\n        margin: 10px;\r\n      }\r\n      \r\n      #balloon__status-${Globals.ANNOTATION.uid} {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 50px;\r\n        margin: -1px;\r\n      }\r\n\r\n      #content__categories-${Globals.ANNOTATION.uid} > #content__cat_container {\r\n        color: #5d7998;\r\n        display: block;\r\n        font-size: 12px;\r\n        margin: 0;\r\n        padding-left: 20px;\r\n      }\r\n\r\n      #content__categories-${Globals.ANNOTATION.uid} > #content__cat_container > #content__cat_item {\r\n        display: list-item;\r\n        list-style-type: disc;\r\n        padding-top: 5px;\r\n      }\r\n\r\n      #content__header-${Globals.ANNOTATION.uid} {\r\n        display: flex;\r\n        padding: 5px 0; \r\n      }\r\n\r\n      #content__header-${Globals.ANNOTATION.uid} > #content__title {\r\n        color: #53565A;\r\n        flex-grow: 1;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        margin: 0;\r\n      }\r\n\r\n      #content__header-${Globals.ANNOTATION.uid} > img {\r\n        align-self: flex-start;\r\n        display: none;\r\n        height: 17px;\r\n        width: 50px;\r\n      }\r\n\r\n      #content__link-${Globals.ANNOTATION.uid} {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n        padding-top: 5px;\r\n        font-size: 12px;\r\n        text-align: right;\r\n      }\r\n\r\n      #content__link-${Globals.ANNOTATION.uid} > a {\r\n        color: #0084B6;\r\n        text-decoration: underline;\r\n        outline:none;\r\n      }\r\n\r\n      #content__separator-${Globals.ANNOTATION.uid} {\r\n        background-color: #e2e4eb;\r\n        height: 1px;\r\n        margin: 10px 0;\r\n      }\r\n\r\n      #content__wa_logo-${Globals.ANNOTATION.uid} {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n      }\r\n\r\n      #content__wa_logo-${Globals.ANNOTATION.uid} > img {\r\n        height: 16px;\r\n      }\r\n    </style>\r\n  `;\r\n}\r\n","// Common\r\nimport { Globals } from '../Common/globals';\r\nimport { CONSTANTS } from '../Common/constants';\r\n// Balloon\r\nimport Balloon from './balloon';\r\n\r\nexport default class BalloonCreator\r\n{\r\n  /**\r\n   * Create the balloon component (html markup / styles) and inject into the page.\r\n   */\r\n  static createBalloon()\r\n  {\r\n    try\r\n    {\r\n      const balloonElement = document.getElementById(`${CONSTANTS.bubbleLayer}-${Globals.ANNOTATION.uid}`);\r\n\r\n      if (!balloonElement)\r\n      {\r\n        Balloon.create();\r\n      }\r\n\r\n      return true;\r\n    }\r\n    catch (e)\r\n    {\r\n      Globals.Logger.error(e.message);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","// Common\nimport { Globals } from '../Common/globals';\nimport { CONSTANTS, Color } from '../Common/constants';\nimport EventHandler from '../Common/event_handler';\nimport SearchEngineUtils from '../Common/search_engine_utils';\n// Annotation\nimport { ANNOTATION_OPTIONS, SEARCH_ENGINE_TYPES } from './annotation_variables';\n// Balloon\nimport BalloonCreator from '../Balloon/balloon_creator';\n/////////////////////////////////\n////////////////////////////////////\n//////////\n\n/**\n * Inserts annotations beside hyperlinks onto the webpage (search results, social media posts, etc)\n */\nexport default class AnnotationInserter\n{\n  /**\n   * The properties required for creating the balloon are set to the div tag created for image,\n   * so that when the user hovers over the image, using this detail the ballon can be displayed.\n   * @param {HTMLElement} element  - Representing any html element node in the document\n   * @param {String}      url      - The url\n   * @param {Object}      linkInfo - Any information associated with the url in question\n   * @param {integer}     pid      - pid used for associating link with annotation div\n   */\n  static setDivProperty(element, url, linkInfo, pid)\n  {\n    linkInfo.dossierUrl = url;\n    element.setAttribute(CONSTANTS.mcafeeWaAnn, JSON.stringify(linkInfo));\n    element.setAttribute(CONSTANTS.processedid, pid);\n  }\n\n  /**\n   * Create the annotation image styles and inject into the page's header tag.\n   */\n  static createStyle()\n  {\n    const mcstyle = 'mc_style';\n    let imageStyles = document.getElementById(mcstyle);\n\n    if (imageStyles !== null)\n    {\n      // Tells that the images are already added to page. So no need to add again. This happens in case of new URI's being\n      // added such as the case of ajax calls in google.com etc.\n      return;\n    }\n\n    imageStyles = document.createElement('style');\n    imageStyles.setAttribute('id', mcstyle);\n    imageStyles.type = 'text/css';\n\n    const heads = document.getElementsByTagName('head');\n    heads[0].appendChild(imageStyles);\n\n    for (const ruleName of Object.keys(Globals.ANNOTATION.ANNOTATION_PROPERTIES))\n    {\n      const property = Globals.ANNOTATION.ANNOTATION_PROPERTIES[ruleName];\n      const annotationIcon = Globals.extension.runtime.getURL(`${property.icon}?secret=${Globals.ANNOTATION.bkGlobals.WA_IMAGE_SECRET}`);\n\n      try\n      {\n        const cssString = `.mcafee_${ruleName} {\n          background-image: url(${annotationIcon});\n          background-position: center;\n          background-repeat: no-repeat;\n          background-size: contain;\n          height: ${property.height}px;\n          width: ${property.width}px; \n        }\\n\\n`;\n\n        // Add new CSS class for a specific annotation image\n/////////////////////////////////////////\n///////////////////////////////////////////////////////////////\n//////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////\n        imageStyles.innerHTML += cssString;\n//////////////////\n      }\n      catch (e)\n      {\n        Globals.Logger.error(e.message);\n      }\n    }\n  }\n\n  /**\n   * Insert annotation for all searches except for bing secure search.\n   * @param {Object} link     - TODO: complete\n   * @param {Object} linkinfo - TODO: complete\n   */\n  static insertAnnotationImage(link, linkinfo)\n  {\n    try\n    {\n      // On Facebook, we try to re-annotate since there are times when facebook\n      // re-inject new links which removes our annotations. Therefore, on facebook only\n      // we prevent re-injecting the annotations if it already exists\n      if (document.location.href.match('^http(s)?:\\\\/\\\\/(www|m)\\\\.facebook\\\\.com'))\n      {\n        // This is to handle the case if there are multiple links within one parent node,\n        // we need to see if there are two childrens with two ProcessedIds. One for the link\n        // and one for the corresponding annotation. If so, we can return early.\n        const prevInsertedNode = link.node.parentNode.querySelector(`div[${CONSTANTS.processedid}=\"${link.pid}\"]`);\n        if (prevInsertedNode) return;\n      }\n      let divAnnotation = document.createElement('div');\n      this.setDivProperty(divAnnotation, link.url, linkinfo, link.pid);\n\n      const divImage = document.createElement('div');\n      Globals.ANNOTATION.imageCounter++;\n\n      const imageid = `${Globals.ANNOTATION.uid}_${Globals.ANNOTATION.imageCounter}`;\n      divImage.setAttribute('id', imageid);\n      divAnnotation.appendChild(divImage);\n\n      const imageClass = Globals.BackgroundCommon.toAnnotationImageClass(linkinfo);\n      divImage.setAttribute('class', `mcafee_${imageClass.toLowerCase()}`);\n      divImage.setAttribute('onselectstart', 'return false;');\n      divImage.setAttribute('oncontextmenu', 'return false;');\n\n      // Event handling when focus on elements for accessibility users\n      divImage.setAttribute('tabindex', 0);\n      divImage.style.outline = 'none';\n      divImage.addEventListener('focusin', (ev) =>\n      {\n        const toId = ev.target.getAttribute('id');\n        if (Globals.prevLink === null || Globals.prevLink !== toId)\n        {\n          Globals.ANNOTATION.eventHandler.showBalloon({ toId });\n          document.getElementById(`${CONSTANTS.bubbleLayer}-${Globals.ANNOTATION.uid}`).focus();\n          Globals.prevLink = toId;\n        }\n        else\n        {\n          Globals.prevLink = null;\n        }\n      });\n      // Event handling when you mouse in or enter the annotation image with your cursor\n      divImage.addEventListener('mouseenter', (ev) =>\n      {\n        const toId = ev.target.getAttribute('id');\n        Globals.ANNOTATION.eventHandler.showBalloon({ toId });\n      });\n\n      divImage.addEventListener('mouseleave', (ev) =>\n      {\n        Globals.ANNOTATION.eventHandler.hideBalloon(ev);\n      });\n\n      if (link.annotationNode)\n      {\n        divAnnotation = link.annotationNode.parentNode.insertBefore(divAnnotation, link.annotationNode.nextSibling);\n      }\n      else if (link.insertIntoLink)\n      {\n        // Check if there is already annotation as a child, if so do not insert another one.\n        // Annotation harvester gets hit multiple time\n        const children = link.node.childNodes;\n        for (let index = 0; index < children.length; index += 1)\n        {\n          const element = children[index];\n          if (element.getAttribute && element.getAttribute(CONSTANTS.mcafeeWaAnn)) return;\n\n          // Applying display style to non-annotation children, to give the inserted link better formatting.\n          if (link.styles && link.styles.display === 'inline') element.style.display = 'inline';\n        }\n\n        // Insert annotation image at the end of the url\n        divAnnotation = link.node.appendChild(divAnnotation);\n      }\n      else if (link.insertIntoSelector)\n      {\n        const selector = link.insertIntoSelector;\n        const currentNode = link.node.querySelector(selector);\n\n        // Insert annotation into specified node\n        if (!currentNode)\n        {\n          return;\n        }\n        divAnnotation = currentNode.appendChild(divAnnotation);\n      }\n      else\n      {\n        divAnnotation = link.node.parentNode.insertBefore(divAnnotation, link.node.nextSibling);\n      }\n\n      let styles = `\n        cursor: default;\n        display: inline-block;\n        float: none;\n        padding: 0px 0px 0px 4px;\n        position: relative;\n        top: ${(link.styles && link.styles.top) || '2px'};\n        vertical-align: ${(link.styles && link.styles.verticalAlign) || ''};\n        z-index: 1;\n      `;\n\n      if (link.styles && link.styles.bottom)\n      {\n        styles += `bottom: ${link.styles.bottom};`;\n      }\n\n      if (link.styles && link.styles.margin)\n      {\n        styles += `margin: ${link.styles.margin};`;\n      }\n\n      divAnnotation.style.cssText = styles;\n    }\n    catch (e)\n    {\n      Globals.Logger.error(e.message);\n    }\n  }\n\n  // Insert annotation for bing secure search\n  static insertAnnotationIntoLink(link, linkinfo)\n  {\n    try\n    {\n      const color = Globals.BackgroundCommon.toColor(linkinfo);\n\n      // Only show red and yellow annotation balloons\n      if (color === Color.RED || color === Color.YELLOW)\n      {\n        const divAnnotation = link.node;\n        this.setDivProperty(divAnnotation, link.url, linkinfo, link.pid);\n\n        link.node.addEventListener('mouseenter', (evt) =>\n        {\n          Globals.ANNOTATION.eventHandler.showBalloon(evt, true);\n        });\n\n        link.node.addEventListener('mouseleave', (evt) =>\n        {\n          Globals.ANNOTATION.eventHandler.hideBalloon(evt);\n        });\n      }\n    }\n    catch (e)\n    {\n      Globals.Logger.error(e.message);\n    }\n  }\n\n  /**\n   * Annotate the webpage.\n   * @param {Object}   amap           - Annotation map\n   * @param {String}   engine         - Search engine being used\n   * @param {Object[]} links          - Link array full of anchor tag objects\n   * @param {Boolean}  isSecureSearch - Is secure search on\n   */\n  static annotateWebPage(amap, engine, links, isSecureSearch)\n  {\n    BalloonCreator.createBalloon();\n\n    if (!document.getElementById('mc_style'))\n    {\n      this.createStyle();\n    }\n\n    if (!Globals.ANNOTATION.eventHandler)\n    {\n      Globals.ANNOTATION.eventHandler = new EventHandler(engine);\n    }\n\n    // Use predefined color names and set their values to 0 (counter)\n    const annotations = { ...Globals.CommonConstants.Color };\n\n    for (const color in annotations)\n    {\n      annotations[color] = 0;\n    }\n\n    const smaAnnotationStats = {\n      annotations,\n      site: engine.name\n    };\n\n    links.forEach((link) =>\n    {\n      const linkInfo = amap[link.url];\n\n      if (!linkInfo) return;\n\n      if (Globals.ANNOTATION.searchAnnotationOption === ANNOTATION_OPTIONS.all\n        || (Globals.ANNOTATION.searchAnnotationOption === ANNOTATION_OPTIONS.onlySecureSearch && isSecureSearch)\n        || (engine.socialMediaType && Globals.ANNOTATION.socialMediaToggle && engine.enabled))\n      {\n        if (engine.sourcetype === SEARCH_ENGINE_TYPES.BING && SearchEngineUtils.isBingSecureSearchInCookie())\n        {\n          this.insertAnnotationIntoLink(link, linkInfo);\n        }\n        else\n        {\n          this.insertAnnotationImage(link, linkInfo);\n        }\n\n        // Increase sma reputation stats\n        if (engine.socialMediaType)\n        {\n          const colorNumber = Globals.BackgroundCommon.toColor(linkInfo);\n          const colorString = Object.keys(Color).find((key) => Globals.CommonConstants.Color[key] === colorNumber);\n          smaAnnotationStats.annotations[colorString] += 1;\n        }\n      }\n    });\n\n    // Handle Telemetry\n    const options = {\n      identifier: Globals.TelemetryEventNames.SMA_REPUTATION,\n      site: smaAnnotationStats.site\n    };\n\n    for (const [key, value] of Object.entries(smaAnnotationStats.annotations))\n    {\n      options[key] = value;\n    }\n\n    Globals.ContextTelemetry.handle(options);\n    return true;\n  }\n}\n","// Annotation\r\nimport { Globals } from '../Common/globals';\r\nimport AnnotationInserter from './annotation_inserter';\r\nimport LinkHarvester from '../Common/link_harvester';\r\n\r\n/**\r\n * Responsible for processing the annotation results for a given url, obtaining the information from GTI.\r\n */\r\nexport default class AnnotationEngine\r\n{\r\n  constructor(engine)\r\n  {\r\n    this.engine = engine;\r\n  }\r\n\r\n  /**\r\n   * Function from timer that actually insert annotation to the links in the page.\r\n   * @param {Object}   jsonResponse   - Containing information about the category, reputation and if secure by McAfee (ufg) of the url\r\n   * @param {Object[]} links          - Full of annotation objects (url and their associated DOM node)\r\n   * @param {Boolean}  isSecureSearch - Is secure search being used\r\n   */\r\n  annotateProc(jsonResponse, links, isSecureSearch)\r\n  {\r\n    if (!jsonResponse)\r\n    {\r\n      Globals.Logger.error('The JSON response is null.');\r\n    }\r\n    else if (!jsonResponse.annotationMap)\r\n    {\r\n      Globals.Logger.error('Annotation nodes not available from response.');\r\n    }\r\n    else\r\n    {\r\n      Globals.Logger.log('Annotation process start.');\r\n      AnnotationInserter.annotateWebPage(jsonResponse.annotationMap, this.engine, links, isSecureSearch);\r\n    }\r\n  }\r\n\r\n  // Here first links that are not yet annonated are picked from the HTML document and then a GTIRequest is made to backend\r\n  // or any other local services to check the state of each of the URLs i.e. whether they are good or bad.\r\n  processPage()\r\n  {\r\n    Globals.Logger.log(`Harvesting links on: ${document.location.href}.`);\r\n\r\n    // Harvested links are passed to the callback in chunks or in toto as per the setting mentioned in coreProperties during initialization.\r\n    LinkHarvester.harvestLinks(this.engine, async (reqURLs, links) =>\r\n    {\r\n      if (reqURLs.length === 0) return;\r\n\r\n      // If there are URLs that have cache miss then alone make DSS request\r\n      Globals.Logger.log(`URL harvested: ${reqURLs.length}.`);\r\n\r\n      const tiResponse = await Globals.ANNOTATION.mtiRequestor.post(reqURLs);\r\n      if (tiResponse)\r\n      {\r\n        window.setTimeout(this.annotateProc.bind(this, tiResponse, links, this.engine.issecuresearch), 0);\r\n        // hack for fb\r\n        if (document.location.href.match('^http(s)?:\\\\/\\\\/(www|m)\\\\.facebook\\\\.com'))\r\n        {\r\n          window.setTimeout(this.annotateProc.bind(this, tiResponse, links, this.engine.issecuresearch), 1000);\r\n        }\r\n      }\r\n    });\r\n\r\n    Globals.BackgroundIPC.sendEngineStat(this.engine);\r\n  }\r\n\r\n  /**\r\n   * Engine Entry point. Process url provided.\r\n   */\r\n  processUrl()\r\n  {\r\n    window.setTimeout(this.processPage.bind(this), 0);\r\n  }\r\n}\r\n","// Annotation\r\nimport AnnotationEngine from './annotation_engine';\r\nimport { ANNOTATION_OPTIONS, SEARCH_ENGINE_TYPES, EngineType } from './annotation_variables';\r\n// Common\r\nimport SearchEngineUtils from '../Common/search_engine_utils';\r\nimport { Globals } from '../Common/globals';\r\n\r\nexport default class Annotation\r\n{\r\n  static annotate()\r\n  {\r\n    try\r\n    {\r\n      const engine = Globals.ANNOTATION.searchEngine.getEngineForUrl(document.location.href, Globals.ANNOTATION.browserType);\r\n\r\n      if (!engine)\r\n      {\r\n        Globals.Logger.log(`Unable to get engine for url ${document.location.href}`);\r\n        return false;\r\n      }\r\n\r\n      // If this is search engine and if annotations are turned off then do not proceed.\r\n      if (engine.enginetype === EngineType.SEARCH && Globals.ANNOTATION.searchAnnotationOption === ANNOTATION_OPTIONS.none)\r\n      {\r\n        return false;\r\n      }\r\n\r\n      // If the engine is of social media and if social media toggle is turned off then donot proceed\r\n      if (engine.enginetype === EngineType.SOCIALMEDIA && Globals.ANNOTATION.bkGlobals.socialMediaToggle === false)\r\n      {\r\n        return false;\r\n      }\r\n\r\n      if (Globals.ANNOTATION.activeURI !== document.location.href)\r\n      {\r\n        // If URI of page changed then clear the selector map maintained.\r\n        Globals.ANNOTATION.activeURI = document.location.href;\r\n      }\r\n\r\n      if (!Globals.ANNOTATION.isSearchHitSend)\r\n      {\r\n        Globals.ANNOTATION.isSearchHitSend = true;\r\n        let { issecuresearch } = engine;\r\n\r\n        // For yahoo and yandex - we can determine whether a url is secure search through regex (engines.json)\r\n        // For bing - we do the same & check the cookies for subsequent searches\r\n        if (engine.sourcetype === SEARCH_ENGINE_TYPES.BING)\r\n        {\r\n          issecuresearch = SearchEngineUtils.isBingSecureSearchInCookie();\r\n        }\r\n\r\n        if (issecuresearch)\r\n        {\r\n          Globals.ContextTelemetry.handle({\r\n            engineName: engine.name,\r\n            typeTag: Globals.UrlParser.getParam(document.location.href, 'type') || '',\r\n            identifier: Globals.TelemetryEventNames.SECURE_SEARCH_HIT\r\n          });\r\n        }\r\n      }\r\n\r\n      const annotationEngine = new AnnotationEngine(engine);\r\n      annotationEngine.processUrl();\r\n      return true;\r\n    }\r\n    catch (e)\r\n    {\r\n      Globals.Logger.error(e.message);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","export const MUTATION_RESPONSE = {\r\n  Continue: 0,\r\n  Skip: 1,\r\n  NoMoreRequired: 2\r\n};\r\n","// Common\r\nimport { Globals } from '../Common/globals';\r\nimport LinkHarvester from '../Common/link_harvester';\r\n// Annotation\r\nimport Annotation from '../Annotation/annotation';\r\n// Mutation observer\r\nimport { MUTATION_RESPONSE } from './mutation_response';\r\n\r\nexport default class AnnotationMutation\r\n{\r\n  constructor()\r\n  {\r\n    this.engine = Globals.ANNOTATION.searchEngine.getEngineForUrl(document.location.href, Globals.ANNOTATION.browserType);\r\n  }\r\n\r\n  /**\r\n   * Check to see if the page requires annotation like when anchor tags nested in the element.\r\n   * @param {Object} node - Element added\r\n   */\r\n  requireAnnotation(node)\r\n  {\r\n    if (!this.engine) return false;\r\n\r\n    const nodeName = node.nodeName.toLowerCase();\r\n    const { selectors } = this.engine;\r\n\r\n    if (nodeName === 'a' && LinkHarvester.shouldHarvestElement(node, selectors))\r\n    {\r\n      return true;\r\n    }\r\n\r\n    // Node may come with children, check in children if there are any links that require annotation\r\n    if (typeof node.getElementsByTagName === 'function')\r\n    {\r\n      for (const element of Array.from(node.getElementsByTagName('a')))\r\n      {\r\n        if (LinkHarvester.shouldHarvestElement(element, selectors))\r\n        {\r\n          return true; // No more notification required for this iteration.\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handles logic when new elements are added to the DOM and the observer is triggered\r\n   * @param {Object} node - Node added to the DOM\r\n   */\r\n  nodeAdded(node)\r\n  {\r\n    let flag = null;\r\n\r\n    // Annotations only occur on search result pages (and social media)\r\n    if (!Globals.ANNOTATION.isSearchPage)\r\n    {\r\n      flag = MUTATION_RESPONSE.NoMoreRequired;\r\n    }\r\n    else if (this.requireAnnotation(node))\r\n    {\r\n      Annotation.annotate();\r\n      flag = MUTATION_RESPONSE.Skip;\r\n    }\r\n    else\r\n    {\r\n      flag = MUTATION_RESPONSE.Continue;\r\n    }\r\n\r\n    return flag;\r\n  }\r\n}\r\n","export const ANNOTATION_PROPERTIES = {\r\n  certified: {\r\n    highlightColor: '#CCFFCC',\r\n    color: 'green',\r\n    width: 16,\r\n    height: 16,\r\n    icon: 'images/annotation/green_icon.svg'\r\n  },\r\n\r\n  ok: {\r\n    highlightColor: '#CCFFCC',\r\n    color: 'green',\r\n    width: 16,\r\n    height: 16,\r\n    icon: 'images/annotation/green_icon.svg'\r\n  },\r\n\r\n  info: {\r\n    highlightColor: '#F7F995',\r\n    color: 'yellow',\r\n    width: 16,\r\n    height: 16,\r\n    icon: 'images/annotation/yellow_icon.svg'\r\n  },\r\n\r\n  warn: {\r\n    highlightColor: '#FFAAAA',\r\n    color: 'red',\r\n    width: 16,\r\n    height: 16,\r\n    icon: 'images/annotation/red_icon.svg'\r\n  },\r\n\r\n  unknown: {\r\n    highlightColor: '#FFFFFF',\r\n    color: 'white',\r\n    width: 16,\r\n    height: 16,\r\n    icon: 'images/annotation/white_icon.svg'\r\n  }\r\n};\r\n","export const BALLOON_PROPERTIES = {\r\n  logoImage: 'images/web_advisor/logo.png',\r\n  width: '325px',\r\n  appearance:\r\n  {\r\n    color_0:\r\n    {\r\n      srcImage: 'images/balloon/green_icon.png',\r\n      backgroundColor: '#3DA288'\r\n    },\r\n    color_1:\r\n    {\r\n      srcImage: 'images/balloon/yellow_icon.png',\r\n      backgroundColor: '#FF7900'\r\n    },\r\n    color_2:\r\n    {\r\n      srcImage: 'images/balloon/red_icon.png',\r\n      backgroundColor: '#FF3838'\r\n    },\r\n    color_3:\r\n    {\r\n      srcImage: 'images/balloon/white_icon.png',\r\n      backgroundColor: '#A19C9C'\r\n    },\r\n    color_4:\r\n    {\r\n      srcImage: 'images/balloon/green_icon.png',\r\n      backgroundColor: '#3DA288'\r\n    },\r\n  }\r\n};\r\n","// Mutation Observer\r\nimport AnnotationMutation from './MutationObserver/annotation_mutation';\r\nimport { MUTATION_RESPONSE } from './MutationObserver/mutation_response';\r\n// Annotation\r\nimport Annotation from './Annotation/annotation';\r\nimport { ANNOTATION_PROPERTIES } from './Annotation/annotation_properties';\r\n// Balloon\r\nimport { BALLOON_PROPERTIES } from './Balloon/balloon_properties';\r\n// Common\r\nimport { Globals } from './Common/globals';\r\n\r\n/**\r\n * Changes that must take place when the DOM is updated (annotations, autoplaying vids, etc.)\r\n */\r\nfunction getHandlers()\r\n{\r\n  const handlers = [];\r\n  handlers.push(new AnnotationMutation());\r\n  return handlers.map((handler) => ({ handler, skip: false }));\r\n}\r\n\r\n/**\r\n * List of mutation records describing what has changed with each of them\r\n * @param {Array} records\r\n */\r\nfunction handleMutations(records)\r\n{\r\n  const handlers = getHandlers();\r\n\r\n  for (const handler of handlers)\r\n  {\r\n    handler.skip = false;\r\n  }\r\n\r\n  records.forEach((record) =>\r\n  {\r\n    // Iterate through all added nodes\r\n    for (const addedElement of record.addedNodes)\r\n    {\r\n      let skipHandler = 0;\r\n\r\n      for (let index = 0; index < handlers.length; index++)\r\n      {\r\n        const result = handlers[index].handler.nodeAdded(addedElement);\r\n\r\n        switch (result)\r\n        {\r\n          case MUTATION_RESPONSE.Skip:\r\n            handlers[index].handler.skip = true;\r\n            skipHandler++;\r\n            break;\r\n          case MUTATION_RESPONSE.NoMoreRequired:\r\n            handlers.splice(index, 1);\r\n            break;\r\n        }\r\n      }\r\n\r\n      if (skipHandler === handlers.length)\r\n      {\r\n        return;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default class Annotations\r\n{\r\n  static initializeSettings(config)\r\n  {\r\n    const {\r\n      Globals: ExtGlobals,\r\n      BackgroundIPC: ExtBackgroundIPC,\r\n      BackgroundCommon: ExtBackgroundCommon,\r\n      ContextTelemetry: ExtContentTelemetry,\r\n      EventNames,\r\n      UrlParser: ExtUrlParser,\r\n      Utils: ExtUtils,\r\n      Commands: ExtCommands,\r\n      CommonConstants: ExtCommonConstants,\r\n      Logger: ExtLogger\r\n    } = config;\r\n\r\n    Globals.BackgroundIPC = ExtBackgroundIPC;\r\n    Globals.BackgroundCommon = ExtBackgroundCommon;\r\n    Globals.ContextTelemetry = ExtContentTelemetry;\r\n    Globals.TelemetryEventNames = EventNames;\r\n    Globals.UrlParser = ExtUrlParser;\r\n    Globals.Utils = ExtUtils;\r\n    Globals.extension = config.extension;\r\n    Globals.Commands = ExtCommands;\r\n    Globals.CommonConstants = ExtCommonConstants;\r\n    Globals.Logger = ExtLogger;\r\n\r\n    // Content and Background options for the annotation\r\n    Globals.ANNOTATION = {\r\n      ...ExtGlobals,\r\n      ANNOTATION_PROPERTIES,\r\n      BALLOON_PROPERTIES\r\n    };\r\n  }\r\n\r\n  static initPageWatcher()\r\n  {\r\n    const observer = new MutationObserver(handleMutations);\r\n\r\n    observer.observe(document, {\r\n      childList: true,\r\n      subtree: true\r\n    });\r\n  }\r\n\r\n  static annotate()\r\n  {\r\n    Globals.ANNOTATION.isSearchPage = Annotation.annotate();\r\n  }\r\n}\r\n","import { Color, BlockState, KEY_CODES_RANGE } from '@extension/common/constants';\r\n\r\nexport const FEATURE_TAB_ID = {\r\n  WHITELIST: 'whitelist',\r\n  PREFERENCE: 'preference',\r\n  STATISTICS: 'statistics',\r\n  ABOUT: 'about',\r\n};\r\n\r\n/* Acts as Event Names and also as Trigger Identifiers for handling telemetry */\r\nexport const EventNames = {\r\n  BLOCK_PAGE: 'Block_Page',\r\n  BROWSER_ACTION_CLICKED: 'BrowserAction_Clicked',\r\n  BROWSER_NAVIGATE: 'Browser_Navigate',\r\n  CRYPTOJACKING_BLOCK: 'Cryptojacking_Block',\r\n  DARK_WEB_SCAN: 'DarkWebMonitoring',\r\n  DOWNLOAD_BLOCK: 'Download_Block',\r\n  GET_SEARCH_EXTENSION: 'EmbedSearchExtension',\r\n  PROFILE_INFO: 'ProfileInfo',\r\n  REMOTE_ACCESS_TROJAN: 'RemoteAccessTrojan',\r\n  SEARCH_SUGGEST_BLOCK_PAGE: 'SearchSuggest_BlockPage',\r\n  SEARCH_SUGGEST: 'SearchSuggest',\r\n  SECURE_SEARCH_HIT: 'Secure_Search_Hit',\r\n  SIDEBAR_PANEL: 'SideBar_Panel',\r\n  SITE_REPORT: 'SiteReport',\r\n  SMA_REPUTATION: 'SMA_Reputation',\r\n  TOAST: 'Toast',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  WSS_ANALYTICS: 'WSS_Analytics',\r\n  APS: {\r\n    EVENT_NAME: 'AdvancedProtectionSignals',\r\n    IMPRESSION_BALLOON: 'IMPRESSION_BALLOON',\r\n    IMPRESSION_HOVER: 'IMPRESSION_HOVER',\r\n    CLOSE_BALLOON: 'CLOSE_BALLOON',\r\n    TOAST_CLOSE: 'TOAST_CLOSE',\r\n    TOAST: 'toast',\r\n    BALLOON: 'balloon',\r\n  },\r\n};\r\n\r\nexport const ToastTypes = {\r\n  REGULAR_TOAST: 'RegularToast',\r\n  EFFICACY_TOAST: 'Efficacy_SS',\r\n};\r\n\r\nexport const ImpressionNames = {\r\n  BROWSER_ACTION_CLICKED: 'BrowserActionClicked',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  BLOCK_PAGE: 'BlockPage',\r\n  SECURE_SEARCH_HIT: 'SecureSearchHit',\r\n  CRYPTOJACKING_BLOCK: 'CryptojackingBlock',\r\n  SIDEBAR_PANEL: 'SideBarPanel',\r\n  SMA_REPUTATION: 'SMAReputation',\r\n  DOWNLOAD_BLOCK: 'DownloadBlock',\r\n};\r\n\r\nexport const InteractionTypes = {\r\n  IMPRESSION: 'Impression',\r\n  WEBADVISOR: 'WebAdvisor',\r\n  CRYPTOJACKING: {\r\n    LEARN_MORE_CLICKED: 'LearnMoreClicked',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  SIDEBAR_PANEL: {\r\n    MAIN: 'Main',\r\n  },\r\n  SELECTION: 'Selection',\r\n  DISMISSED: 'Dismissed',\r\n  HOVERED: 'Hovered',\r\n  CLOSE_CLICKED: 'CloseClicked',\r\n  CLICKED: 'Clicked',\r\n  ENABLE: 'Enable',\r\n  ADD: 'Add',\r\n  RAT_DETECTION: {\r\n    ACKNOWLEDGED: 'Acknowledged',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  ACCEPTED: 'Accepted',\r\n  DECLINED: 'Declined',\r\n  ACKNOWLEDGED: 'Acknowledged',\r\n  CLOSE: 'Close',\r\n  NEXT: 'Next',\r\n  GOT_IT: 'GotIt',\r\n  HOVER: 'Hover',\r\n};\r\n\r\nexport const PageLevel = {\r\n  TOP: 'Top',\r\n  FRAME: 'Frame',\r\n  INLINE: 'Inline',\r\n};\r\n\r\nexport const BLOCK_PAGE_STYLE = {\r\n  EDUCATION: 'Education',\r\n  NORMAL: 'Normal',\r\n};\r\n\r\nexport const SETTING_TABS = {\r\n  ABOUT: 'About',\r\n  PREFERENCES: 'Preferences',\r\n  WHITELIST: 'Whitelist',\r\n  STATS: 'UserStatistics',\r\n};\r\n\r\nexport const TelemetryColor = {\r\n  UNKNOWN: 'UNKNOWN',\r\n  RED: 'Red',\r\n  YELLOW: 'Yellow',\r\n};\r\n\r\nexport const TelemetryBlockState = {\r\n  GREEN: 'Green',\r\n  YELLOW: 'Yellow',\r\n  RED: 'Red',\r\n  UNKNOWN: 'UNKNOWN',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  PHISHING: 'Phishing',\r\n};\r\n\r\nexport const SearchType = {\r\n  DEFAULT: 'DefaultSearch',\r\n};\r\n\r\n// For telemetry identification and message storing\r\nexport const TelemetryTerms = {\r\n  ACTION: {\r\n    CLICK: 'click',\r\n    KEYDOWN: 'keydown',\r\n    RETURN_KEY_CODE: 13,\r\n    SHOW: 'show',\r\n    SEARCH_SUGGEST_KEY_CODES: [8, 32, 46,\r\n      ...KEY_CODES_RANGE(48, 57), ...KEY_CODES_RANGE(65, 90), ...KEY_CODES_RANGE(96, 107),\r\n      ...KEY_CODES_RANGE(109, 111), ...KEY_CODES_RANGE(186, 192), ...KEY_CODES_RANGE(219, 222)], // whitelistedKeys are keycodes which results in triggerring a search suggest\r\n  },\r\n  MISC: {\r\n    // Trigger states\r\n    LOADED: 'Loaded',\r\n    CHECKED: 'checked',\r\n    // Other terms\r\n    UNKNOWN: 'UNKNOWN',\r\n    ACTION_PANEL: 'ActionPanel',\r\n    ACCEPTED: 'Accepted',\r\n    DECLINED: 'Declined',\r\n    SETTINGS_TAB_PREFIX: 'settings_tab_',\r\n    GREEN: 'GREEN',\r\n    YELLOW: 'YELLOW',\r\n    RED: 'RED',\r\n    PREFERENCE: 'Preference',\r\n    DEFAULT: 'default',\r\n  },\r\n  // Search engine annotations\r\n  SEARCH_ENGINE: {\r\n    GOOGLE: 'google',\r\n    YAHOO: 'yahoo',\r\n  },\r\n  // Social media annotations\r\n  SOCIAL_MEDIA: {\r\n    LINKEDIN: 'linkedin',\r\n    FACEBOOK: 'facebook',\r\n    YOUTUBE: 'youtube',\r\n    INSTAGRAM: 'instagram',\r\n    REDDIT: 'reddit',\r\n    TWITTER: 'twitter',\r\n  },\r\n};\r\n\r\nexport class CommonTelemetry\r\n{\r\n  static toColorTelemetry(color)\r\n  {\r\n    let colorStr = TelemetryColor.UNKNOWN;\r\n    switch (color)\r\n    {\r\n      case Color.RED:\r\n        colorStr = TelemetryColor.RED;\r\n        break;\r\n      case Color.YELLOW:\r\n        colorStr = TelemetryColor.YELLOW;\r\n        break;\r\n    }\r\n    return colorStr;\r\n  }\r\n\r\n  static toTelemetryBlockState(blockState)\r\n  {\r\n    let blockStateStr = TelemetryBlockState.UNKNOWN;\r\n    switch (blockState)\r\n    {\r\n      case BlockState.GREEN:\r\n        blockStateStr = TelemetryBlockState.GREEN;\r\n        break;\r\n      case BlockState.YELLOW:\r\n        blockStateStr = TelemetryBlockState.YELLOW;\r\n        break;\r\n      case BlockState.RED:\r\n        blockStateStr = TelemetryBlockState.RED;\r\n        break;\r\n      case BlockState.TYPOSQUATTING:\r\n        blockStateStr = TelemetryBlockState.TYPOSQUATTING;\r\n        break;\r\n      case BlockState.PHISHING:\r\n        blockStateStr = TelemetryBlockState.PHISHING;\r\n        break;\r\n    }\r\n    return blockStateStr;\r\n  }\r\n\r\n  static toTelemetrySettingTab(tabName)\r\n  {\r\n    let tabNameStr = SETTING_TABS.PREFERENCES;\r\n    switch (tabName)\r\n    {\r\n      case FEATURE_TAB_ID.WHITELIST:\r\n        tabNameStr = SETTING_TABS.WHITELIST;\r\n        break;\r\n      case FEATURE_TAB_ID.STATISTICS:\r\n        tabNameStr = SETTING_TABS.STATS;\r\n        break;\r\n      case FEATURE_TAB_ID.ABOUT:\r\n        tabNameStr = SETTING_TABS.ABOUT;\r\n        break;\r\n    }\r\n    return tabNameStr;\r\n  }\r\n}\r\n","// Background\nimport { BackgroundGlobals } from '@extension/background/background_globals';\n// Common\nimport { BlockState, BrowserType, BuildSettings, Color, Score } from '@extension/common/constants';\nimport { BackgroundConstants } from '@extension/common/background_constants';\nimport { extension } from '@extension/common/webextension';\nimport { Logger } from '@extension/common/logger';\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\n// @mcafee\nimport ResourceManager from '@mcafee/wa-annotations/Common/resource_manager';\n\n/**\n * TODO: Comments\n */\nexport default class BackgroundCommon\n{\n  static async toGTICategoriesString(categories, includeDescription = false)\n  {\n    const getRes = (l10nId) => new Promise((resolve) =>\n    {\n      ResourceManager.getResString(l10nId, (res) => resolve(res));\n    });\n\n    const getCategoryStrings = async (categoryId, includeDescription) =>\n    {\n      const newCategory = {};\n\n      const name = await getRes(`category_id_${categoryId}_name`);\n      newCategory.name = name;\n\n      if (includeDescription)\n      {\n        const description = await getRes(`category_id_${categoryId}_description`);\n        newCategory.description = description;\n      }\n\n      return newCategory;\n    };\n\n    const promises = [];\n    for (const category of categories)\n    {\n      promises.push(getCategoryStrings(category, includeDescription));\n    }\n\n    const newCategories = await Promise.all(promises);\n    return newCategories;\n  }\n\n  /**\n   * Determine the shorthand browser type name based on its corresponding index value.\n   * @returns {String} - The browser name (shorthand)\n   */\n  static browserTypeToString(toLowerCase = false)\n  {\n    let browserType = '';\n    switch (BuildSettings.BROWSER_TYPE)\n    {\n      case 1:\n        browserType = 'FF';\n        break;\n      case 2:\n        browserType = 'CH';\n        break;\n      case 3:\n        browserType = 'ED';\n        break;\n      default:\n        browserType = 'UN';\n    }\n\n    return toLowerCase ? browserType.toLowerCase() : browserType;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toImagePaths(imageName)\n  {\n    let imagePath = 'images/browser_action/';\n\n    const legacyImageName = imageName.startsWith('small_') ? imageName : `small_${imageName}`;\n\n    switch (legacyImageName)\n    {\n      case 'small_button_green.gif':\n        imagePath += 'green';\n        break;\n      case 'small_button_yellow.gif':\n        imagePath += 'yellow';\n        break;\n      case 'small_button_red.gif':\n        imagePath += 'red';\n        break;\n      case 'small_button_grey.gif':\n        imagePath += 'white';\n        break;\n      case 'small_button_disabled.gif':\n        imagePath += 'disabled';\n        break;\n      default:\n        imagePath += imageName;\n        break;\n    }\n\n    // 16 and 32 used by Chrome/Firefox, 20 and 40 used by Edge\n    const imagePaths = {\n      size16: `${imagePath}_16.png`,\n      size20: `${imagePath}_20.png`,\n      size32: `${imagePath}_32.png`,\n      size40: `${imagePath}_40.png`\n    };\n\n    return imagePaths;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static colorToImagePaths(color)\n  {\n    let imageName = 'white';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageName = 'green';\n        break;\n      case Color.YELLOW:\n        imageName = 'yellow';\n        break;\n      case Color.RED:\n        imageName = 'red';\n        break;\n      case Color.UNKNOWN:\n        imageName = 'white';\n        break;\n      case Color.DISABLED:\n        imageName = 'disabled';\n        break;\n    }\n\n    return BackgroundCommon.toImagePaths(imageName);\n  }\n\n  /**\n   * Return the appropriate class for the annotation item\n   * @param {Object} annotationItem - Reputation object returned by the GTI server\n   */\n  static toAnnotationImageClass(annotationItem)\n  {\n    const color = BackgroundCommon.toColor(annotationItem);\n\n    let imageClass = '';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageClass = 'OK';\n        break;\n      case Color.RED:\n        imageClass = 'WARN';\n        break;\n      case Color.YELLOW:\n        imageClass = 'INFO';\n        break;\n      case Color.UNKNOWN:\n        imageClass = 'UNKNOWN';\n        break;\n    }\n\n    return imageClass;\n  }\n\n  /**\n  * Determines if the URL provided is malicious or not.\n  * @param   {Object} categories - Url info deemed phishing / malicious\n  * @returns {boolean} - Outcome of the phishing site check\n  */\n  static isPhishingURI(categories)\n  {\n    return categories && categories.includes(BackgroundConstants.PHISHING_CATEGORY);\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toBlockState(annItem)\n  {\n    const colorVal = BackgroundCommon.toColor(annItem);\n\n    if (colorVal === Color.RED || colorVal === Color.YELLOW)\n    {\n      if (BackgroundCommon.isPhishingURI(annItem.category))\n      {\n        return BlockState.PHISHING;\n      }\n    }\n\n    // Because the color and block state values correspond to the numbers, you can simply return the color value\n    return isNaN(colorVal) ? BlockState.UNKNOWN : colorVal;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toColor(annItem)\n  {\n    let color = Color.UNKNOWN;\n\n    if (annItem === undefined || annItem.trust === undefined)\n    {\n      return color;\n    }\n\n    if (annItem.trust >= Score.CLEAN)\n    {\n      color = Color.GREEN;\n    }\n    else if (annItem.trust > Score.UNVERIFIED)\n    {\n      color = Color.YELLOW;\n    }\n    else if (annItem.trust >= Score.DIRTY)\n    {\n      color = Color.RED;\n    }\n    else\n    {\n      color = Color.UNKNOWN;\n    }\n\n    return color;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toSiteReportUrl(url)\n  {\n    const siteReportUrl = extension.runtime.getURL('html/site_status_site_report.html');\n    return `${siteReportUrl}?url=${escape(url)}`;\n  }\n\n  static isExtensionUrl(url)\n  {\n    // Chrome/Edge Internal Pages\n    if ((BrowserType.CHROME === BuildSettings.BROWSER_TYPE && url.startsWith(`chrome-extension://${extension.runtime.id}`))\n    || (BrowserType.EDGE === BuildSettings.BROWSER_TYPE && url.startsWith(`ms-browser-extension://${extension.runtime.id}`)))\n    {\n      return true;\n    }\n\n    // Firefox Internal Pages\n    if (BrowserType.FIREFOX === BuildSettings.BROWSER_TYPE)\n    {\n      let firefoxInternalUUID = extension.i18n.getMessage('@@extension_id');\n      if (!firefoxInternalUUID)\n      {\n        const internalPageUrl = extension.runtime.getURL('images/web_advisor/logo.png');\n        // get internal uuid from resource url extracting characters between 'moz-extension://' and '/'\n        // sample url: moz-extension://ABCDE/images/web_advisor/logo.png => ABCDE\n        const urlSplit = internalPageUrl.split('/');\n        firefoxInternalUUID = (urlSplit.length >= 3) ? urlSplit[2] : '';\n      }\n\n      return firefoxInternalUUID && url.startsWith(`moz-extension://${firefoxInternalUUID}`);\n    }\n\n    return false;\n  }\n\n  // Check whether a url is a siteadvisor url or our own extension url\n  static isSafeUrl(url)\n  {\n    return BackgroundCommon.isSiteAdvisorUrl(url) || BackgroundCommon.isExtensionUrl(url);\n  }\n\n  static isSiteAdvisorUrl(url)\n  {\n    return (url.startsWith(`http://${BackgroundConstants.SITE_ADVISOR_URL}`)\n    || url.startsWith(`https://${BackgroundConstants.SITE_ADVISOR_URL}`));\n  }\n\n  static isPropertRedirectUrl(url)\n  {\n    return BackgroundCommon.isPropertyWebURL(url) || url.startsWith('edge://') || url.startsWith('chrome://');\n  }\n\n  // Check whether a url is a proper web url\n  static isProperWebURL(url)\n  {\n    if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('ftp://'))\n    {\n      return true;\n    }\n\n    return false;\n  }\n\n  static getUINumber(number)\n  {\n    // sample output:\n    // 0: 0\n    // 999: 999\n    // 1010: 1k+\n    // 1251: 1.2k+\n    // 9999: 9.9k+\n    // > 10000: 10k+\n    const THOUSAND = 1000;\n    const TEN_THOUSAND = 10000;\n    if (number >= TEN_THOUSAND) return '10k+';\n    if (number >= THOUSAND)\n    {\n      let decimal = (number / THOUSAND).toFixed(1);\n      decimal = decimal.substring(2, 3) === '0' ? decimal.substring(0, 1) : decimal;\n      return `${decimal}k+`;\n    }\n    return `${number}`;\n  }\n\n  static hasEpochTimeElapsed(initialEpochInSeconds, timePassedinSeconds)\n  {\n    const nowInSeconds = (new Date()).getTime() / 1000;\n    if (nowInSeconds > initialEpochInSeconds + timePassedinSeconds) return true;\n    return false;\n  }\n\n  static isPersonalPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static isActivityPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static blockRequest(tabId, url, message)\n  {\n    extension.declarativeNetRequest.getDynamicRules(\n      (rules) =>\n      {\n        const found = rules.filter((rule) => rule.condition.urlFilter === url);\n\n        if (found.length === 0)\n        {\n          extension.declarativeNetRequest.updateDynamicRules(\n            {\n              addRules: [{\n                id: rules.length + 1,\n                condition: {\n                  domains: ['<all_urls>'],\n                  urlFilter: url,\n                  resourceTypes: ['main_frame']\n                },\n                action: {\n                  type: 'block'\n                }\n              }]\n            },\n            () =>\n            {\n              Logger.log(`${message} ${url} ${tabId}`);\n            }\n          );\n        }\n      }\n    );\n  }\n}\n","import {\r\n  EventNames,\r\n  ImpressionNames,\r\n  InteractionTypes,\r\n  SearchType,\r\n  CommonTelemetry,\r\n  FEATURE_TAB_ID,\r\n  PageLevel,\r\n  TelemetryTerms,\r\n  ToastTypes,\r\n} from '@extension/telemetry/common_telemetry';\r\nimport BackgroundCommon from '@extension/common/background_common';\r\n\r\nexport class TelemetryMessageModifiers\r\n{\r\n  constructor(options)\r\n  {\r\n    this._options = options;\r\n    this.TELEMETRY_HANDLERS = this.initializeTelemetryHandler();\r\n  }\r\n\r\n  // Traverse through the TELEMETRY_HANDLERS Json object and fetch the list of messages which match the 'identifier'\r\n  fetchTelemetryHandlers(identifier)\r\n  {\r\n    const handlers = [];\r\n    this.TELEMETRY_HANDLERS.forEach((handler) =>\r\n    {\r\n      if (!handler.trigger.identifier || (identifier === handler.trigger.identifier))\r\n      {\r\n        handlers.push(handler);\r\n      }\r\n    });\r\n    return handlers;\r\n  }\r\n\r\n  /*\r\n    JSON object pertaining the list of all the Telemetry attributes needed for identifing the event/action.\r\n    Also returns the list of messages associated with each identifier which is the telemetry message to be sent.\r\n  */\r\n  initializeTelemetryHandler()\r\n  {\r\n    return [\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          sendTelemetry: this._options.isFromBackground || false\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: (this._options.level === PageLevel.FRAME) ? 'UNKNOWN' : (this._options.blockPageStyle || 'UNKNOWN'),\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: this._options.blockPageStyle || 'UNKNOWN',\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_ACTION_CLICKED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BROWSER_ACTION_CLICKED,\r\n              interaction_type: InteractionTypes.WEBADVISOR,\r\n              badge_count: this._options.count,\r\n              _event_name: EventNames.BROWSER_ACTION_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_NAVIGATE,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              url: this._options.url,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.BROWSER_NAVIGATE\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_learn_link',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.LEARN_MORE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '.crypto-block-actions__close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_banner_allow_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.WHITELISTED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DOWNLOAD_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.DOWNLOAD_BLOCK,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              process_name: TelemetryTerms.MISC.UNKNOWN,\r\n              file_name: TelemetryTerms.MISC.UNKNOWN,\r\n              colour: TelemetryTerms.MISC.UNKNOWN,\r\n              ui_type: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.DOWNLOAD_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.PREFERENCE}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.WHITELIST}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.WHITELIST),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.ABOUT}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.ABOUT),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.STATISTICS}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.STATISTICS),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          selector: '#block_page_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          selector: '#typosquatting_message_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SECURE_SEARCH_HIT,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: ImpressionNames.SECURE_SEARCH_HIT,\r\n              search_type: SearchType.DEFAULT,\r\n              _event_name: EventNames.SECURE_SEARCH_HIT,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              type_tag: this._options.typeTag,\r\n              provider_type: this._options.engineName\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SIDEBAR_PANEL,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SIDEBAR_PANEL,\r\n              interaction_type: this._options.interaction_type,\r\n              _event_name: EventNames.SIDEBAR_PANEL,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SMA_REPUTATION,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.GREEN,\r\n              count: this._options[TelemetryTerms.MISC.GREEN],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.RED,\r\n              count: this._options[TelemetryTerms.MISC.RED],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.YELLOW,\r\n              count: this._options[TelemetryTerms.MISC.YELLOW],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.UNKNOWN,\r\n              count: this._options[TelemetryTerms.MISC.UNKNOWN],\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TOAST,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              _event_name: 'ToastCheckCompleted',\r\n              category: 'ToastCheck',\r\n              triggerType: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              _event_name: 'Secure_Search_Toast',\r\n              category: 'SecureSearchToast',\r\n              action_type: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              provider: (this._options.toastData) ? (this._options.toastData.providerId) : TelemetryTerms.MISC.UNKNOWN,\r\n              toastType: (this._options.toastData) ? (this._options.toastData.toastType) : ToastTypes.REGULAR_TOAST,\r\n              metadata: (this._options.toastData) ? (this._options.toastData.metadata) : TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TYPOSQUATTING,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.TYPOSQUATTING,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.TYPOSQUATTING\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#rat_detection_got_it_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.ACKNOWLEDGED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar_rat_detection_whitelist_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.WHITELISTED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.WSS_ANALYTICS,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.WSS_ANALYTICS,\r\n              message: this._options.message,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DARK_WEB_SCAN,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.DARK_WEB_SCAN,\r\n              category: EventNames.DARK_WEB_SCAN,\r\n              action_type: this._options.eventAction || TelemetryTerms.MISC.UNKNOWN,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              count: this._options.count || TelemetryTerms.MISC.UNKNOWN,\r\n              type: this._options.type,\r\n              flow_id: this._options.flowId,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.EVENT_NAME,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_HOVER,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.HOVER,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.CLOSE_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.TOAST_CLOSE,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: this._options.gotItButton ? InteractionTypes.GOT_IT : InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n    ];\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\n/////////////////////////////////\n//////////////////////////////////\n//////////\nexport default class Utils\n{\n  /**\n   * Creates a debounced function that delays invoking func until after wait\n   * milliseconds have elapsed since the last time the debounced function was invoked.\n   * source: http://davidwalsh.name/javascript-debounce-function\n  */\n  static debounce(func, wait, immediate)\n  {\n    let timeout;\n    return (...args) =>\n    {\n      const later = () =>\n      {\n        timeout = null;\n        if (!immediate) func(...args);\n      };\n\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(later, wait);\n      if (callNow) func(...args);\n    };\n  }\n\n  static isBrowserEN()\n  {\n    const language = extension.i18n.getUILanguage();\n    return language.toLowerCase().startsWith('en');\n  }\n\n  static isChromeBrowser()\n  {\n    // window.opr is only defined for opera. Edge Chromium has user agent Edg. So avoid these two as\n    // chrome extension can be installed even in these two popular browsers, window.navigator\n    const ua = navigator.userAgent.toLowerCase();\n\n    // Check if browser is chromium based, window.chrome\n    if (!ua.includes('chrome') || !!chrome === false) return false;\n\n    // check if it is opera browser, window.opr\n    if (ua.includes('opr')) return false;\n\n    // check if it is edge browser\n    if (ua.includes('edg')) return false;\n\n    return true;\n  }\n}\n\n/**\n * Vanilla JS solution to JQuery's $(document).ready() API\n */\nexport const onDOMContentReady = (cb) =>\n{\n  if (typeof document === 'undefined' || document === null)\n  {\n    return;\n  }\n\n  if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll))\n  {\n    cb();\n  }\n  else\n  {\n    document.addEventListener('DOMContentLoaded', cb);\n  }\n};\n\nexport const getBrowserInfo = () =>\n{\n  const ua = navigator.userAgent.toLowerCase();\n\n  const match = /(edge)\\/([\\w.]+)/.exec(ua)\n        || /(edg)\\/([\\w.]+)/.exec(ua)\n        || /(opr)[/]([\\w.]+)/.exec(ua)\n        || /(chrome)[ /]([\\w.]+)/.exec(ua)\n        || /(iemobile)[/]([\\w.]+)/.exec(ua)\n        || /(version)(applewebkit)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+).*(version)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+)/.exec(ua)\n        || /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua)\n        || /(msie) ([\\w.]+)/.exec(ua)\n        || (ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua))\n        || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua))\n        || [];\n\n  const platformMatch = /(ipad)/.exec(ua)\n        || /(ipod)/.exec(ua)\n        || /(windows phone)/.exec(ua)\n        || /(iphone)/.exec(ua)\n        || /(kindle)/.exec(ua)\n        || /(silk)/.exec(ua)\n        || /(android)/.exec(ua)\n        || /(win)/.exec(ua)\n        || /(mac)/.exec(ua)\n        || /(linux)/.exec(ua)\n        || /(cros)/.exec(ua)\n        || /(playbook)/.exec(ua)\n        || /(bb)/.exec(ua)\n        || /(blackberry)/.exec(ua)\n        || [];\n\n  const matched = {\n    browser: match[5] || match[3] || match[1] || '',\n    version: match[4] || match[2] || '0',\n    platform: platformMatch[0] || '',\n  };\n\n  if (matched.browser === 'mozilla')\n  {\n    matched.browser = 'firefox';\n  }\n\n  if (matched.browser === 'edg')\n  {\n    matched.browser = 'edge';\n  }\n\n  return matched;\n};\n\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n */\nexport async function digestMessage(message)\n{\n  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8); // hash the message\n  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n  return hashHex;\n}\n/////////////////////////////////\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////\n \n/////\n///\n////////////////////\n/////////////////\n///////////////////////\n///////////////////\n////////////////////////\n//////////////////////\n////////////////////////////\n//////////////////\n/////////////////////////////\n///////\n//////\n\n////////////////////////////////////////////\n///\n///////////////\n///\n//////////////\n///\n \n//////////\n","import { TelemetryTerms } from '@extension/telemetry/common_telemetry';\r\nimport { TelemetryMessageModifiers } from '@extension/telemetry/telemetry_message_modifiers';\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\nimport { onDOMContentReady } from '@extension/utilities/utils';\r\n\r\nexport default class ContextTelemetry\r\n{\r\n  /* Registers the telemetry and fetches the respective messages based on the mapped 'identifiers'.\r\n     - Sends telemetry if associated with a User action event for a few respective cases.\r\n     - Else sends telemetry based on the 'sendTelemetry' attribute value for a few respective cases.\r\n     - Or else sends telemetry when the document is ready for a few respective cases.\r\n  */\r\n  static sendTelemetryMessages(options, handler)\r\n  {\r\n    const { sendTelemetry } = handler.trigger;\r\n    const triggerAction = handler.trigger.action;\r\n    const permittedActionList = [TelemetryTerms.ACTION.CLICK]; // All non-keyPress user actions\r\n\r\n    if (handler.trigger.selector && handler.trigger.action)\r\n    {\r\n      if (options.containerMeta)\r\n      {\r\n        const selectedTag = options.containerMeta.query(handler.trigger.selector);\r\n        if (selectedTag)\r\n        {\r\n          selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n        }\r\n      }\r\n      else\r\n      {\r\n        onDOMContentReady(() =>\r\n        {\r\n          const selectedTag = document.querySelector(handler.trigger.selector);\r\n          if (selectedTag)\r\n          {\r\n            selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    else if (sendTelemetry || (handler.trigger.state === options.state))\r\n    {\r\n      sendMessages();\r\n    }\r\n\r\n    /**\r\n     * Function handling the sending of telemetry, either from content or background script.\r\n     * @param {Object} event - Event object if invoked by an event listener. Can also be undefined if invoked directly by us.\r\n     */\r\n    function sendMessages(event)\r\n    {\r\n      handler.messages.forEach((spec) =>\r\n      {\r\n        const telemetryMessage = { ...spec.template };\r\n        // send telemetry only when its loaded or when its loaded with count != 0 (SMA Reputation)\r\n        const shouldSendMessage = ((sendTelemetry) && ((telemetryMessage.count !== undefined) ? (telemetryMessage.count !== 0) : true));\r\n\r\n        /* send telemetry when the key pressed is in WHITELISTEDKEYS array (found in 'options' JSON)\r\n           or if the user action is a click event */\r\n        let worthyAction = permittedActionList.includes(triggerAction);\r\n        if (triggerAction === TelemetryTerms.ACTION.KEYDOWN && options.whitelistedKeys)\r\n        {\r\n          const eventCode = event.keyCode;\r\n          worthyAction = options.whitelistedKeys.includes(eventCode);\r\n        }\r\n\r\n        if (shouldSendMessage || worthyAction)\r\n        {\r\n          if (options.isFromBackground)\r\n          {\r\n            BackgroundGlobals.messageDispatcher.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n          else\r\n          {\r\n            BackgroundIPC.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Accepts the paramters required for detecting the respective telemetry */\r\n  static handle(options)\r\n  {\r\n    const messageModifiers = new TelemetryMessageModifiers(options);\r\n    const telemetryHandlers = messageModifiers.fetchTelemetryHandlers(options.identifier);\r\n    telemetryHandlers.forEach((handler) =>\r\n    {\r\n      this.sendTelemetryMessages(options, handler);\r\n    });\r\n  }\r\n}\r\n","// Parses the passed URI to read out the value of a particular\r\n// query string parameter within the URI string.\r\nexport default class UrlParser\r\n// this is because we declare the function in both contentplg and iframeplg,\r\n// using const will throw double declaration error here\r\n{\r\n  // get meaningful part of an uri (the part before ? or #)\r\n  static getURI(uri)\r\n  {\r\n    let parts = uri.split('?');\r\n    if (parts.length > 1)\r\n    {\r\n      return parts[0];\r\n    }\r\n    parts = uri.split('#');\r\n    if (parts.length > 1)\r\n    {\r\n      return parts[0];\r\n    }\r\n    return uri;\r\n  }\r\n\r\n  // get a clean URI (subdomain + domain only)\r\n  static getCleanURI(uri)\r\n  {\r\n    let cleanURI = uri;\r\n    if (cleanURI.endsWith('/'))\r\n    {\r\n      cleanURI = cleanURI.slice(0, -1);\r\n    }\r\n    if (cleanURI.startsWith('http://'))\r\n    {\r\n      cleanURI = cleanURI.slice(7);\r\n    }\r\n    else if (cleanURI.startsWith('https://'))\r\n    {\r\n      cleanURI = cleanURI.slice(8);\r\n    }\r\n    return this.getURI(cleanURI);\r\n  }\r\n\r\n  static getParam(uri, paramName)\r\n  {\r\n    const qpos = uri.indexOf('?');\r\n    if (qpos === -1)\r\n    {\r\n      return null;\r\n    }\r\n    const qString = uri.substring(qpos + 1);\r\n\r\n    // Now split each param delimited by &\r\n    const params = qString.split('&');\r\n    for (let index = 0; index < params.length; ++index)\r\n    {\r\n      // Now separate out each param name and value delimited by =.\r\n      const position = params[index].indexOf('=');\r\n      if (position === -1)\r\n      {\r\n        continue;\r\n      }\r\n      const name = params[index].substring(0, position);\r\n      if (name === paramName)\r\n      {\r\n        const value = params[index].substring(position + 1);\r\n        return value;\r\n      }\r\n    }\r\n    return null; // param not found.\r\n  }\r\n\r\n  static getDomain(url)\r\n  {\r\n    // there must be http(s) in the url, if not then return empty\r\n    if (url === undefined || !/^https?:\\/\\//.test(url))\r\n    {\r\n      return '';\r\n    }\r\n    const domainURL = new URL(url);\r\n    return domainURL.hostname;\r\n  }\r\n\r\n  static decodeQueryParam(p)\r\n  {\r\n    return decodeURIComponent(p.replace(/\\+/g, ' '));\r\n  }\r\n}\r\n","// File to be modified at build time by webpack\r\n// Change WEBPACK_LOG_LEVEL to integer from LogLevels in logger.js\r\nexport const LoggerSettings = {\r\n  /* eslint-disable no-undef */\r\n  LOG_LEVEL: WEBPACK_LOG_LEVEL,\r\n  /* eslint-enable no-undef */\r\n};\r\n","import { LoggerSettings } from './logger_settings';\r\n\r\n/**\r\n * The different log levels considered when detecting / reporting errors in WebAdvisor\r\n * Note that a higher level means that more logs will be printed. (ie, level 3 will print level 2 and 1)\r\n */\r\nconst LogLevels = {\r\n  NONE: 0,\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * The different log types\r\n */\r\nconst LogTypes = {\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * Process type to distinguish which process called the logger\r\n */\r\nconst ProcessTypes = {\r\n  BACKGROUND: 'BACKGROUND',\r\n  CONTENT: 'CONTENT',\r\n  TELEMETRY: 'TELEMETRY',\r\n};\r\n\r\nconst ProcessStyleMap = {\r\n  DEFAULT: 'color: #000000; font-weight: normal; font-style:normal; background: #FFFFFF;',\r\n  BACKGROUND: 'color: #8D0DBA; font-weight: bold; background: #FFFFFF;',\r\n  CONTENT: 'color: #F54A26; font-weight: bold; background: #FFFFFF;',\r\n  TELEMETRY: 'color: #147831; font-weight: bold; background: #FFFFFF;',\r\n};\r\n\r\n// *****************************************************************************\r\n// To enable logs on a production build, open the background.js file and search\r\n// for \"LOG_LEVEL:\" and change the value from '0' to '3'\r\n// *****************************************************************************\r\nexport default class Logger\r\n{\r\n  static log(message)\r\n  {\r\n    processLog(message, LogTypes.INFO);\r\n  }\r\n\r\n  static error(message)\r\n  {\r\n    processLog(message, LogTypes.ERROR);\r\n  }\r\n\r\n  static warn(message)\r\n  {\r\n    processLog(message, LogTypes.WARN);\r\n  }\r\n\r\n  static debug(message)\r\n  {\r\n    processLog(message, LogTypes.DEBUG);\r\n  }\r\n}\r\n\r\nconst processLog = (message, logType) =>\r\n{\r\n  const logLevel = LoggerSettings.LOG_LEVEL;\r\n  if (logLevel === LogLevels.NONE)\r\n  {\r\n    return;\r\n  }\r\n\r\n  const processType = location.protocol === 'chrome-extension:' ? ProcessTypes.BACKGROUND : ProcessTypes.CONTENT;\r\n  const nowDate = new Date();\r\n  const logMessage = `%c[${processType} ${nowDate.toLocaleString([], { hour: '2-digit', minute: '2-digit', hour12: true })}]: %c${message}`;\r\n\r\n  const styleRegular = ProcessStyleMap.DEFAULT;\r\n  let hightlight = ProcessStyleMap[processType];\r\n\r\n  if (!hightlight)\r\n  {\r\n    hightlight = styleRegular;\r\n  }\r\n\r\n  if (logLevel >= LogLevels.ERROR && logType === LogTypes.ERROR)\r\n  {\r\n    console.error(message); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.INFO && logType === LogTypes.INFO)\r\n  {\r\n    console.log(logMessage, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.WARN && logType === LogTypes.WARN)\r\n  {\r\n    const uniqueHighlight = 'color: #FFA500; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cWARN - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.DEBUG && logType === LogTypes.DEBUG)\r\n  {\r\n    const uniqueHighlight = 'color: #FF33D7; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cDEBUG - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n};\r\n","export const HTICommands = {\r\n  HTI_REQUEST: 'HTI_REQUEST'\r\n};\r\n","// Grabs the reputation for urls in the web page.\r\n\r\nimport Logger from '../../Common-Utils-Package/logger/logger';\r\nimport { HTICommands } from './hti_commands';\r\n\r\n// This class delegates the call to background IPC.\r\nexport default class HTIProxy\r\n{\r\n  static async post(requestData)\r\n  {\r\n    try\r\n    {\r\n      const response = await chrome.runtime.sendMessage({\r\n        command: HTICommands.HTI_REQUEST,\r\n        requestData\r\n      });\r\n\r\n      return response;\r\n    }\r\n    catch (e)\r\n    {\r\n      Logger.error(e.message);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import HTIProxy from './hti/hti_proxy';\r\n\r\nexport default class ContentHTIRequestor\r\n{\r\n  static async post(requestData)\r\n  {\r\n    return HTIProxy.post(requestData);\r\n  }\r\n}\r\n","export const GTICommands = {\r\n  GTI_REQUEST: 'GTI_REQUEST'\r\n};\r\n","// Grabs the reputation for urls in the web page.\r\n\r\nimport Logger from '../../Common-Utils-Package/logger/logger';\r\nimport { GTICommands } from './gti_commands';\r\n\r\n// This class delegates the call to background IPC.\r\nexport default class GTIProxy\r\n{\r\n  static async post(requestData)\r\n  {\r\n    try\r\n    {\r\n      const response = await chrome.runtime.sendMessage({\r\n        command: GTICommands.GTI_REQUEST,\r\n        requestData\r\n      });\r\n\r\n      return response;\r\n    }\r\n    catch (e)\r\n    {\r\n      Logger.error(e.message);\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import GTIProxy from './gti/gti_proxy';\r\n\r\nexport default class ContentGTIRequestor\r\n{\r\n  static async post(requestData)\r\n  {\r\n    return GTIProxy.post(requestData);\r\n  }\r\n}\r\n","export default class ScriptBase\r\n{\r\n  constructor(pingCommand)\r\n  {\r\n    this.pingCommand = pingCommand;\r\n    this.basePingListener();\r\n  }\r\n\r\n  basePingListener(callback = null)\r\n  {\r\n    chrome.runtime.onMessage.addListener((request, sender, responseCb) =>\r\n    {\r\n      if (sender.id !== chrome.runtime.id)\r\n      {\r\n        return;\r\n      }\r\n\r\n      const { command } = request;\r\n      if (command === this.pingCommand)\r\n      {\r\n        responseCb({ content: true });\r\n        if (typeof callback === 'function') callback();\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Core engine\r\nimport { Globals } from '@core-engine/globals';\r\nimport ResourceRequestor from '@core-engine/resource_requestor';\r\nimport SearchEngine from '@core-engine/search_engine';\r\n// Common\r\nimport { SearchAnnotationActions } from '@extension/common/annotation_variables';\r\nimport { SocialMediaActions } from '@extension/common/sma_variables';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\nimport Annotations from '@mcafee/wa-annotations/index';\r\nimport ContextTelemetry from '@extension/telemetry/context_telemetry';\r\nimport { EventNames } from '@extension/telemetry/common_telemetry';\r\nimport BackgroundCommon from '@extension/common/background_common';\r\nimport { extension } from '@extension/common/webextension';\r\nimport { BlockState, Color, swapObjectPropertyAndValues } from '@extension/common/constants';\r\nimport { ContentCommands, SideBarCommands } from '@extension/common/commands';\r\nimport UrlParser from '@extension/common/url_parser';\r\nimport { Logger } from '@extension/common/logger';\r\n// Utilities\r\nimport Utils from '@extension/utilities/utils';\r\n// Submodule\r\nimport ContentHTIRequestor from '@mcafee/hti/content_hti_requestor';\r\nimport ContentGTIRequestor from '@mcafee/gti/content_gti_requestor';\r\n// Content Scripts:\r\nimport ScriptBase from '@extension/scripts/content_base';\r\n\r\nclass ContentAnnotation extends ScriptBase\r\n{\r\n  constructor()\r\n  {\r\n    super(ContentCommands.PING_CONTENT_ANNOTATION);\r\n  }\r\n\r\n  async main()\r\n  {\r\n    await this.getBackgroundOptions();\r\n    this.start();\r\n  }\r\n\r\n  start()\r\n  {\r\n    if (!Globals.bkGlobals)\r\n    {\r\n      return;\r\n    }\r\n\r\n    Globals.resourceRequestor = new ResourceRequestor();\r\n    Globals.searchEngine = new SearchEngine(Globals.bkGlobals.searchEngines, Globals.socialMediaToggle, Globals.socialMediaOption, Globals.bkGlobals.nativeSettings.SECURE_SEARCH_REGEXES);\r\n\r\n    // Initialize annotation settings\r\n    Annotations.initializeSettings({\r\n      CommonConstants: {\r\n        Color,\r\n        swapObjectPropertyAndValues,\r\n        BlockState\r\n      },\r\n      Commands: {\r\n        ContentCommands,\r\n        SideBarCommands\r\n      },\r\n      extension,\r\n      Globals: {\r\n        mtiRequestor: Globals.bkGlobals.isHTI ? ContentHTIRequestor : ContentGTIRequestor,\r\n        ...Globals\r\n      },\r\n      BackgroundIPC,\r\n      BackgroundCommon,\r\n      ContextTelemetry,\r\n      EventNames,\r\n      UrlParser,\r\n      Utils,\r\n      Logger,\r\n    });\r\n\r\n    Annotations.annotate();\r\n    Annotations.initPageWatcher();\r\n  }\r\n\r\n  async getBackgroundOptions()\r\n  {\r\n    const promises = [];\r\n    promises.push(BackgroundIPC.getBkGlobals(true));\r\n    promises.push(BackgroundIPC.searchAnnotation(SearchAnnotationActions.GET, {}));\r\n    promises.push(BackgroundIPC.socialMediaAnnotation(SocialMediaActions.GET, {}));\r\n\r\n    const [bkGlobals, searchAnnotationOption, smaData] = await Promise.all(promises);\r\n\r\n    Globals.bkGlobals = bkGlobals;\r\n    Globals.searchAnnotationOption = searchAnnotationOption;\r\n    Globals.socialMediaOption = smaData.socialMediaOption;\r\n    Globals.socialMediaToggle = smaData.socialMediaToggle;\r\n  }\r\n}\r\n\r\nconst contentAnnotation = new ContentAnnotation();\r\ncontentAnnotation.main();\r\n"],"names":["exports","nodeType","module","r","g","n","global","window","self","root","x","b","C","t","i","j","m","A","f","u","l","a","overflow","c","y","Math","floor","I","String","fromCharCode","E","e","RangeError","p","o","length","d","split","replace","join","F","charCodeAt","push","w","k","O","S","h","s","v","lastIndexOf","splice","version","ucs2","decode","encode","toASCII","test","toUnicode","slice","toLowerCase","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","globalThis","this","Function","nmd","paths","children","BlockState","GREEN","YELLOW","RED","UNKNOWN","HACKERSAFE","TYPOSQUATTING","PHISHING","Symbol","iterator","prop","Object","keys","BrowserType","BuildSettings","Color","DISABLED","Score","swapObjectPropertyAndValues","original","swapped","forEach","KEY_CODES_RANGE","start","end","Array","from","SocialMediaTypes","NONE","LINKEDIN","INSTAGRAM","YOUTUBE","FACEBOOK","TWITTER","REDDIT","SocialMediaActions","values","reduce","sum","value","SearchAnnotationActions","AnnotationOptions","ONLY_SECURE_SEARCH","ALL","key","extension","chrome","BackgroundCommands","ContentCommands","UNBLOCK_IFRAME","BALLOON_MESSAGE","PAGE_OVERLAY","SIDEBAR","TOPBAR","PING_CONTENT_ANNOTATION","PING_CONTENT_RAT_DETECTION","PING_CONTENT_IFRAME_BANNER","PING_CONTENT_AUTOPLAY_DETECTION","PING_CONTENT_SIDEBAR_MAIN","PING_CONTENT_FF_DL_OVERLAY","PING_CONTENT_CRYPTO_BLOCK","PING_CONTENT_FF_VIEWPORTS","PING_CONTENT_IDPS","PING_CONTENT_APS_TOAST","PING_CONTENT_APS_BALLOON","PING_CONTENT_APS_OBSERVER","PING_CONTENT_SITE_LISTENER","PING_IFRAME_FORM_CHECK","PING_IFRAME_FORM_DETECTION","PING_IFRAME_BLOCK","APS_REGISTRATION_PAGE","BROADCAST_TO_FOREGROUND","TRIGGER_AJ_TOAST","SideBarCommands","MAIN","RELOAD","SMA","RAT_DETECTION","ExternalCommands","PING","DISCONNECT_NATIVE","SET_PROPERTY_EX","SET_PROPERTY","GET_PROPERTY","CLEAR_GTI_CACHE","RESET_CRYPTO","CLEAN_TYPOSQUATING_WHITELIST","CLEAR_TYPOSQUATING_CACHE","CLEAN_CRYPTO_WHITELIST","CLEAN_RAT_WHITELIST","CLEAN_RAT_CACHE","REPLACE_TRUSTED_DOMAIN","VERIFY_GTI_REQUEST","VERIFY_TYPOSQUAT_SERVER","GET_ALL_WA_SETTINGS","SET_STORAGE_PROPERTY","GET_STORAGE_PROPERTY","REINIT_SCHEDULED_TASKS","OPEN_SETTINGS","OPEN_ACTION_PANEL","GET_MEMORY_FOOTPRINT","ENDURANCE_TEST_RESET","FORM_DETECTION_RESULT","SHOW_UNUSED_SELECTORS","SET_MTI_GLOBALS","NonZeroSocialMediaTypes","LocalStorageVariables","name","options","type","TabData","static","blockedIframes","cryptoBlockData","tabDomainTrusted","getResetValues","reset","tabId","update","get","BackgroundGlobals","cacheStore","getDefaultValues","set","newTabData","cache","delete","currentTabData","setTabBlockPageData","blockPageData","addBlockedFrame","getBlockedFrames","resetBlockedFrames","BackgroundConstants","TrustedDomains","Set","NativeSettingsPreprocess","trim","CH","FF","EDGE","IE","suffixBrowserMap","SYSTEM","USER","_browser","getBrowserSuffix","NativeSettings","DEV_MODE","scope","AFF_ID","BINARY_VERSION","EXTENSION_VERSION_CH","writeOnly","EXTENSION_VERSION_FF","EXTENSION_VERSION_ED","BROWSER_TYPE","USER_AGENT","SUGGESTION_URL","SCRIPT_GENERATED_DEFAULT_SS_URL","SECURE_SEARCH_REGEXES","preprocess","PreprocessSecureSearchRegEx","SHOW_SEARCH_SETTINGS","SECURE_SEARCH_TOAST_STAMP","SECURE_SEARCH_ANNOTATION_ONLY","SECURE_SEARCH_SHOW_ICONS","SECURE_SEARCH_CHOICE","SS_DEF","ANNOTATIONS_CHOICE_EXPLICIT","CURRENT_SAO_IN_EXTENSION","FF_EXTENSION_LAST_TOAST_TIME","FF_EXTENSION_TOAST_COUNT","CHECKLIST_START_INGORE_DATE_AV","CHECKLIST_START_IGNORE_DATE_FW","CHECKLIST_IGNORE_DURACTION","CHECKLIST_GRACE_PERIOD_AV","CHECKLIST_GRACE_PERIOD_FW","CHECKLIST_GRACE_PERIOD_DURATION","CRYPTOJACKING_DISABLED","SMA_USER_TOGGLE","SMA_ANNOTATION_OPTIONS","PAGES_SCANNED","PAGES_BLOCKED","DOWNLOADS_SCANNED","DOWNLOADS_BLOCKED","CRYPTO_BLOCKED","BLOCKPAGE_WHITELIST","TS_WHITELIST","CSP_ID_SETTING","UNINSTALL_SURVEY_ENABLED","UNINSTALL_SURVEY_URL","RAT_DETECTION_ENABLED","IDPS_FEATURE_ENABLED","APS_COHORT","APS_TOGGLE_SETTING","ALT_TRIGGER","IFRAME_FORM_CHECK_ENABLED","ANNOTATION_JOURNEY_COHORT","ANNOTATION_JOURNEY_TOAST","HTI_THROTTLE","MTI_CLIENT_ID","isTrustCheckRequired","ExtensionTelemetryUrl","scheduleManager","schedules","isNativeConnected","telemetryEngine","postInstallationPage","listenerManager","firefoxInternalUUID","shadowMode","browserType","ffViewports","garbageCollector","typoCache","logger","loglevel","messageDispatcher","port","tabData","tabIdToLastClickTime","Map","useNativeLogger","wasm","userAgentInBase64","typoSquattingServer","tldParser","cryptoBlacklist","trustedDomains","nativeSettings","searchSuggest","ratBlacklist","domain","urls","updatedByNative","wssMessageDispatcher","wssNativeClient","WSS_INSTALLED","isWPSInstalled","searchEngines","enginesVersionUrl","engineCheckInterval","ENGINES_VERSION","AUTO_PLAY_NOTIFICATION_ENABLED","ALLOW_LOCALHOST","IDPS_AUTH_URL","IDPS_BREACH_COUNT_URL","IDPS_CSP_CLIENT_ID","IDPS_IS_ENTITLED","IDPS_PROVISION_ID","IDPS_LOGIN_DOMAIN","UA_CLIENT","TYPOSQUATTING_MAX_CACHE","TYPOSQUATTING_EXPIRY","WA_IMAGE_SECRET","apsUrlList","shopping","email","selector","apsAnimationTimeout","downloadUrls","wpsRequestedSettings","permittedContentTypes","SUPPORTED_WEBSITE_LIST","isHTI","mtiRequestor","gtiServer","htiServer","cspClientId","ForegroundGlobals","LogLevels","INFO","ERROR","WARN","DEBUG","LogTypes","ProcessTypes","BACKGROUND","CONTENT","TELEMETRY","SMART_NATIVE_CLIENT","ProcessStyleMap","DEFAULT","Logger","message","logType","process","includes","storage","local","isBackground","details","processType","extensionType","consoleLog","state","processLog","async","logLevel","getLogLevel","logMessage","Date","toLocaleString","hour","minute","hour12","styleRegular","hightlight","console","error","log","uniqueHighlight","context","level","getStorageLogLevelAsync","Number","isInteger","storageLocalGetAsync","Promise","resolve","storageLogLevel","Globals","uid","externalMsgDispatcher","isvalidRequestType","requestType","valid","validateMsg","payload","sendExtnMsg","extnId","cb","reject","request_type","Error","runtime","sendMessage","data","lastError","defaultCb","reputationReqCount","imageCounter","isSearchHitSend","resourceRequestor","clientFunctions","activeURI","eventHandler","bkGlobals","searchEngine","searchAnnotationOption","socialMediaOption","socialMediaToggle","hasReportPage","HttpService","onHttpResponse","response","ok","status","statusText","sendHttpRequest","url","headers","body","method","fetch","then","ResourceRequestor","constructor","http","geti18nRes","attr","placeholders","str","i18n","getMessage","productName","getResStr","resourceId","callback","SearchEngine","engines","secureSearchRegExes","updateSocialMedia","engine","socialMediaType","enabled","checkEngineRegEx","engineRegexes","reindex","RegExp","getSecureEngineName","engineRegexesString","getEngineForUrl","secureEngineName","find","secureurlre","ssRegEx","issecuresearch","urlre","getEngines","HandlePromise","customCallback","defaultCallback","BackgroundIPC","action","command","handlePromiseMessage","requestData","referer","request","commandId","params","bIncludeSearchEngines","val","JSON","parse","showInNewTab","telemetry","frameUrls","extension_id","showed","searchTerm","setting","username","hostname","completeLogin","personal","activity","ANNOTATION","BackgroundCommons","ContextTelemetry","TelemetryEventNames","UrlParser","Utils","Commands","CommonConstants","SearchEngineHelper","prevLink","CONSTANTS","annotationTime","bingPartnerCode","bubbleLayer","expectedCount","gtiRequestTime","harvestingTime","mcafeeWaAnn","mcafeeWaHidden","processedid","UriFilterType","PROCESSED_TAG","LinkHarvester","anchor","unProcessedAnchors","processedAnchors","processedtag","getAttribute","href","substr","indexOf","originalURI","filterObj","uri","decodeURIComponent","filterType","startIndex","startsWith","endIndex","endsWith","anchorTags","document","getElementsByTagName","anchorHandler","expression","regexp","paramName","ahref","createElement","search","index","pair","element","selObj","hrefattr","attrIndex","attrib","actualhref","hrefqstring","paramValue","getParam","inTagUrl","tagText","textContent","aElem","protocol","pathname","hash","selectorObject","getMatchedSelector","selectors","reProcessAnchor","foundAnnotation","foundHiddenDiv","childNodes","removeAttribute","hiddenDiv","setAttribute","style","cssText","appendChild","fncallback","getUnProcessedAnchors","reprocessAnnotationForYoutube","requestURLs","requestElements","elemIndex","newelem","styles","parent","node","parentNode","inline","display","getURI","shouldExcludeURI","excluderegex","filteredUrl","getFilteredURI","filterURI","insertIntoLink","insertIntoSelector","pid","random","toString","substring","child","annotationNode","querySelector","match","Boolean","selectorList","item","matches","matched","ResourceManager","recElemStyle","recElemLength","BalloonDisplayer","balloonElement","bubbleLayerElement","dossierElement","iconElement","iconContainerElement","recommendationElement","recommendationDefStyle","getRecommendationString","annoItem","onLocaleReceivedCb","color","colorIndexMap","getResString","init","isBalloonDisplayed","getElementById","firstElementChild","fontSize","categories","listElement","newCategories","licategories","category","firstChild","removeChild","insertAdjacentHTML","showBalloon","pageDocument","eventData","annotation","toElement","appearance","src","srcImage","backgroundColor","titleMessage","innerHTML","addEventListener","hideBalloon","_document","leavingParent","contains","relatedTarget","focus","width","borderColor","flexDirection","setCategories","siteReportLinkText","balloonString","onclick","dossierUrl","moveBubble","autoclose","setTimeout","visibility","getBalloonPosition","elem","box","getBoundingClientRect","docElem","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","top","left","right","balloonRect","height","innerHeight","innerWidth","round","image","position","evt","_uid","EventHandler","_engine","_displayer","isFromLinks","ev","target","toId","SearchEngineUtils","cookies","cookie","toLocaleLowerCase","ANNOTATION_OPTIONS","SEARCH_ENGINE_TYPES","Balloon","resolvePath","waImagePath","balloonTemplate","BalloonCreator","create","AnnotationInserter","linkInfo","stringify","mcstyle","imageStyles","ruleName","property","annotationIcon","icon","cssString","link","linkinfo","location","divAnnotation","setDivProperty","divImage","imageid","imageClass","outline","insertBefore","nextSibling","currentNode","verticalAlign","bottom","margin","amap","links","isSecureSearch","createBalloon","createStyle","annotations","smaAnnotationStats","site","sourcetype","isBingSecureSearchInCookie","insertAnnotationIntoLink","insertAnnotationImage","colorNumber","colorString","identifier","entries","AnnotationEngine","annotateProc","jsonResponse","annotationMap","annotateWebPage","processPage","harvestLinks","reqURLs","tiResponse","bind","processUrl","Annotation","enginetype","engineName","typeTag","MUTATION_RESPONSE","Continue","Skip","NoMoreRequired","AnnotationMutation","requireAnnotation","nodeName","shouldHarvestElement","nodeAdded","flag","annotate","ANNOTATION_PROPERTIES","certified","highlightColor","info","warn","unknown","BALLOON_PROPERTIES","logoImage","color_0","color_1","color_2","color_3","color_4","handleMutations","records","handlers","map","handler","skip","getHandlers","record","addedElement","addedNodes","skipHandler","Annotations","config","ExtGlobals","ExtBackgroundIPC","BackgroundCommon","ExtBackgroundCommon","ExtContentTelemetry","EventNames","ExtUrlParser","ExtUtils","ExtCommands","ExtCommonConstants","ExtLogger","MutationObserver","observe","childList","subtree","FEATURE_TAB_ID","BLOCK_PAGE","BROWSER_ACTION_CLICKED","BROWSER_NAVIGATE","CRYPTOJACKING_BLOCK","DARK_WEB_SCAN","DOWNLOAD_BLOCK","GET_SEARCH_EXTENSION","PROFILE_INFO","REMOTE_ACCESS_TROJAN","SEARCH_SUGGEST_BLOCK_PAGE","SEARCH_SUGGEST","SECURE_SEARCH_HIT","SIDEBAR_PANEL","SITE_REPORT","SMA_REPUTATION","TOAST","WSS_ANALYTICS","APS","EVENT_NAME","IMPRESSION_BALLOON","IMPRESSION_HOVER","CLOSE_BALLOON","TOAST_CLOSE","BALLOON","ToastTypes","ImpressionNames","InteractionTypes","LEARN_MORE_CLICKED","WHITELISTED","ACKNOWLEDGED","PageLevel","SETTING_TABS","TelemetryColor","TelemetryBlockState","SearchType","TelemetryTerms","ACTION","CLICK","KEYDOWN","RETURN_KEY_CODE","SHOW","SEARCH_SUGGEST_KEY_CODES","MISC","LOADED","CHECKED","ACTION_PANEL","ACCEPTED","DECLINED","SETTINGS_TAB_PREFIX","PREFERENCE","SEARCH_ENGINE","GOOGLE","YAHOO","SOCIAL_MEDIA","CommonTelemetry","colorStr","blockState","blockStateStr","tabName","tabNameStr","includeDescription","getRes","l10nId","res","getCategoryStrings","categoryId","newCategory","description","promises","all","imageName","imagePath","size16","size20","size32","size40","toImagePaths","annotationItem","toColor","annItem","colorVal","isPhishingURI","isNaN","trust","getURL","escape","urlSplit","isSiteAdvisorUrl","isExtensionUrl","isPropertyWebURL","number","decimal","toFixed","initialEpochInSeconds","timePassedinSeconds","getTime","declarativeNetRequest","getDynamicRules","rules","filter","rule","condition","urlFilter","updateDynamicRules","addRules","domains","resourceTypes","TelemetryMessageModifiers","_options","TELEMETRY_HANDLERS","initializeTelemetryHandler","fetchTelemetryHandlers","trigger","sendTelemetry","isFromBackground","messages","template","analyticsSDK","interaction_type","colour","toTelemetryBlockState","blockPageStyle","_event_name","browser","browserTypeToString","badge_count","count","is_shown","crypto_miner","miner","process_name","file_name","ui_type","tab","toTelemetrySettingTab","search_type","selected","SEARCH_SUGGEST_TYPOSQUATTING","type_tag","provider_type","block_state","site_categories","siteCategories","displayUrl","triggerType","action_type","provider","toastData","toastType","metadata","eventAction","flow_id","flowId","sequence","gotItButton","func","wait","immediate","timeout","args","callNow","clearTimeout","getUILanguage","ua","navigator","userAgent","triggerAction","permittedActionList","containerMeta","selectedTag","query","sendMessages","readyState","doScroll","event","spec","telemetryMessage","shouldSendMessage","worthyAction","whitelistedKeys","eventCode","keyCode","sendTelemetryMessages","parts","cleanURI","qpos","URL","LoggerSettings","HTICommands","HTIProxy","ContentHTIRequestor","post","GTICommands","GTIProxy","ContentGTIRequestor","ScriptBase","pingCommand","basePingListener","onMessage","addListener","sender","responseCb","content","super","getBackgroundOptions","initializeSettings","initPageWatcher","getBkGlobals","searchAnnotation","socialMediaAnnotation","smaData","main"],"sourceRoot":""}
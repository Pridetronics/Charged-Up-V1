{"version":3,"file":"foreground_sidebar_main.js","mappings":"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ACvBC,gBAAiB,KACjBC,UAAW,KACXC,mBAAmB,EACnBC,gBAAiB,KACjBC,qBAAsB,gDACtBC,gBAAiB,KACjBC,oBAAqB,GACrBC,WAAY,SACZC,YAAazF,GACbvB,WAAY,KACZiH,YAAa,KACbC,iBAAkB,KAClBC,UAAW,KACXC,OAAQ,KACRC,SAAU,KACVC,kBAAmB,KACnBC,KAAM,KACNC,QAAS,IAAIlI,GACbmI,qBAAsB,IAAIC,IAC1BC,iBAAiB,EACjBC,KAAM,KACNC,kBAAmB,KACnBC,oBAAqB9F,GACrB+F,UAAW,KACXC,gBFrB6B,CAC7B,wBACA,2CACA,8BACA,+BACA,wBACA,wBACA,2BACA,yBACA,+BACA,0BACA,gCACA,sCACA,8BACA,uBACA,yBACA,qBACA,wCACA,mCACA,0BACA,4BACA,iCACA,8BACA,+BACA,0BACA,0CACA,2BACA,kBACA,oCACA,6BACA,4BACA,wBACA,2BACA,0BACA,wBACA,2BACA,8BACA,2CACA,yBACA,wBACA,6BACA,sBACA,oBACA,+CACA,wBACA,2BACA,4BACA,6BACA,2BACA,wBACA,2BACA,qCACA,0BACA,2BACA,oCACA,uCACA,yBACA,4BACA,wBACA,4BACA,2BACA,8BACA,6BACA,gCACA,mCACA,4BACA,gCACA,4BACA,kCACA,+BACA,4BACA,wCACA,mBACA,0BACA,8BACA,2BACA,6BACA,2BACA,qBACA,+BACA,iCACA,2CACA,8BACA,6BACA,sCACA,0CACA,4BACA,2BACA,+BACA,2BACA,oCACA,0BACA,uBACA,qCACA,+BACA,+BACA,6BACA,yBACA,uBACA,qCACA,2BACA,4BACA,yBACA,6BACA,2BACA,6BACA,8BACA,2BACA,2BACA,sDACA,4BACA,8BACA,sBACA,0BACA,0BACA,0BACA,yBACA,+BACA,yBACA,6BACA,gCACA,4BACA,6CACA,wBACA,2BACA,2BACA,uBACA,iDACA,4BACA,oCACA,yBACA,4BACA,wCACA,yBACA,8BACA,wBACA,qBACA,0BACA,yBACA,0BACA,qCACA,uBACA,2BACA,2BACA,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","sources":["webpack:///webpack/bootstrap","webpack:///./extension/common/commands.js","webpack:///./extension/common/webextension.js","webpack:///./extension/common/handle_promise.js","webpack:///./extension/common/background_ipc.js","webpack:///./extension/common/http_service.js","webpack:///./coreengine/resource_requestor.js","webpack:///./extension/utilities/ui_strings.js","webpack:///./extension/common/sma_variables.js","webpack:///./extension/common/annotation_variables.js","webpack:///./extension/common/cache_store_variables.js","webpack:///./extension/common/tab_data.js","webpack:///./extension/common/constants.js","webpack:///./extension/common/background_constants.js","webpack:///./extension/background/dispatchers/native/native_settings.js","webpack:///./extension/background/background_globals.js","webpack:///./extension/ui/foreground/foreground_globals.js","webpack:///./extension/common/logger.js","webpack:///./extension/utilities/ui_content_utils.js","webpack:///./coreengine/globals.js","webpack:///./coreengine/external_msg_dispatcher.js","webpack:///./extension/components/shadow_dom_container.js","webpack:///./extension/components/sidebar_container.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/globals.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/resource_manager.js","webpack:///./extension/common/background_common.js","webpack:///./extension/ui/sidebar/sidebar_main.js","webpack:///./extension/common/url_parser.js","webpack:///./extension/common/whitelist_variables.js","webpack:///./extension/telemetry/common_telemetry.js","webpack:///./extension/telemetry/telemetry_message_modifiers.js","webpack:///./extension/telemetry/context_telemetry.js","webpack:///./extension/utilities/utils.js","webpack:///./extension/ui/sidebar/sidebar_rat_detection.js","webpack:///./extension/scripts/ui_handler/sidebar_ui_handler.js","webpack:///./extension/ui/foreground/foreground_sidebar_base.js","webpack:///./extension/ui/foreground/foreground_sidebar_main.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * The command ids supported for IPC between content process and chrome/background process.\r\n */\r\n\r\nexport const BackgroundCommands = {\r\n  // Generic Commands\r\n  CACHE_STORE: 'CACHE_STORE',\r\n  CONTENT_HANDLER: 'CONTENT_HANDLER',\r\n  EXECUTE_COMMAND: 'EXECUTE_COMMAND',\r\n  FOCUS_OR_CREATE_TAB: 'FOCUS_OR_CREATE_TAB',\r\n  GET_BK_GLOBALS: 'GET_BK_GLOBALS',\r\n  GET_EXTENSION_STATUS: 'GET_EXTENSION_STATUS',\r\n  GET_TAB_DATA: 'GET_TAB_DATA',\r\n  TI_REQUEST: 'TI_REQUEST',\r\n  INSTALL_EXTENSION: 'INSTALL_EXTENSION',\r\n  PLACEHOLDER_TEXT: 'PLACEHOLDER_TEXT',\r\n  REMOVE_TAB: 'REMOVE_TAB',\r\n  SEND_TELEMETRY: 'SEND_TELEMETRY',\r\n  SET_VIEWPORT: 'SET_VIEWPORT',\r\n  WHITELIST: 'WHITELIST',\r\n  RESET_NATIVE_SETTING: 'RESET_NATIVE_SETTING',\r\n  UPDATE_BK_NATIVE_SETTINGS: 'UPDATE_BK_NATIVE_SETTINGS',\r\n\r\n  // Options Menu / Settings Page\r\n  SHOW_SIDEBAR_MAIN: 'SHOW_SIDEBAR_MAIN',\r\n  GET_POPUP_DATA: 'GET_POPUP_DATA',\r\n  GET_SETTINGS_DATA: 'GET_SETTINGS_DATA',\r\n  RESET_SETTINGS: 'RESET_SETTINGS',\r\n\r\n  // Autoplay video\r\n  AUTO_RUN_VIDEO_SITE: 'AUTO_RUN_VIDEO_SITE',\r\n  GET_CLICK_EVENT_TIME: 'GET_CLICK_EVENT_TIME',\r\n  SAVE_CLICK_EVENT_TIME: 'SAVE_CLICK_EVENT_TIME',\r\n\r\n  // Typosquatting\r\n  GET_TYPOSQUATTING_DATA: 'GET_TYPOSQUATTING_DATA',\r\n\r\n  // Block Page / Iframe / Site Report\r\n  IS_FRAME_BLOCKED: 'IS_FRAME_BLOCKED',\r\n  IS_WHITELISTED: 'IS_WHITELISTED',\r\n  ANY_BLOCKED_IFRAMES: 'ANY_BLOCKED_IFRAMES',\r\n  ANY_BLOCKED_CRYPTOSCRIPTS: 'ANY_BLOCKED_CRYPTOSCRIPTS',\r\n  UNBLOCK_ALL_IFRAMES: 'UNBLOCK_ALL_IFRAMES',\r\n  VIEW_SITE_REPORT: 'VIEW_SITE_REPORT',\r\n\r\n  // Annotations\r\n  SEARCH_ANNOTATION: 'SEARCH_ANNOTATION',\r\n  UPDATE_ENGINE_STATS: 'UPDATE_ENGINE_STATS',\r\n\r\n  // SMA\r\n  SOCIAL_MEDIA_ANNOTATION: 'SOCIAL_MEDIA_ANNOTATION',\r\n\r\n  // RAT Detection\r\n  UPDATE_RAT_DETECTION_SHOWING_FLAG: 'UPDATE_RAT_DETECTION_SHOWING_FLAG',\r\n\r\n  // Search Suggestion\r\n  SEARCH_SUGGEST: 'SEARCH_SUGGEST',\r\n\r\n  // Form detection\r\n  SAVE_FORM_INFO: 'SAVE_FORM_INFO',\r\n  GET_FORM_INFO_CACHE: 'GET_FORM_INFO_CACHE',\r\n  CLEAR_FORM_INFO_CACHE: 'CLEAR_FORM_INFO_CACHE',\r\n  SAVE_MULTISTEP_LOGIN: 'SAVE_MULTISTEP_LOGIN',\r\n  GET_FD_WEIGHTS: 'GET_FD_WEIGHTS',\r\n  GET_FD_EXCEPTIONS: 'GET_FD_EXCEPTIONS',\r\n  GET_FD_CRF_PARAMS: 'GET_FD_CRF_PARAMS',\r\n\r\n  // DWS\r\n  CLEAR_CACHED_DWS_INFO: 'CLEAR_DWS_INFO',\r\n  GET_CACHED_DWS_INFO: 'GET_CACHED_DWS_INFO',\r\n  UPDATE_DWS_WHITELIST: 'UPDATE_DWS_WHITELIST',\r\n  LAUNCH_IDPS_LOGIN: 'LAUNCH_IDPS_LOGIN',\r\n  UPDATE_DWS_SHOWN: 'UPDATE_DWS_SHOWN',\r\n\r\n  // APS\r\n  GET_APS_DETAILS: 'GET_APS_DETAILS',\r\n  FORM_PRE_CHECK_PASSED: 'FORM_PRE_CHECK_PASSED',\r\n  SIGN_UP_FORM_DETECTED: 'SIGN_UP_FORM_DETECTED',\r\n\r\n  // Firefox Policy Consent\r\n  SET_FF_POLICY_COLLECTION: 'SET_FF_POLICY_COLLECTION',\r\n  SET_FF_POLICY_LAST_SHOWN: 'SET_FF_POLICY_LAST_SHOWN',\r\n};\r\n\r\nexport const ContentCommands = {\r\n  // Commands handled by iframes\r\n  UNBLOCK_IFRAME: 'UNBLOCK_IFRAME',\r\n\r\n  // Content UI Handler Commands\r\n  BALLOON_MESSAGE: 'BALLOON_MESSAGE',\r\n  PAGE_OVERLAY: 'PAGE_OVERLAY',\r\n  SIDEBAR: 'SIDEBAR',\r\n  TOPBAR: 'TOPBAR',\r\n\r\n  // Ping\r\n  PING_CONTENT_ANNOTATION: 'PING_CONTENT_ANNOTATION',\r\n  PING_CONTENT_RAT_DETECTION: 'PING_CONTENT_RAT_DETECTION',\r\n  PING_CONTENT_IFRAME_BANNER: 'PING_CONTENT_IFRAME_BANNER',\r\n  PING_CONTENT_AUTOPLAY_DETECTION: 'PING_CONTENT_AUTOPLAY_DETECTION',\r\n  PING_CONTENT_SIDEBAR_MAIN: 'PING_CONTENT_SIDEBAR_MAIN',\r\n  PING_CONTENT_FF_DL_OVERLAY: 'PING_CONTENT_FF_DL_OVERLAY',\r\n  PING_CONTENT_CRYPTO_BLOCK: 'PING_CONTENT_CRYPTO_BLOCK',\r\n  PING_CONTENT_FF_VIEWPORTS: 'PING_CONTENT_FF_VIEWPORTS',\r\n  PING_CONTENT_IDPS: 'PING_CONTENT_IDPS',\r\n  PING_CONTENT_APS_TOAST: 'PING_CONTENT_APS_TOAST',\r\n  PING_CONTENT_APS_BALLOON: 'PING_CONTENT_APS_BALLOON',\r\n  PING_CONTENT_APS_OBSERVER: 'PING_CONTENT_APS_OBSERVER',\r\n  PING_CONTENT_SITE_LISTENER: 'PING_CONTENT_SITE_LISTENER',\r\n  PING_IFRAME_FORM_CHECK: 'PING_IFRAME_FORM_CHECK',\r\n  PING_IFRAME_FORM_DETECTION: 'PING_IFRAME_FORM_DETECTION',\r\n  PING_IFRAME_BLOCK: 'PING_IFRAME_BLOCK',\r\n\r\n  // APS\r\n  APS_REGISTRATION_PAGE: 'APS_REGISTRATION_PAGE',\r\n\r\n  // Broadcast to foreground\r\n  BROADCAST_TO_FOREGROUND: 'BROADCAST_TO_FOREGROUND',\r\n\r\n  // Annotation Journey Toast\r\n  TRIGGER_AJ_TOAST: 'TRIGGER_AJ_TOAST'\r\n};\r\n\r\n// **********************************************\r\n// SUB-COMMANDS USED BY CONTENT HANDLER COMMANDS:\r\n// **********************************************\r\n\r\nexport const SideBarCommands = {\r\n  MAIN: 'MAIN',\r\n  RELOAD: 'RELOAD',\r\n  SMA: 'SMA',\r\n  RAT_DETECTION: 'RAT_DETECTION',\r\n};\r\n\r\nexport const BalloonMessageCommands = {\r\n  ADVANCED_PROTECTION_SIGNAL: 'ADVANCED_PROTECTION_SIGNAL',\r\n  ADVANCED_PROTECTION_SIGNAL_TOAST: 'ADVANCED_PROTECTION_SIGNAL_TOAST',\r\n  DWS: 'DWS',\r\n};\r\n\r\nexport const TopBarCommands = {\r\n  CRYPTO_BLOCK: 'CRYPTO_BLOCK',\r\n  IFRAME_BLOCK: 'IFRAME_BLOCK',\r\n  TRIGGER_ALLOW: 'TRIGGER_ALLOW',\r\n};\r\n\r\nexport const PageOverlayCommands = {\r\n  SEARCH_EXTENSION_OVERLAY: 'SEARCH_EXTENSION_OVERLAY',\r\n  FINISH_DOWNLOAD: 'FINISH_DOWNLOAD',\r\n};\r\n\r\nexport const ExternalCommands = {\r\n  // Legacy\r\n  PING: 0,\r\n  DISCONNECT_NATIVE: 1,\r\n  SET_PROPERTY_EX: 2, //  For automation\r\n  SET_PROPERTY: 3, // For automation\r\n  GET_PROPERTY: 4, // For automation\r\n  CLEAR_GTI_CACHE: 5, // For automation\r\n  RESET_CRYPTO: 6, // For automation\r\n  CLEAN_TYPOSQUATING_WHITELIST: 7, // For automation\r\n  CLEAR_TYPOSQUATING_CACHE: 8, // For automation\r\n  CLEAN_CRYPTO_WHITELIST: 10, // For automation\r\n  CLEAN_RAT_WHITELIST: 12, // For automation\r\n  CLEAN_RAT_CACHE: 13, // For automation\r\n  REPLACE_TRUSTED_DOMAIN: 15, // For automation\r\n  VERIFY_GTI_REQUEST: 17, // For automation\r\n  VERIFY_TYPOSQUAT_SERVER: 18, // For watchdog automation\r\n  GET_ALL_WA_SETTINGS: 19, // For automation extension\r\n  SET_STORAGE_PROPERTY: 20, // Set a local storage property within WA\r\n  GET_STORAGE_PROPERTY: 21, // Get a local storage property within WA (for automation)\r\n  REINIT_SCHEDULED_TASKS: 22,\r\n  OPEN_SETTINGS: 23, // For personal protection hub\r\n  OPEN_ACTION_PANEL: 24, // For personal protection hub\r\n  GET_MEMORY_FOOTPRINT: 26, // For automation, endurance run\r\n  ENDURANCE_TEST_RESET: 27, // For automation, endurance run\r\n  FORM_DETECTION_RESULT: 28,\r\n  SHOW_UNUSED_SELECTORS: 29, // For automation\r\n  SET_MTI_GLOBALS: 30\r\n};\r\n\r\nexport const ExternalResponse = {\r\n  PONG: 0,\r\n};\r\n","export const extension = WEBPACK_BROWSER_NAME === 'chrome' || WEBPACK_BROWSER_NAME === 'edge' ? chrome : browser; // eslint-disable-line no-undef\r\n","export default class HandlePromise\r\n{\r\n  static handlePromiseMessage(message, customCallback = null)\r\n  {\r\n    const defaultCallback = (resolve, reject, data) =>\r\n    {\r\n      if (chrome.runtime.lastError) reject(chrome.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      chrome.runtime.sendMessage(message, (data) =>\r\n      {\r\n        if (typeof customCallback === 'function') customCallback(resolve, reject, data);\r\n        else defaultCallback(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\r\nimport { BackgroundCommands, ContentCommands } from '@extension/common/commands';\r\nimport HandlePromise from '@extension/common/handle_promise';\r\n\r\n/**\r\n * Handles communication from content process to the background process.\r\n */\r\nexport default class BackgroundIPC\r\n{\r\n  static cacheStore(action, data)\r\n  {\r\n    const command = BackgroundCommands.CACHE_STORE;\r\n    return HandlePromise.handlePromiseMessage({ command, action, data });\r\n  }\r\n\r\n  static isFrameBlocked(url)\r\n  {\r\n    const command = BackgroundCommands.IS_FRAME_BLOCKED;\r\n    return HandlePromise.handlePromiseMessage({ command, url });\r\n  }\r\n\r\n  static makeMTIRequest(requestData, referer)\r\n  {\r\n    const command = BackgroundCommands.TI_REQUEST;\r\n    const request = { command, requestData, referer };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static executeCommand(commandId, params)\r\n  {\r\n    const command = BackgroundCommands.EXECUTE_COMMAND;\r\n    extension.runtime.sendMessage({ command, commandId, params });\r\n  }\r\n\r\n  static focusOrCreateTab(url)\r\n  {\r\n    const command = BackgroundCommands.FOCUS_OR_CREATE_TAB;\r\n    extension.runtime.sendMessage({ command, url });\r\n  }\r\n\r\n  static closeTab()\r\n  {\r\n    const command = BackgroundCommands.REMOVE_TAB;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static whitelist(action, type, data)\r\n  {\r\n    const command = BackgroundCommands.WHITELIST;\r\n    return HandlePromise.handlePromiseMessage({ action, command, type, data });\r\n  }\r\n\r\n  static getPopupData()\r\n  {\r\n    const command = BackgroundCommands.GET_POPUP_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getSettingsData()\r\n  {\r\n    const command = BackgroundCommands.GET_SETTINGS_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static searchAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static socialMediaAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SOCIAL_MEDIA_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static async getBkGlobals(bIncludeSearchEngines = false)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const command = BackgroundCommands.GET_BK_GLOBALS;\r\n      const promise = HandlePromise.handlePromiseMessage({ command, bIncludeSearchEngines });\r\n      promise.then((val) => { resolve(JSON.parse(val)); });\r\n    });\r\n  }\r\n\r\n  static viewSiteReport(url = null, showInNewTab = false)\r\n  {\r\n    const command = BackgroundCommands.VIEW_SITE_REPORT;\r\n    extension.runtime.sendMessage({ command, url, showInNewTab });\r\n  }\r\n\r\n  static getTypoSquattingData(domain)\r\n  {\r\n    const command = BackgroundCommands.GET_TYPOSQUATTING_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command, domain });\r\n  }\r\n\r\n  static getPlaceholderText(id)\r\n  {\r\n    const command = BackgroundCommands.PLACEHOLDER_TEXT;\r\n    return HandlePromise.handlePromiseMessage({ command, id });\r\n  }\r\n\r\n  static setViewPort(x, y)\r\n  {\r\n    const command = BackgroundCommands.SET_VIEWPORT;\r\n    extension.runtime.sendMessage({ command, x, y });\r\n  }\r\n\r\n  static sendTelemetry(telemetry)\r\n  {\r\n    const command = BackgroundCommands.SEND_TELEMETRY;\r\n    extension.runtime.sendMessage({ command, telemetry });\r\n  }\r\n\r\n  static anyBlockedIframes(frameUrls)\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_IFRAMES;\r\n    return HandlePromise.handlePromiseMessage({ command, frameUrls });\r\n  }\r\n\r\n  static anyBlockedCryptoScripts()\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_CRYPTOSCRIPTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static resetSettings()\r\n  {\r\n    const command = BackgroundCommands.RESET_SETTINGS;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static sendEngineStat(engine)\r\n  {\r\n    extension.runtime.sendMessage({ command: BackgroundCommands.UPDATE_ENGINE_STATS, engine });\r\n  }\r\n\r\n  static contentHandler(message)\r\n  {\r\n    const command = BackgroundCommands.CONTENT_HANDLER;\r\n    extension.runtime.sendMessage({ command, message });\r\n  }\r\n\r\n  static getTabData(payload = {})\r\n  {\r\n    const command = BackgroundCommands.GET_TAB_DATA;\r\n    const request = { command, ...payload };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static isWhitelisted(url)\r\n  {\r\n    const command = BackgroundCommands.IS_WHITELISTED;\r\n    const request = { command, url };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static getExtensionStatus(id)\r\n  {\r\n    return HandlePromise.handlePromiseMessage({ command: BackgroundCommands.GET_EXTENSION_STATUS, extension_id: id });\r\n  }\r\n\r\n  static unblockAllIframes()\r\n  {\r\n    const command = BackgroundCommands.UNBLOCK_ALL_IFRAMES;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateRatDetectionShowingFlag(showed)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_RAT_DETECTION_SHOWING_FLAG;\r\n    extension.runtime.sendMessage({ command, showed });\r\n  }\r\n\r\n  /**\r\n   * Send a message to the background to retrieve the results from Search Suggestion for the search term\r\n   *\r\n   * @param {String} searchTerm\r\n   */\r\n  static getSearchSuggest(searchTerm)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_SUGGEST;\r\n    const request = { command, searchTerm };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static resetNativeSetting(setting)\r\n  {\r\n    const command = BackgroundCommands.RESET_NATIVE_SETTING;\r\n    extension.runtime.sendMessage({ command, setting });\r\n  }\r\n\r\n  /**\r\n   * Save form info (logging info)\r\n   * @param {string} username - username entered in the form.\r\n   * @param {string} hostname - hostname of the page the form was submitted on.\r\n   */\r\n  static saveFormInfo(username, hostname)\r\n  {\r\n    const command = BackgroundCommands.SAVE_FORM_INFO;\r\n    extension.runtime.sendMessage({ command, username, hostname });\r\n  }\r\n\r\n  /**\r\n   * Send message to the backend to save login from multi-step detection\r\n   * @param {Object} data - Object containing the neccesary info from the form.\r\n   * @param {string} data.username - (optional) username entered into the form. Only supplied if login not complete, ie first step of multistep form.\r\n   * @param {string} data.hostanme - hostname of the page the form was submitted on.\r\n   * @param {Boolean} completeLogin - Whether or not the multistep login process is completed or not.\r\n   */\r\n  static saveMultiStepLogin(data, completeLogin)\r\n  {\r\n    const command = BackgroundCommands.SAVE_MULTISTEP_LOGIN;\r\n    extension.runtime.sendMessage({ command, data, completeLogin });\r\n  }\r\n\r\n  static getFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.GET_FORM_INFO_CACHE;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static clearFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.CLEAR_FORM_INFO_CACHE;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  /**\r\n   * Update list of emails to be excluded from DWS offering.\r\n   * The email is whitelisted either because the user said not to offer it again, or because the user\r\n   * added it to be monitored in the web portal.\r\n   * @param {*} email\r\n   */\r\n  static updateDWSWhitelist(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_WHITELIST;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.GET_CACHED_DWS_INFO;\r\n    const request = { command, email };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static clearCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.CLEAR_CACHED_DWS_INFO;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static updateDWSShown(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_SHOWN;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getAPSDetails()\r\n  {\r\n    const command = BackgroundCommands.GET_APS_DETAILS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static signUpFormDetected()\r\n  {\r\n    const command = BackgroundCommands.SIGN_UP_FORM_DETECTED;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateBkNativeSettings(name, value)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_BK_NATIVE_SETTINGS;\r\n    extension.runtime.sendMessage({ command, name, value });\r\n  }\r\n\r\n  static launchIDPSLogin()\r\n  {\r\n    const command = BackgroundCommands.LAUNCH_IDPS_LOGIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static showSidebarMain()\r\n  {\r\n    const command = BackgroundCommands.SHOW_SIDEBAR_MAIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static setFFPolicyCollection({ personal, activity })\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_COLLECTION;\r\n    extension.runtime.sendMessage({ command, personal, activity });\r\n  }\r\n\r\n  static setFFPolicyLastShown()\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_LAST_SHOWN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  // This will broadcast a sendMessage to all page owned by us\r\n  // For example, to all foreground pages. A message will be sent to\r\n  // background as well but it will not be processed\r\n  static broadcastToForeground(payload)\r\n  {\r\n    const command = ContentCommands.BROADCAST_TO_FOREGROUND;\r\n    extension.runtime.sendMessage({ command, payload });\r\n  }\r\n\r\n  static getFDWeights()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_WEIGHTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDExceptions()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_EXCEPTIONS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDCrfParams()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_CRF_PARAMS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n}\r\n","/**\r\n * Wrapper class making the http request call (using the built-in Fetch api).\r\n * Handling normal and exception cases.\r\n */\r\nexport default class HttpService\r\n{\r\n  onHttpResponse(response)\r\n  {\r\n    if (!response.ok)\r\n    {\r\n      const message = `HttpService Status: ${response.status}\\nError Text: ${response.statusText}`;\r\n      return Promise.reject(new Error(message));\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  sendHttpRequest({ url, headers, body, method = 'GET' })\r\n  {\r\n    return fetch(url, { headers, method, body }).then(this.onHttpResponse);\r\n  }\r\n}\r\n","import HttpService from '@extension/common/http_service';\r\nimport { extension } from '@extension/common/webextension';\r\n\r\nexport default class ResourceRequestor\r\n{\r\n  constructor()\r\n  {\r\n    this.http = new HttpService();\r\n  }\r\n\r\n  geti18nRes(attr, placeholders = [])\r\n  {\r\n    let str = extension.i18n.getMessage(attr, placeholders);\r\n    const productName = extension.i18n.getMessage('res_PRODUCT_NAME_TRADEMARKED');\r\n    str = str.replace(/%PRODUCTNAME%/g, productName);\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Get the message based on the resource id\r\n   * @param {Number}   resourceId - Resource id\r\n   * @param {Function} callback   - Handles the returned localized string\r\n   */\r\n  getResStr(resourceId, callback)\r\n  {\r\n    const message = this.geti18nRes(resourceId);\r\n    callback(\r\n      message === '??' ? '' : message\r\n    );\r\n  }\r\n}\r\n","import BackgroundIPC from '@extension/common/background_ipc';\r\nimport ResourceRequestor from '../../coreengine/resource_requestor';\r\n\r\nexport default class UIStrings\r\n{\r\n  constructor(iframeId = null, pageDocument = document)\r\n  {\r\n    this.resourcerequestor = new ResourceRequestor();\r\n    this.document = pageDocument;\r\n\r\n    if (iframeId)\r\n    {\r\n      const iframeContainer = this.document.querySelectorAll(`#${iframeId}`);\r\n      if (iframeContainer) this.document = iframeContainer[0].contentDocument;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Passes message name into helper class to retrieve the appropriate localized message for it\r\n   * @param   {string} attr - Name of the message to resolve as specified in the messages.json file\r\n   * @returns {string} - The localized message for current locale\r\n   */\r\n  localeData(attr, placeholders = [])\r\n  {\r\n    return this.resourcerequestor.geti18nRes(attr, placeholders);\r\n  }\r\n\r\n  /**\r\n   * Resolve a specified html element (through id) with the provided text\r\n   * @param {string} id   - The id of the html element\r\n   * @param {string} text - The text to be injected into the html element\r\n   */\r\n  fillText(id, text)\r\n  {\r\n    const element = this.document.getElementById(id);\r\n\r\n    if (element)\r\n    {\r\n      const position = element.getAttribute('x-mcinsertposition');\r\n      if (position)\r\n      {\r\n        element.insertAdjacentText(position, text);\r\n        return;\r\n      }\r\n\r\n      element.textContent = text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resolves all html elements that need to be populated with localized string resources.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillLocalizedTexts()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-mclocalizedtext]'))\r\n    {\r\n      const text = this.localeData(id);\r\n\r\n      if (text === null || text === undefined) return false;\r\n\r\n      this.fillText(id, text);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Fills all input place holder strings. These are hint string to be added to input html elements.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillInputPlaceHolders()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-inputplaceholder]'))\r\n    {\r\n      const text = this.localeData(id);\r\n      const element = this.document.getElementById(id);\r\n\r\n      if (text === null || text === undefined) return false;\r\n\r\n      if (element !== null && element !== undefined)\r\n      {\r\n        element.setAttribute('placeholder', text);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Sends command to background to fill in placeholder text.\r\n   * @param {string} id - Resource id\r\n   */\r\n  fillPlaceHolderInternal(id)\r\n  {\r\n    BackgroundIPC.getPlaceholderText(id).then((data) =>\r\n    {\r\n      this.fillText(id, data.text);\r\n    }).catch(() => {});\r\n  }\r\n\r\n  /**\r\n   * Fills all internal placeholders.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillPlaceHolders()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-mcplaceholder]'))\r\n    {\r\n      this.fillPlaceHolderInternal(id);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Initializing steps for the class.\r\n   */\r\n  init()\r\n  {\r\n    // if failed to replace a text in locale then show blank page.\r\n    this.fillLocalizedTexts();\r\n    this.fillPlaceHolders();\r\n    this.fillInputPlaceHolders();\r\n  }\r\n}\r\n","export const SocialMediaTypes = {\r\n  NONE: 0,\r\n  LINKEDIN: 1,\r\n  INSTAGRAM: 2,\r\n  YOUTUBE: 4,\r\n  FACEBOOK: 8,\r\n  TWITTER: 16,\r\n  REDDIT: 32\r\n};\r\n\r\n// Sum of all Social Media Types\r\nexport const SocialMediaAllTypes = Object.values(SocialMediaTypes).reduce((sum, value) => sum + value);\r\n\r\nexport const SocialMediaActions = {\r\n  TOGGLE_ON: 'TOGGLE_ON',\r\n  TOGGLE_OFF: 'TOGGLE_OFF',\r\n  ANNOTATION_ENABLE_ALL: 'ANNOTATION_ENABLE_ALL',\r\n  ANNOTATION_DISABLE_ALL: 'ANNOTATION_DISABLE_ALL',\r\n  ANNOTATION_ENABLE: 'ANNOTATION_ENABLE',\r\n  ANNOTATION_DISABLE: 'ANNOTATION_DISABLE',\r\n  GET: 'GET',\r\n};\r\n","export const SearchAnnotationActions = {\r\n  GET: 'GET',\r\n  SET: 'SET',\r\n};\r\n\r\nexport const AnnotationOptions = {\r\n  NONE: 'NONE',\r\n  ONLY_SECURE_SEARCH: 'ONLY_SECURE_SEARCH',\r\n  ALL: 'ALL',\r\n  * [Symbol.iterator]() // Override the iterable protocol to allow spreading of keys (...AnnotationOptions)\r\n  {\r\n    for (const key of Object.keys(this))\r\n    {\r\n      yield key;\r\n    }\r\n  }\r\n};\r\n\r\n// DO NOT CHANGE the number for the search engine types\r\n// Some of these numbers are mapped to native's search providers\r\nexport const SearchEngineTypes = {\r\n  UNKNOWN: 0,\r\n  // Search engine annotations\r\n  GOOGLE: 1,\r\n  YAHOO: 2,\r\n  AOL: 3,\r\n  ASK: 4,\r\n  UOL: 5,\r\n  GOO: 6,\r\n  MYWAY: 7,\r\n  TERRA: 8,\r\n  WEB: 9,\r\n  BIGLOBE: 10,\r\n  GMX: 11,\r\n  EXCITE: 12,\r\n  SKY: 13,\r\n  NAVER: 14,\r\n  NIFTY: 15,\r\n  RAKUTEN: 16,\r\n  IXQUICK: 17,\r\n  XFINITY: 18,\r\n  SOGOU: 19,\r\n  DOGPILE: 20,\r\n  SEARCH: 21,\r\n  WEBCRAWLER: 22,\r\n  BING: 23,\r\n  INFO: 24,\r\n  YANDEX: 25,\r\n  YIPPY: 26, // No longer supported\r\n  WOW: 27,\r\n  HAOSO: 28,\r\n  DUCKDUCKGO: 30,\r\n  ONESEARCH: 31,\r\n  // Social media annotations\r\n  LINKEDIN: 100,\r\n  FACEBOOK: 101,\r\n  YOUTUBE: 102,\r\n  INSTAGRAM: 103,\r\n  REDDIT: 104,\r\n  TWITTER: 105,\r\n};\r\n\r\nexport const EngineType = {\r\n  SEARCH: 0,\r\n  SOCIALMEDIA: 1,\r\n};\r\n","import { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\n\r\nconst { NONE, ...NonZeroSocialMediaTypes } = SocialMediaTypes;\r\n\r\nexport const CacheStoreActions = {\r\n  SET: 'SET',\r\n  GET: 'GET',\r\n  CLEAR: 'CLEAR',\r\n};\r\n\r\n// All keys must be same as value\r\n// Stored in browser storage\r\nexport const LocalStorageVariables = {\r\n  // Number of times the first variant of yellow block page sidebar has been shown\r\n  BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Did user accept SS in the past\r\n  // Sidebar Action Panels related\r\n  BLOCK_PAGE_RED_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_RED_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Whitelist related\r\n  BLOCK_PAGE_WHITELIST: {\r\n    name: 'BLOCK_PAGE_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Number of times the first variant of red block page sidebar has been shown\r\n  BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // blockpage whitelisted sites\r\n  CRYPTO_WHITELIST: {\r\n    name: 'CRYPTO_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Telemetry related\r\n  ENGINE_DOWNLOAD_TASK: {\r\n    name: 'ENGINE_DOWNLOAD_TASK',\r\n    type: 'object'\r\n  },\r\n  // Engine JSON\r\n  ENGINES: {\r\n    name: 'ENGINES',\r\n    type: 'object'\r\n  },\r\n  ENGINES_FUTURE_TIME: { // TODO: Might not need - not being used\r\n    name: 'ENGINES_FUTURE_TIME',\r\n    type: 'object'\r\n  },\r\n  ENGINES_VERSION: {\r\n    name: 'ENGINES_VERSION',\r\n    type: 'string'\r\n  },\r\n  EXTENSION_LOGGING: {\r\n    name: 'EXTENSION_LOGGING',\r\n    options: [0, 1, 2, 3, 4],\r\n    type: 'number'\r\n  },\r\n  USE_NATIVE_LOGGER: {\r\n    name: 'USE_NATIVE_LOGGER',\r\n    type: 'boolean'\r\n  },\r\n  EXTN_UUID2: {\r\n    name: 'EXTN_UUID2',\r\n    type: 'string'\r\n  },\r\n\r\n  IFRAME_BLOCK_FIRST_TIME: {\r\n    name: 'IFRAME_BLOCK_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  LAST_HEARTBEAT_SENT: { // TODO: Might not need - not being used\r\n    name: 'LAST_HEARTBEAT_SENT',\r\n    type: 'object'\r\n  },\r\n  POPUP_STATS: {\r\n    name: 'POPUP_STATS',\r\n    type: 'object'\r\n  },\r\n  POST_INSTALLATION_PAGE_SHOWED: { // TODO: Might not need - not being used\r\n    name: 'POST_INSTALLATION_PAGE_SHOWED',\r\n    type: 'object'\r\n  },\r\n  RAT_DETECTION_WHITELIST: {\r\n    name: 'RAT_DETECTION_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  SEARCH_ANNOTATION_OPTION: {\r\n    name: 'SEARCH_ANNOTATION_OPTION',\r\n    options: [...AnnotationOptions],\r\n    type: 'string'\r\n  },\r\n  // Used as a flag to show SMA Notification for the first time only\r\n  SMA_ANNOTATION_OPTIONS: {\r\n    name: 'SMA_ANNOTATION_OPTIONS',\r\n    options: { ...NonZeroSocialMediaTypes }, // Objects signify checkboxes\r\n    type: 'number'\r\n  },\r\n  // SMA options the user has selected\r\n  SMA_USER_TOGGLE: {\r\n    name: 'SMA_USER_TOGGLE',\r\n    type: 'boolean'\r\n  },\r\n  TELEMETRY_HEARTBEAT_TASK: { // TODO: Complete definition\r\n    name: 'TELEMETRY_HEARTBEAT_TASK',\r\n    type: 'object'\r\n  },\r\n  TYPOSQUATTING_WHITELIST: {\r\n    name: 'TYPOSQUATTING_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  CACHE_TYPOSQUATTING: {\r\n    name: 'CACHE_TYPOSQUATTING',\r\n    type: 'object'\r\n  },\r\n  CACHE_GTI: {\r\n    name: 'CACHE_GTI',\r\n    type: 'object'\r\n  },\r\n  CACHE_TAB_DATA: {\r\n    name: 'CACHE_TAB_DATA',\r\n    type: 'object'\r\n  },\r\n  // Flag to indicate whether to retrieve block page whitelist from native\r\n  USER_NATIVE_STATS: {\r\n    name: 'USER_NATIVE_STATS',\r\n    type: 'boolean'\r\n  },\r\n  // stats for what we have done for the user - shown on popup\r\n  WHITELIST_FLAG: {\r\n    name: 'WHITELIST_FLAG',\r\n    type: 'boolean'\r\n  },\r\n  // DWS Info\r\n  DWS_INFO: {\r\n    name: 'DWS_INFO',\r\n    type: 'object'\r\n  },\r\n  // list of emails already monitored or whitelisted by the user.\r\n  DWS_WHITELIST: {\r\n    name: 'DWS_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  DWS_UNIQUE_EMAILS: {\r\n    name: 'DWS_UNIQUE_EMAILS',\r\n    type: 'array'\r\n  },\r\n  APS_TOAST_FIRST_TIME: {\r\n    name: 'APS_TOAST_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  APS_FULL_MSG_SHOWN_ARRAY: {\r\n    name: 'APS_FULL_MSG_SHOWN_ARRAY',\r\n    type: 'array'\r\n  },\r\n  // Firefox user policy consent\r\n  FF_POLICY_PERSONAL_COLLECTION: {\r\n    name: 'FF_POLICY_PERSONAL_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_ACTIVITY_COLLECTION: {\r\n    name: 'FF_POLICY_ACTIVITY_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_LAST_SHOWN: {\r\n    name: 'FF_POLICY_LAST_SHOWN',\r\n    type: 'number'\r\n  },\r\n  // WA Affid\r\n  WA_AFFID: {\r\n    name: 'WA_AFFID',\r\n    type: 'number'\r\n  },\r\n  // APS TOGGLE SETTING\r\n  APS_TOGGLE_SETTING: {\r\n    name: 'APS_TOGGLE_SETTING',\r\n    type: 'boolean'\r\n  },\r\n  // ANNOTATION JOURNEY TOAST\r\n  AJ_TOAST: {\r\n    name: 'AJ_TOAST',\r\n    type: 'boolean'\r\n  },\r\n  AJ_APS_ENABLE: {\r\n    name: 'AJ_APS_ENABLE',\r\n    type: 'number'\r\n  },\r\n\r\n  HTI_THROTTLE: {\r\n    name: 'HTI_THROTTLE',\r\n    type: 'number'\r\n  },\r\n\r\n  IS_HTI: {\r\n    name: 'IS_HTI',\r\n    type: 'boolean'\r\n  },\r\n};\r\n\r\n// In memory only, not in browser storage, reset upon browser restart\r\nexport const CacheStorageVariables = {\r\n  // RAT Detection related:\r\n  RAT_DETECTION_SHOWING: {\r\n    name: 'RAT_DETECTION_SHOWING',\r\n    type: 'object'\r\n  },\r\n  // Form detection\r\n  FORM_INFO: {\r\n    name: 'FORM_INFO',\r\n    type: 'object'\r\n  },\r\n  SAVE_MULTI_STEP_LOGIN: {\r\n    name: 'SAVE_MULTI_STEP_LOGIN',\r\n    type: 'object'\r\n  },\r\n  APS_EMAIL_LINKS: {\r\n    name: 'APS_EMAIL_LINKS',\r\n    type: 'array'\r\n  },\r\n  WSS_EMAIL: {\r\n    name: 'WSS_EMAIL',\r\n    type: 'string'\r\n  }\r\n};\r\n","import { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n\r\n/**\r\n * Tab data class and it's helper functions\r\n */\r\nexport default class TabData\r\n{\r\n  // Values that will get reset everytime we nativagate to a new page\r\n  static getResetValues()\r\n  {\r\n    return { blockedIframes: [], cryptoBlockData: null, tabDomainTrusted: false };\r\n  }\r\n\r\n  static getDefaultValues()\r\n  {\r\n    return TabData.getResetValues();\r\n  }\r\n\r\n  reset(tabId)\r\n  {\r\n    this.update(tabId, TabData.getResetValues());\r\n  }\r\n\r\n  get(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    return cache[tabId] || TabData.getDefaultValues();\r\n  }\r\n\r\n  set(tabId, newTabData)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    cache[tabId] = newTabData;\r\n    BackgroundGlobals.cacheStore.set(LocalStorageVariables.CACHE_TAB_DATA.name, cache);\r\n  }\r\n\r\n  delete(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    delete (cache[tabId]);\r\n  }\r\n\r\n  update(tabId, newTabData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, ...newTabData });\r\n  }\r\n\r\n  setTabBlockPageData(tabId, blockPageData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, blockPageData });\r\n  }\r\n\r\n  addBlockedFrame(tabId, value)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes.push(value);\r\n  }\r\n\r\n  getBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    return currentTabData.blockedIframes;\r\n  }\r\n\r\n  resetBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes = [];\r\n  }\r\n}\r\n","/**\r\n * The different webpage/url states that exists within WebAdvisor\r\n */\r\nexport const BlockState = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  TYPOSQUATTING: 5,\r\n  PHISHING: 6,\r\n  * [Symbol.iterator]() // Create an iterable that returns all the \"bad\" states\r\n  {\r\n    for (const prop of Object.keys(this))\r\n    {\r\n      if (prop !== 'GREEN' && prop !== 'UNKNOWN')\r\n      {\r\n        yield this[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * The browsers that WebAdvisor supports\r\n */\r\nexport const BrowserType = {\r\n  UNKNOWN: -1,\r\n  FIREFOX: 1,\r\n  CHROME: 2,\r\n  EDGE: 3\r\n};\r\n\r\n/**\r\n * The default settings for extension. These settings are overrided at build time\r\n */\r\nexport const BuildSettings = {\r\n  /* eslint-disable no-undef */\r\n  BROWSER_TYPE: WEBPACK_BROWSER_TYPE,\r\n  DEBUG_MODE: WEBPACK_DEBUG_MODE,\r\n  EXTENSION_VERSION: WEBPACK_EXTN_VERSION,\r\n  LOG_LEVEL: WEBPACK_LOG_LEVEL,\r\n  ENGINES_VERSION: WEBPACK_ENGINES_VERSION,\r\n  YEAR: WEBPACK_YEAR,\r\n  /* eslint-enable no-undef */\r\n};\r\n\r\n/**\r\n * Values to let the native know which Block Page type was shown\r\n */\r\nexport const WPSBlockPageType = {\r\n  Red: 1,\r\n  Yellow: 2,\r\n  Phishing: 3,\r\n  Typoquatting: 4,\r\n  iFrame: 5,\r\n  Crypto: 6,\r\n};\r\n\r\n/**\r\n * Every possible color status shown on WebAdvisor\r\n */\r\nexport const Color = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  DISABLED: 5,\r\n};\r\n\r\n/**\r\n * The different commands that can be executed in the application\r\n */\r\nexport const ExecuteCommands = {\r\n  RAISE_NEW_TAB_EVENT: 3,\r\n  UPDATE_CACHE_STATS: 4 // deprecated.\r\n};\r\n\r\n/**\r\n * The corresponding color values for browser action icon\r\n */\r\nexport const BrowseActionColors = {\r\n  [Color.GREEN]: 'GREEN',\r\n  [Color.YELLOW]: 'YELLOW',\r\n  [Color.RED]: 'RED',\r\n  [Color.UNKNOWN]: 'WHITE',\r\n  [Color.DISABLED]: 'DISABLED',\r\n};\r\n\r\n/**\r\n * The score value ranges that determine the outcome of a webpage's safety\r\n */\r\nexport const Score = {\r\n  CLEAN: 70, // Green\r\n  UNVERIFIED: 30, // Yellow\r\n  DIRTY: 1, // Red\r\n}; // Default Grey (0)\r\n\r\n/**\r\n * Constructs a new object with the object key and values swapped.\r\n * @param   {Object} original - The original object to swap the key and values\r\n * @returns {Object} - The new constructed object with the key and values swapped\r\n */\r\nexport const swapObjectPropertyAndValues = (original) =>\r\n{\r\n  const swapped = {};\r\n\r\n  Object.keys(original).forEach((prop) =>\r\n  {\r\n    swapped[original[prop]] = prop;\r\n  });\r\n\r\n  return swapped;\r\n};\r\n\r\nexport const SEARCH_EXTENSION_DOWNLOAD_URLS = {\r\n  FF: 'https://sadownload.mcafee.com/products/SA/Win/xpi/searchextension/searchextension.xpi',\r\n};\r\n\r\nexport const SEARCH_EXTENSION_STORE_URLS = {\r\n  CH: 'https://chrome.google.com/webstore/detail/mcafee%C2%AE-secure-search/enppghjcblldgigemljohkgpcompnjgh',\r\n  ED: 'https://microsoftedge.microsoft.com/addons/detail/dbghilognjpbmkdcpjgodiieiflmlaeb'\r\n};\r\n\r\n// generate a range of numbers for using in WhitelistedKeys' codes\r\nexport const KEY_CODES_RANGE = (start, end) => Array.from(Array(end + 1).keys()).slice(start);\r\n\r\nexport const SEARCH_URL = {\r\n  YAHOO: 'https://search.yahoo.com/search?fr=mcafee&type=C040US0D19700101&p=',\r\n  BING: 'https://www.bing.com/search?partnercode=MC99&q=',\r\n};\r\n","export const BackgroundConstants = {\r\n  MAX_CACHE_RECORDS: 1000,\r\n  MAX_RESERVED_CALLBACK_ID: 5,\r\n  PHISHING_CATEGORY: 'ph',\r\n  SITE_ADVISOR_URL: 'www.siteadvisor.com/',\r\n  GTI_SERVER: 'https://webadvisorc.rest.gti.mcafee.com/1',\r\n  TYPOSQUATTING_SERVER: 'https://mip.api.mcafeewebadvisor.com/v1/typosquatting?',\r\n  ENGINE_VERSION_URL: 'https://sadownload.mcafee.com/products/SA/Win/extensions/engines/update.json',\r\n  HTI_SERVER: 'https://threat.api.mcafee.com/',\r\n};\r\n\r\n// Add 'watlab1.mcafee.int' to the list for testing.\r\nexport const TrustedDomains = new Set([\r\n  'www.mcafee.com',\r\n]);\r\n\r\nexport const CryptoBlacklist = [\r\n  'wss://*.gasolina.ml/*',\r\n  '*://kissdoujin.com/Content/js/c-hive.js*',\r\n  'wss://*.sen-to-zdrowie.ml/*',\r\n  '*://cookiescript.info/libs/*',\r\n  '*://rocks.io/assets/*',\r\n  '*://coin-have.com/c/*',\r\n  '*://coinnebula.com/lib/*',\r\n  'wss://*.coin-have.com/',\r\n  'ws://digger.cryptobara.com/*',\r\n  'ws://*.webminepool.tk/*',\r\n  '*://*.lewd.ninja/static/m.js*',\r\n  '*://tokyodrift.ga/dropyoulike/a-o/*',\r\n  '*://*.2giga.link/hive/lib/*',\r\n  '*://papoto.com/lib/*',\r\n  '*://load.jsecoin.com/*',\r\n  'ws://*.1q2w3.fun/*',\r\n  '*://*/*plugins/ajcryptominer/assets/*',\r\n  '*://monerominer.rocks/miner.php*',\r\n  '*://minemytraffic.com/*',\r\n  '*://*.monerise.com/core/*',\r\n  '*://*.cookiescript.info/libs/*',\r\n  'ws://hive.tubetitties.com/*',\r\n  'wss://*.freecontent.racing/*',\r\n  'wss://*.hodling.faith/*',\r\n  'ws://gtg02.bestsecurepractice.com/proxy',\r\n  '*://cryptoloot.pro/lib/*',\r\n  '*://lmodr.biz/*',\r\n  '*://*.webminepool.com/lib/base.js',\r\n  'ws://*.sen-to-zdrowie.ml/*',\r\n  'ws://*.morningdigit.com/*',\r\n  '*://mine.nahnoji.cz/*',\r\n  '*://*.minescripts.info/*',\r\n  '*://jsecoin.com/server*',\r\n  '*://coinhive.com/lib*',\r\n  'wss://*.webminepool.tk/*',\r\n  'ws://*.monerise.com/proxy/*',\r\n  '*://kisshentai.net/Content/js/c-hive.js*',\r\n  '*://mataharirama.xyz/*',\r\n  '*://*.coinpirate.cf/*',\r\n  'ws://*.playerassets.info/*',\r\n  'wss://*.1q2w3.fun/*',\r\n  '*://*.1q2w3.fun/*',\r\n  '*://anime.reactor.cc/js/ch/cryptonight.wasm*',\r\n  '*://webmine.cz/miner*',\r\n  'wss://ws.l33tsite.info/*',\r\n  '*://coinhive.com/captcha*',\r\n  'wss://www.mutuza.win/proxy',\r\n  '*://*.morningdigit.com/*',\r\n  'ws://*.host.d-ns.ga/*',\r\n  '*://*.doubleclick5.xyz/*',\r\n  '*://miner.pr0gramm.com/xmr.min.js*',\r\n  '*://*.freecontent.bid/*',\r\n  'ws://lewd.ninja/comics/*',\r\n  'wss://*.monerise.com:9333/proxy/*',\r\n  '*://*.webminepool.com/lib/captcha.js',\r\n  '*://coinerra.com/lib/*',\r\n  '*://*.playerassets.info/*',\r\n  'wss://*.webmine.pro/*',\r\n  'wss://lewd.ninja/comics/*',\r\n  '*://*.doubleclick1.xyz/*',\r\n  'ws://*.freecontent.racing/*',\r\n  '*://*.googleanalytcs.com/*',\r\n  'wss://*.coinnebula.com/proxy*',\r\n  'ws://*.monerise.com:9333/proxy/*',\r\n  'ws://*.freecontent.loan/*',\r\n  '*://party-nngvitbizn.now.sh/*',\r\n  'wss://api.l33tsite.info/*',\r\n  '*://coinlab.biz/lib/coinlab.js*',\r\n  'wss://*.monerise.com/proxy/*',\r\n  'ws://www.mutuza.win/proxy',\r\n  '*://jscdndel.com/content/vidm.min.js*',\r\n  '*://listat.biz/*',\r\n  '*://minecrunch.co/web/*',\r\n  'ws://*.chainblock.science/*',\r\n  '*://baiduccdn1.com/lib/*',\r\n  '*://*.mutuza.win/worker.js',\r\n  '*://*.load.jsecoin.com/*',\r\n  '*://ppoi.org/lib/*',\r\n  'wss://*.chainblock.science/*',\r\n  'wss://*.crypto-loot.com/proxy*',\r\n  'wss://gtg02.bestsecurepractice.com/proxy',\r\n  'wss://*.coinhive.com/proxy*',\r\n  '*://coin-hive.com/captcha*',\r\n  '*://jsccnn.com/content/vidm.min.js*',\r\n  '*://monerominer.rocks/scripts/miner.js*',\r\n  '*://*.jsecoin.com/server*',\r\n  '*://server.jsecoin.com/*',\r\n  'wss://*.coin-hive.com/proxy*',\r\n  '*://*.doubleclick4.xyz/*',\r\n  '*://miner.cryptobara.com/client/*',\r\n  '*://*.rocks.io/assets/*',\r\n  '*://*.ppoi.org/lib/*',\r\n  '*://you.tubetitties.com/worker.js*',\r\n  'wss://*.googleanalytcs.com/*',\r\n  'wss://hive.tubetitties.com/*',\r\n  '*://static.reasedoper.pw/*',\r\n  '*://*.ppoi.org/token/*',\r\n  'ws://*.webmine.pro/*',\r\n  '*://you.tubetitties.com/hash.wasm*',\r\n  '*://*.doubleclick3.xyz/*',\r\n  '*://*.turnsocial.com/m.js',\r\n  'ws://*.hodling.faith/*',\r\n  'wss://*.morningdigit.com/*',\r\n  '*://*.ad-miner.com/lib/*',\r\n  'wss://*.2giga.link/wproxy*',\r\n  'ws://*.googleanalytcs.com/*',\r\n  '*://*.doubleclick6.xyz/*',\r\n  'ws://turnsocial.now.sh/*',\r\n  '*://cdn.cloudcoins.co/javascript/cloudcoins.min.js*',\r\n  '*://joyreactor.cc/ws/ch/*',\r\n  '*://minero.pw/miner.min.js*',\r\n  '*://*.webmine.pro/*',\r\n  '*://punchsub.net/chm.js',\r\n  'wss://mine.nahnoji.cz/*',\r\n  'wss://mine.torrent.pw/*',\r\n  '*://*.mutuza.win/lib/*',\r\n  '*://*.kickass.cd/power2/m.js',\r\n  'ws://*.cpu2cash.link/*',\r\n  '*://*.server.jsecoin.com/*',\r\n  '*://*.mutuza.win/processor.js',\r\n  'wss://turnsocial.now.sh/*',\r\n  '*://kiwifarms.net/js/Jawsh/xmr/xmr.min.js*',\r\n  '*://*.rocks.io/proxy*',\r\n  '*://crypto-loot.com/lib*',\r\n  '*://*.chmproxy.bid/lib/*',\r\n  'ws://*.gasolina.ml/*',\r\n  '*://*.stackpathdns.com/assets/javascript/cr.js',\r\n  '*://*.coinblind.com/lib/*',\r\n  '*://miner.pr0gramm.com/pm.min.js*',\r\n  '*://*.bewhoyouare.gq/*',\r\n  'wss://*.zlx.com.br/proxy*',\r\n  '*://a-o.ninja/apk-AO/kingofthenorth/*',\r\n  '*://ad-miner.com/lib/*',\r\n  '*://*.webminepool.com/api/*',\r\n  '*://*.cpu2cash.link/*',\r\n  '*://*.hemnes.win/*',\r\n  'wss://*.cpu2cash.link/*',\r\n  'ws://*.coinpirate.cf/*',\r\n  'ws://ws.l33tsite.info/*',\r\n  '*://digger.cryptobara.com/client/*',\r\n  '*://kickass.cd/m.js*',\r\n  'ws://*.zlx.com.br/proxy*',\r\n  '*://*.doubleclick2.xyz/*',\r\n  '*://*.amazonaws.com/doubleclick13/*',\r\n  'wss://*.freecontent.loan/*',\r\n  '*://*.host.d-ns.ga/*',\r\n  '*://*.candid.zone/youtube.com/*',\r\n  'ws://api.l33tsite.info/*',\r\n  '*://gtg2.bestsecurepractice.com/lib/*',\r\n  'wss://*.host.d-ns.ga/*',\r\n  '*://coin-hive.com/lib*',\r\n  'ws://mine.nahnoji.cz/*',\r\n  'wss://*.playerassets.info/*',\r\n  '*://*.afminer.com/code/*',\r\n  'wss://*.coinpirate.cf/*',\r\n  '*://cookiescriptcdn.pro/libs/*',\r\n  '*://*.goredirect.party/assets/*',\r\n  '*://*.ZLX.COM.BR/assets/min.js*',\r\n  '*://*.ZLX.COM.BR/assets/playermon.js*',\r\n  '*://p.hemnes.win/lib/*',\r\n  '*://gtg02.bestsecurepractice.com/proxy2/*',\r\n  '*://gtg02.bestsecurepractice.com/meri.js',\r\n  '*://gtg02.bestsecurepractice.com/lv.js',\r\n  '*://gtg02.bestsecurepractice.com/worker.js',\r\n  '*://gtg02.bestsecurepractice.com/processor.js',\r\n  '*://gtg02.bestsecurepractice.com/demo.html',\r\n  '*://*.turnsocial.com/c.wasm*',\r\n  '*://*.turnsocial.com/m.js*',\r\n  '*://cdn.minescripts.info/c/*',\r\n  '*://tokyodrift.ga/dropyoulike/backup/c.wasm*',\r\n  '*://punchsub.net/chm2.js',\r\n  '*://*.kickass.cd/webmr4.js',\r\n  '*://*.kickass.cd/m.js',\r\n  'wss://*.authedmine.com/proxy'\r\n];\r\n\r\nexport const RatBlacklist = [\r\n  {\r\n    domain: 'www.beamyourscreen.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.connectwise.com',\r\n    urls: [\r\n      'www.connectwise.com/platform/unified-management/control'\r\n    ],\r\n  },\r\n  {\r\n    domain: 'get.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'fastsupport.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.join.me',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.de',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.securelink.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'join.zoho.com',\r\n    urls: [],\r\n  }\r\n];\r\n\r\nexport const ApsUrlList = {\r\n  shopping:\r\n  {\r\n    'www.amazon.com':\r\n    {\r\n      paths: ['buy/payselect/handlers', 'buy/addressselect/handlers']\r\n    }\r\n  },\r\n  email:\r\n  {\r\n    'mail.google.com/mail':\r\n    {\r\n      selector: 'table[role=presentation] > tr div[data-message-id] a'\r\n    },\r\n    'outlook.live.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office365.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'mail.yahoo.com':\r\n    {\r\n      selector: 'div[role=main] ul li a'\r\n    },\r\n  }\r\n};\r\n","import { BrowserType, BuildSettings } from '@extension/common/constants';\r\n\r\nclass NativeSettingsPreprocess\r\n{\r\n  static PreprocessSecureSearchRegEx(value)\r\n  {\r\n    return value.trim().split('\\n');\r\n  }\r\n\r\n  static getBrowserSuffix()\r\n  {\r\n    const BROWSER_SUFFIX = {\r\n      CH: '_ch',\r\n      FF: '_ff',\r\n      IE: '_ie',\r\n      EDGE: '_ed',\r\n    };\r\n\r\n    const { CH, FF, EDGE } = BROWSER_SUFFIX;\r\n    const suffixBrowserMap = {};\r\n    suffixBrowserMap[BrowserType.EDGE] = EDGE;\r\n    suffixBrowserMap[BrowserType.FIREFOX] = FF;\r\n    suffixBrowserMap[BrowserType.CHROME] = CH;\r\n\r\n    return suffixBrowserMap[BuildSettings.BROWSER_TYPE];\r\n  }\r\n}\r\n\r\nexport const SCOPE = {\r\n  SYSTEM: 0,\r\n  USER: 1,\r\n};\r\nconst { SYSTEM, USER } = SCOPE;\r\n\r\nexport const SETTINGS_TYPE = {\r\n  NONE: 0,\r\n  INT: 1,\r\n  INT64: 2,\r\n  BOOL: 3,\r\n  STRING: 4,\r\n};\r\n\r\nexport const NativeConstants = {\r\n  WEBBOOST_AUTO_PLAY_NOTIFICATION: 'AutoPlayNotificationRequired',\r\n  WEBBOOST_UPSELL_DISABLED: 'WBUpsellDisabled', // TODO: re-introduce for WB Upsell\r\n  USE_NATIVE_LOGGER: 'UseNativeLogger',\r\n};\r\n\r\n// For retrieving native settings just change the one json object below. Access the nativeSettings value as eg BkGlobals.nativeSettings.AFF_ID.value\r\nconst _browser = NativeSettingsPreprocess.getBrowserSuffix();\r\nexport const NativeSettings = {\r\n  // Dev\r\n  DEV_MODE: { scope: SYSTEM, name: 'dev_mode', value: false },\r\n\r\n  // Product\r\n  AFF_ID: { scope: SYSTEM, name: '*Affid', value: 0 },\r\n  BINARY_VERSION: { scope: SYSTEM, name: 'version', value: null },\r\n  EXTENSION_VERSION_CH: { scope: SYSTEM, name: 'ChromeExtVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_FF: { scope: SYSTEM, name: '*FirefoxXPIVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_ED: { scope: SYSTEM, name: 'EdgeExtVersion', value: '', writeOnly: true },\r\n\r\n  // Machine\r\n  BROWSER_TYPE: { scope: SYSTEM, name: 'browsertype', value: '', writeOnly: true },\r\n  USER_AGENT: { scope: SYSTEM, name: 'useragent', value: '', writeOnly: true },\r\n\r\n  // Secure Search\r\n  SUGGESTION_URL: { scope: SYSTEM, name: 'suggestion_url', value: '' },\r\n  SCRIPT_GENERATED_DEFAULT_SS_URL: { scope: USER, name: `SCRIPT_GENERATED_DEFAULT_SS_URL${_browser}`, value: '' },\r\n  SECURE_SEARCH_REGEXES: { scope: USER, name: 'SECURE_SEARCH_REGEXES', value: '', preprocess: NativeSettingsPreprocess.PreprocessSecureSearchRegEx },\r\n  SHOW_SEARCH_SETTINGS: { scope: SYSTEM, name: '*ShowSearchSettings', value: true },\r\n  SECURE_SEARCH_TOAST_STAMP: { scope: USER, name: `*SSDateStampShowedToast${_browser}`, value: 0 },\r\n  SECURE_SEARCH_ANNOTATION_ONLY: { scope: SYSTEM, name: '*OnlyShowAnnotationsOnSecureSearch', value: true },\r\n  SECURE_SEARCH_SHOW_ICONS: { scope: USER, name: '*Icons', value: true },\r\n  SECURE_SEARCH_CHOICE: { scope: USER, name: `*SSToastChoice${_browser}`, value: false },\r\n  SS_DEF: { scope: SYSTEM, name: `*SS_DEF${_browser}`, value: 0 },\r\n  ANNOTATIONS_CHOICE_EXPLICIT: { scope: SYSTEM, name: `*AnnotationsChoiceExplicit${_browser}`, value: false },\r\n  CURRENT_SAO_IN_EXTENSION: { scope: USER, name: `*CurrentSAOInExtension${_browser}`, value: '' },\r\n\r\n  // Firefox Toast\r\n  FF_EXTENSION_LAST_TOAST_TIME: { scope: USER, name: 'ff_extension_last_toast_time', value: 0, writeOnly: true },\r\n  FF_EXTENSION_TOAST_COUNT: { scope: USER, name: 'ff_extension_toast_count', value: 0, writeOnly: true },\r\n\r\n  // Checklist Settings\r\n  CHECKLIST_START_INGORE_DATE_AV: { scope: SYSTEM, name: 'startIgnoreDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_START_IGNORE_DATE_FW: { scope: SYSTEM, name: 'startIgnoreDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_IGNORE_DURACTION: { scope: SYSTEM, name: 'ignoreDuration', value: '14', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_AV: { scope: SYSTEM, name: 'fixGracePeriodStartDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_FW: { scope: SYSTEM, name: 'fixGracePeriodStartDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_DURATION: { scope: SYSTEM, name: 'fixGracePeriodDuration', value: '24', writeOnly: true },\r\n\r\n  // Crypto\r\n  CRYPTOJACKING_DISABLED: { scope: SYSTEM, name: 'CryptojackingDisabled', value: false },\r\n\r\n  // SMA\r\n  SMA_USER_TOGGLE: { scope: SYSTEM, name: `sma_user_toggle${_browser}`, value: false, writeOnly: true },\r\n  SMA_ANNOTATION_OPTIONS: { scope: SYSTEM, name: `sma_annotation_options${_browser}`, value: 0, writeOnly: true },\r\n\r\n  // Stats\r\n  PAGES_SCANNED: { scope: SYSTEM, name: '*CounterPagesScanned', value: 0 },\r\n  PAGES_BLOCKED: { scope: SYSTEM, name: '*CounterPagesBlocked', value: 0 },\r\n  DOWNLOADS_SCANNED: { scope: SYSTEM, name: '*CounterDownloadsScanned', value: 0 },\r\n  DOWNLOADS_BLOCKED: { scope: SYSTEM, name: '*CounterDownloadsBlocked', value: 0 },\r\n  CRYPTO_BLOCKED: { scope: SYSTEM, name: '*CounterCryptoJackingBlocked', value: 0 },\r\n\r\n  // Native Whitelist\r\n  BLOCKPAGE_WHITELIST: { scope: USER, name: '*WhiteList', value: '' },\r\n  TS_WHITELIST: { scope: USER, name: '*TListWhiteList', value: '' },\r\n\r\n  // GTI\r\n  CSP_ID_SETTING: { scope: SYSTEM, name: 'CSPIdValue', value: '__not_available__' },\r\n\r\n  // Uninstall URL\r\n  UNINSTALL_SURVEY_ENABLED: { scope: SYSTEM, name: 'uninstall_survey_enabled', value: false },\r\n  UNINSTALL_SURVEY_URL: { scope: SYSTEM, name: 'uninstall_survey_url', value: '' },\r\n\r\n  // RAT Detection\r\n  RAT_DETECTION_ENABLED: { scope: SYSTEM, name: 'rat_detection_enabled', value: true },\r\n\r\n  // IDPS - enum type (0 = feature turned off | 1 = feature partially on, only for sending telemetry | 2 = feature turned on completely)\r\n  IDPS_FEATURE_ENABLED: { scope: SYSTEM, name: 'idps_feature_enabled', value: 0 },\r\n\r\n  // Advanced Protection Signal\r\n  APS_COHORT: { scope: SYSTEM, name: 'aps_cohort', value: 0 },\r\n  APS_TOGGLE_SETTING: { scope: SYSTEM, name: 'aps_toggle_setting', value: true },\r\n\r\n  // Alternative triggers\r\n  ALT_TRIGGER: { scope: SYSTEM, name: 'alt_triggers_cohort', value: 0 },\r\n\r\n  // Form detection optimization feature\r\n  IFRAME_FORM_CHECK_ENABLED: { scope: SYSTEM, name: 'iframe_form_check_enabled', value: true },\r\n\r\n  ANNOTATION_JOURNEY_COHORT: { scope: SYSTEM, name: `annotation_journey_cohort${_browser}`, value: 0 },\r\n  ANNOTATION_JOURNEY_TOAST: { scope: USER, name: `aj_toast${_browser}`, value: null },\r\n\r\n  // The throttle percentage for extension\r\n  HTI_THROTTLE: { scope: SYSTEM, name: 'hti_throttle', value: 0 },\r\n  MTI_CLIENT_ID: { scope: SYSTEM, name: 'gti_client_id', value: '' },\r\n};\r\n","// Background\r\n\r\nimport TabData from '@extension/common/tab_data';\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { BackgroundConstants, CryptoBlacklist, TrustedDomains, RatBlacklist, ApsUrlList } from '@extension/common/background_constants';\r\nimport { NativeSettings } from '@extension/background/dispatchers/native/native_settings';\r\n\r\nexport const BackgroundGlobals = {\r\n  // This flag is set to false by automation to avoid isTrusted check in shadowDOM.\r\n  // Since WA use custom shadowDOM access in automation without using Selenium, isTrusted is false\r\n  // hence for tests to succeed automation will set this flag to false before running tests.\r\n  isTrustCheckRequired: true,\r\n  ExtensionTelemetryUrl: null,\r\n  scheduleManager: null,\r\n  schedules: null,\r\n  isNativeConnected: true,\r\n  telemetryEngine: null,\r\n  postInstallationPage: 'https://www.mcafee.com/consumer/v/wa-how.html',\r\n  listenerManager: null,\r\n  firefoxInternalUUID: '',\r\n  shadowMode: 'closed',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  cacheStore: null,\r\n  ffViewports: null,\r\n  garbageCollector: null,\r\n  typoCache: null,\r\n  logger: null,\r\n  loglevel: null,\r\n  messageDispatcher: null, // The message handler for native messaging\r\n  port: null,\r\n  tabData: new TabData(), // Information about all the tab\r\n  tabIdToLastClickTime: new Map(),\r\n  useNativeLogger: false,\r\n  wasm: null, // webassembly module\r\n  userAgentInBase64: null,\r\n  typoSquattingServer: BackgroundConstants.TYPOSQUATTING_SERVER,\r\n  tldParser: null,\r\n  cryptoBlacklist: CryptoBlacklist,\r\n  trustedDomains: TrustedDomains,\r\n  nativeSettings: NativeSettings,\r\n  searchSuggest: null,\r\n  ratBlacklist: RatBlacklist,\r\n  updatedByNative: false, // flag indicate whether these global variables have been updated by native\r\n\r\n  // WSS\r\n  wssMessageDispatcher: null, // The message handler for WSS native messaging\r\n  wssNativeClient: null,\r\n  WSS_INSTALLED: false,\r\n  isWPSInstalled: false,\r\n\r\n  // Engines JSON\r\n  searchEngines: null,\r\n  enginesVersionUrl: BackgroundConstants.ENGINE_VERSION_URL,\r\n  engineCheckInterval: 1000 * 60 * 60 * 24,\r\n  ENGINES_VERSION: BuildSettings.ENGINES_VERSION,\r\n\r\n  // Feature flags\r\n  AUTO_PLAY_NOTIFICATION_ENABLED: false,\r\n\r\n  // Automation specific flags\r\n  ALLOW_LOCALHOST: false,\r\n\r\n  // Form detection\r\n  IDPS_AUTH_URL: 'https://csptoken.ccs.mcafee.com/auth/token',\r\n  IDPS_BREACH_COUNT_URL: 'https://identity.unifiedapis.mcafee.com/breach/v1/BreachCount',\r\n  IDPS_CSP_CLIENT_ID: null,\r\n  IDPS_IS_ENTITLED: false,\r\n  IDPS_PROVISION_ID: null,\r\n  IDPS_LOGIN_DOMAIN: 'https://protection.mcafee.com',\r\n\r\n  // Unified Auth\r\n  UA_CLIENT: null,\r\n\r\n  // Typosquatting cache variables\r\n  TYPOSQUATTING_MAX_CACHE: 100,\r\n  TYPOSQUATTING_EXPIRY: 1000 * 60 * 60 * 24 * 30, // 1 month\r\n\r\n  // AMWA-11850 CPSIR-83 - Secret code that is appended to image requests to not allow external access to image files\r\n  WA_IMAGE_SECRET: null,\r\n\r\n  // Advanced Protection Signal URLs\r\n  apsUrlList: ApsUrlList,\r\n  apsAnimationTimeout: 5000,\r\n\r\n  downloadUrls: new Set(),\r\n\r\n  // Small Business Integration\r\n  wpsRequestedSettings: new Set(['SMA_USER_TOGGLE', 'SEARCH_ANNOTATION_OPTION', 'SMA_ANNOTATION_OPTIONS']),\r\n\r\n  // Permitted content types . These types are not blocked by URL but passed to native for download scanning.\r\n  permittedContentTypes: ['application/vnd.microsoft.portable-executable',\r\n    'application/octet-stream',\r\n    'application/x-msdos-program',\r\n    'application/x-msdownload',\r\n    'binary/octet-stream',\r\n    'application/x-msdownload'\r\n  ],\r\n\r\n  // supported extenal website connections\r\n  SUPPORTED_WEBSITE_LIST: [\r\n    'protection.mcafee.com',\r\n    'protection-dev-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-dev2-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-qa-roadhouse-int.dvqa.mcafee.com',\r\n  ],\r\n\r\n  // per user use either GTI or HTI. true means set HTI while installing and if false means set GTI\r\n  isHTI: false,\r\n  mtiRequestor: null,\r\n  gtiServer: BackgroundConstants.GTI_SERVER,\r\n  htiServer: BackgroundConstants.HTI_SERVER,\r\n  cspClientId: 'e87c73de-b45e-4427-b590-5124401795b6',\r\n};\r\n","export const ForegroundGlobals = {\r\n  loglevel: null, // specify the current recorded loglevel\r\n};\r\n","// Background\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\n// Common\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n// Foreground\r\nimport { ForegroundGlobals } from '@extension/ui/foreground/foreground_globals';\r\n\r\n/**\r\n * The different log levels considered when detecting / reporting errors in WebAdvisor\r\n * Note that a higher level means that more logs will be printed. (ie, level 3 will print level 2 and 1)\r\n */\r\nexport const LogLevels = {\r\n  NONE: 0,\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * The different log types\r\n */\r\nexport const LogTypes = {\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * Process type to distinguish which process called the logger\r\n */\r\nexport const ProcessTypes = {\r\n  BACKGROUND: 'BACKGROUND',\r\n  CONTENT: 'CONTENT',\r\n  TELEMETRY: 'TELEMETRY',\r\n  SMART_NATIVE_CLIENT: 'SMART_NATIVE_CLIENT'\r\n};\r\n\r\nexport const ProcessStyleMap = {\r\n  DEFAULT: 'color: #000000; font-weight: normal; font-style:normal; background: #FFFFFF;',\r\n  BACKGROUND: 'color: #8D0DBA; font-weight: bold; background: #FFFFFF;',\r\n  CONTENT: 'color: #F54A26; font-weight: bold; background: #FFFFFF;',\r\n  TELEMETRY: 'color: #147831; font-weight: bold; background: #FFFFFF;',\r\n  SMART_NATIVE_CLIENT: 'color: #004d7c; font-weight: bold; background: #FFFFFF;'\r\n};\r\n\r\n// *****************************************************************************\r\n// Set \"ExtensionLogging\" = 1 in registry at the same place we set LogLevel\r\n// will turn on native logging. This will log everything including INFO and ERR.\r\n// *****************************************************************************\r\n// *****************************************************************************\r\n// Type \"chrome.storage.local.set({'EXTENSION_LOGGING': 3});\" into the background\r\n// page console to forcefully turn on or turn off the logs inside extension\r\n// chrome = chrome/browser, # = the log level from 0 to 4\r\n// *****************************************************************************\r\nexport class Logger\r\n{\r\n  static processLog(message, logType, process = undefined)\r\n  {\r\n    if (logType === LogLevels.NONE)\r\n    {\r\n      return;\r\n    }\r\n\r\n    // verify that process is a valid option, else set it undefined\r\n    if (process && !Object.values(ProcessTypes).includes(process))\r\n    {\r\n      process = undefined;\r\n    }\r\n\r\n    // Checking whether native logging is enabled or not.\r\n    chrome.storage.local.get(LocalStorageVariables.USE_NATIVE_LOGGER.name, (useNativeLogger) =>\r\n    {\r\n      if (useNativeLogger[LocalStorageVariables.USE_NATIVE_LOGGER.name] === true)\r\n      {\r\n        if (!process)\r\n        {\r\n          // Check if the current code is being ran in the background or foreground\r\n          process = isBackground() ? ProcessTypes.BACKGROUND : ProcessTypes.CONTENT;\r\n        }\r\n        const details = {\r\n          processType: process,\r\n          browserType: BuildSettings.BROWSER_TYPE,\r\n          extensionType: 'wa',\r\n          logType,\r\n          message\r\n        };\r\n\r\n        BackgroundGlobals.messageDispatcher && BackgroundGlobals.messageDispatcher.logger(details);\r\n      }\r\n    });\r\n\r\n    // log within extension\r\n    consoleLog(message, logType, process);\r\n  }\r\n\r\n  /**\r\n   * Set the native Logging status\r\n   * @param {*} state\r\n   */\r\n  static setNativeLogging(state)\r\n  {\r\n    BackgroundGlobals.useNativeLogger = state;\r\n    chrome.storage.local.set(LocalStorageVariables.USE_NATIVE_LOGGER, state);\r\n  }\r\n\r\n  // Need to include processType for telemetry logging only.\r\n  static log(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.INFO, processType);\r\n  }\r\n\r\n  static error(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.ERROR, processType);\r\n  }\r\n\r\n  static warn(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.WARN, processType);\r\n  }\r\n\r\n  static debug(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.DEBUG, processType);\r\n  }\r\n}\r\n\r\nconst consoleLog = async (message, logType, process = undefined) =>\r\n{\r\n  const logLevel = await getLogLevel();\r\n  if (logLevel === LogLevels.NONE)\r\n  {\r\n    return;\r\n  }\r\n\r\n  const processType = process || (isBackground() ? ProcessTypes.BACKGROUND\r\n    : ProcessTypes.CONTENT);\r\n  const nowDate = new Date();\r\n  const logMessage = `%c[${processType} ${nowDate.toLocaleString([], { hour: '2-digit', minute: '2-digit', hour12: true })}]: %c${message}`;\r\n\r\n  const styleRegular = ProcessStyleMap.DEFAULT;\r\n  let hightlight = ProcessStyleMap[processType];\r\n\r\n  if (!hightlight)\r\n  {\r\n    hightlight = styleRegular;\r\n  }\r\n\r\n  if (logLevel >= LogLevels.ERROR && logType === LogTypes.ERROR)\r\n  {\r\n    console.error(logMessage, styleRegular, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.INFO && logType === LogTypes.INFO)\r\n  {\r\n    console.log(logMessage, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.WARN && logType === LogTypes.WARN)\r\n  {\r\n    const uniqueHighlight = 'color: #FFA500; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cWARN - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.DEBUG && logType === LogTypes.DEBUG)\r\n  {\r\n    const uniqueHighlight = 'color: #FF33D7; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cDEBUG - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n};\r\n\r\nconst isBackground = () =>\r\n{\r\n  const isBackground = BackgroundGlobals.cacheStore !== null;\r\n  return isBackground;\r\n};\r\n\r\nconst getLogLevel = async () =>\r\n{\r\n  // Check if the current code is being ran in the background or foreground\r\n  const context = isBackground() ? BackgroundGlobals : ForegroundGlobals;\r\n\r\n  // get loglevel from the current context\r\n  let level = context.loglevel;\r\n\r\n  // if current context loglevel is null (aka not set, we will retrieve the level from storage)\r\n  if (context.loglevel === null)\r\n  {\r\n    level = await getStorageLogLevelAsync();\r\n    context.loglevel = (level === null || level === undefined) ? BuildSettings.LOG_LEVEL : level;\r\n  }\r\n\r\n  if (Number.isInteger(level) && Object.values(LogLevels).includes(level))\r\n  {\r\n    return level;\r\n  }\r\n\r\n  return BuildSettings.LOG_LEVEL;\r\n};\r\n\r\nconst getStorageLogLevelAsync = async () =>\r\n{\r\n  const storageLocalGetAsync = new Promise((resolve) => chrome.storage.local.get(LocalStorageVariables.EXTENSION_LOGGING.name, resolve));\r\n  const response = await storageLocalGetAsync;\r\n  const storageLogLevel = response[LocalStorageVariables.EXTENSION_LOGGING.name];\r\n  if (Number.isInteger(storageLogLevel) && Object.values(LogLevels).includes(storageLogLevel))\r\n  {\r\n    return storageLogLevel;\r\n  }\r\n  return null;\r\n};\r\n","import { extension } from '@extension/common/webextension';\nimport HttpService from '@extension/common/http_service';\nimport BackgroundIPC from '@extension/common/background_ipc';\nimport { Logger } from '@extension/common/logger';\n/////////////////////////////////\n////////\n//////////////////////////////////////////////////////////\n//////////\n\nexport default class UIContentUtils\n{\n  /**\n   * Load HTML templates into Shadow Dom\n   * @param {object} properties                 - properties used by the host node\n   * @param {object} properties.hostStyles      - css object to be applied on the host node\n   * @param {object} baseTemplate               - main template to render\n   * @param {string} baseTemplate.htmlPath      - path to the html file\n   * @param {string} baseTemplate.cssPath       - path to the css file\n   * @param {object} childTemplate              - (optional) inner template to render (if one is provided)\n   * @param {string} childTemplate.htmlPath     - path to the html file\n   * @param {string} childTemplate.cssPath      - path to the css file\n   * @param {string} childTemplate.containerId  - append the html into this containerId from base html path\n   */\n  static async loadTemplate(properties, baseTemplate, childTemplate = null)\n  {\n    const { hostStyles } = properties;\n\n    // Create and attach shadow DOM node to regular DOM\n    const hostNode = document.createElement('div');\n    for (const property in hostStyles)\n    {\n      hostNode.style[property] = hostStyles[property];\n    }\n\n    const bkGlobals = await BackgroundIPC.getBkGlobals();\n\n    const mode = bkGlobals.shadowMode;\n\n    const shadowRoot = hostNode.attachShadow({ mode });\n\n    // Handle base template\n    await UIContentUtils.populateContainer(baseTemplate, shadowRoot);\n\n    // Handle child template (if one is provided)\n    if (childTemplate) await UIContentUtils.populateContainer(childTemplate, shadowRoot);\n\n    document.body.appendChild(hostNode);\n    return { hostNode, shadowRoot };\n  }\n\n  static async populateContainer(templateData, shadowRoot)\n  {\n    const { htmlPath, cssPath, containerId, waImageSecret } = templateData;\n    const template = await UIContentUtils.getTemplate(htmlPath, cssPath, waImageSecret);\n    const container = containerId ? shadowRoot.querySelector(`#${containerId}`) : shadowRoot;\n    container.appendChild(template);\n  }\n\n  static async reloadTemplate(templateData, baseTemplateData, shadowRoot)\n  {\n    // remove all data within the shadow root\n    shadowRoot.innerHTML = '';\n\n    // repopulate base container (if one is provided)\n    if (baseTemplateData) await UIContentUtils.populateContainer(baseTemplateData, shadowRoot);\n\n    // repopulate container\n    await UIContentUtils.populateContainer(templateData, shadowRoot);\n  }\n\n  static async getTemplate(htmlPath, cssPath = null, waImageSecret)\n  {\n    const httpService = new HttpService();\n    const template = document.createElement('template');\n\n    // Grab markup and inject into the base template\n    const responseText = await httpService.sendHttpRequest({ url: extension.runtime.getURL(htmlPath) });\n    const htmlText = await responseText.text();\n\n    // Grab styles and inject into the base template as a new style tag\n    let stylesText = '';\n    if (cssPath)\n    {\n      const responseStyles = await httpService.sendHttpRequest({ url: extension.runtime.getURL(cssPath) });\n      stylesText = await responseStyles.text();\n///////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////\n////////////////////////////////////////////////////////////////\n      stylesText = `<style>${stylesText}</style>`;\n////////////////\n    }\n    let cleanHTML = '';\n    // Wrapper template element\n/////////////////////////////////////\n///////////////////////////////////////\n//////////////\n//////////////////////////////////////////////////////////////\n    cleanHTML = htmlText;\n//////////////\n    template.innerHTML = `${stylesText}${cleanHTML}`;\n\n    // Resolve images\n    for (const image of template.content.querySelectorAll('img[x-mcsrc]'))\n    {\n      const source = image.getAttribute('src');\n      const secretParam = `?secret=${waImageSecret}`;\n      image.src = extension.runtime.getURL(source + secretParam);\n    }\n\n    return template.content.cloneNode(true);\n  }\n\n  static async initFontOnDocument()\n  {\n    // Add custom typefaces and inject into the main document because shadow DOM does not load custom fonts.\n    // For example Google Fonts must be added to the main document (light DOM) for typeface to work.\n    try\n    {\n      // Poppins\n      const poppinsUrl = extension.runtime.getURL('fonts/Poppins-Regular.ttf');\n      const poppinsFont = new FontFace('mcafeePoppins', `url(${poppinsUrl})`);\n      const poppinsPromise = poppinsFont.load(); // wait for font to be loaded\n\n      // OpenSans\n      const openSansUrl = extension.runtime.getURL('fonts/OpenSans-Regular.ttf');\n      const openSansFont = new FontFace('mcafeeOpenSans', `url(${openSansUrl})`);\n      const openSansPromise = openSansFont.load(); // wait for font to be loaded\n\n      const [poppins, openSans] = await Promise.all([poppinsPromise, openSansPromise]);\n      document.fonts.add(poppins); // add font to document\n      document.fonts.add(openSans); // add font to document\n    }\n    catch (error)\n    {\n      Logger.error(error);\n    }\n  }\n\n  static fadeIn(element)\n  {\n    element.style.opacity = 0;\n    element.style.display = 'block';\n\n    function fade()\n    {\n      const opacity = +element.style.opacity + 0.1;\n      if (opacity < 1)\n      {\n        element.style.opacity = opacity;\n        window.requestAnimationFrame(fade);\n      }\n    }\n\n    fade();\n  }\n\n  static fadeOut(element, cb)\n  {\n    let stopTransition = false;\n    element.style.opacity = 1;\n\n    function fade()\n    {\n      // Sometimes the event queue isn't all cleared in time for fadeIn to begin\n    // and a delayed invocation causes an infinite recursion battle between fadeIn & fadeOut\n    // This flag acts as an official kill switch.\n      if (stopTransition) return;\n\n      const opacity = +element.style.opacity - 0.1;\n      if (opacity <= 0)\n      {\n        stopTransition = true;\n        element.style.display = 'none';\n        cb();\n      }\n      else\n      {\n        element.style.opacity = opacity;\n        window.requestAnimationFrame(fade);\n      }\n    }\n\n    fade();\n  }\n}\n","// This global object is used by core to store the properites that are shared across multiple objects in core.\r\n// Most of the properties set in this object are set during initialization of coreengine.\r\n\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\nimport ExternalMsgDispatcher from '@core-engine/external_msg_dispatcher';\r\n\r\nexport const Globals = {\r\n  uid: '0DE9E47C-871A-4F90-8440-B190C216800A',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  externalMsgDispatcher: new ExternalMsgDispatcher(),\r\n  reputationReqCount: 5,\r\n  imageCounter: 0,\r\n  isSearchHitSend: false,\r\n  resourceRequestor: null,\r\n  clientFunctions: null,\r\n  activeURI: null,\r\n  eventHandler: null,\r\n  bkGlobals: null,\r\n  searchEngine: null,\r\n  searchAnnotationOption: AnnotationOptions.ONLY_SECURE_SEARCH,\r\n  socialMediaOption: SocialMediaTypes.NONE,\r\n  socialMediaToggle: false,\r\n\r\n  // Show \"view site report\" link on annotation balloon\r\n  hasReportPage: true,\r\n};\r\n","import { extension } from '@extension/common/webextension';\r\nimport { ExternalCommands } from '@extension/common/commands';\r\nimport { Logger } from '@extension/common/logger';\r\n\r\nexport default class ExternalMsgDispatcher\r\n{\r\n  isvalidRequestType(requestType)\r\n  {\r\n    let valid = false;\r\n    for (const type in ExternalCommands)\r\n    {\r\n      if (ExternalCommands[type] === requestType)\r\n      {\r\n        valid = true;\r\n      }\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  validateMsg(requestType, payload)\r\n  {\r\n    if (\r\n      requestType === undefined\r\n      || payload === undefined\r\n      || !this.isvalidRequestType(requestType)\r\n    )\r\n    {\r\n      Logger.error('Invalid msg to be sent externally');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  sendExtnMsg(extnId, message, cb)\r\n  {\r\n    const defaultCb = (resolve, reject, data) =>\r\n    {\r\n      if (extension.runtime.lastError) reject(extension.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      const { request_type: requestType, payload } = message;\r\n      if (!this.validateMsg(requestType, payload))\r\n      {\r\n        reject(Error('sendExtnMsg: Invalid Message'));\r\n      }\r\n\r\n      extension.runtime.sendMessage(extnId, message, (data) =>\r\n      {\r\n        if (typeof cb === 'function') cb(resolve, reject, data);\r\n        else defaultCb(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","// Utilities\r\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\r\nimport { Globals } from '@core-engine/globals';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n\r\n/**\r\n * Base class handling the sidebar action panel markup, styles and event listeners.\r\n */\r\nexport default class ShadowDomContainer\r\n{\r\n  constructor(hostStyles, baseTemplate = null)\r\n  {\r\n    this.closing = false; // flag to indicate ui is closing\r\n    this.showing = false; // flag to indicate ui is showing\r\n    this.animateReload = true; // flag to animate slide out/in when reloading content\r\n    this.allowReplace = true; // flag to allow content to be replaced or not\r\n    this.componentData = null; // variable used for preventing same content to be re-rendered\r\n    this.template = null; // variable used for preventing same template to be re-rendered (used along with allowReplace)\r\n\r\n    this.hostNode = null;\r\n    this.shadowRoot = null;\r\n    this.hostStyles = hostStyles;\r\n    this.baseTemplate = baseTemplate;\r\n\r\n    // Exposed functions for extendee to use\r\n    this.showContainer = this.showContainer.bind(this);\r\n    this.closeContainer = this.closeContainer.bind(this);\r\n    this.query = this.query.bind(this);\r\n    this.clickListener = this.clickListener.bind(this);\r\n\r\n    // feature\r\n    this.bgGrayout = false; // for adding a background grayout overlay on top of the page\r\n    this.bgGrayoutElement = null;\r\n  }\r\n\r\n  /**\r\n   * Load HTML templates into Shadow Dom\r\n   * @param {object}  template\r\n   * @param {string}  template.htmlPath       - path to the html file\r\n   * @param {string}  template.cssPath        - path to the css file\r\n   * @param {string}  template.containerId    - (optional): append the html into this containerId from base html path\r\n   * @param {bool}    template.allowReplace   - (default = true) set to false content cannot be replaced unless the template is different\r\n   * @param {bool}    template.animateReload  - (default = true) when reloading the content, slide out/in when changing the content\r\n   * @param {object}  template.componentData  - (default == null) - used mainly to avoid rendering same component\r\n   */\r\n  async initContainer(template, componentData = null)\r\n  {\r\n    // Prevent rendering UI if ui is closing or already showing\r\n    if (this.closing) return false;\r\n\r\n    // Also prevent if allowReplace=false and the template is the same\r\n    if (this.showing && (this.allowReplace === false && ShadowDomContainer.isSameObject(template, this.template))) return false;\r\n\r\n    // Ignore content that has been shown\r\n    if (this.componentData && JSON.stringify(this.componentData) === JSON.stringify(componentData)) return false;\r\n\r\n    this.componentData = componentData;\r\n\r\n    // Set new behavior for the container\r\n    const { allowReplace = true, animateReload = true } = template;\r\n    this.allowReplace = allowReplace;\r\n    this.animateReload = animateReload;\r\n    this.showing = true;\r\n\r\n    // If the host node has been created and allowReplace is true\r\n    // then we can just reload the sidebar with new content\r\n    if (this.hostNode && allowReplace)\r\n    {\r\n      await this.reloadContainer(template);\r\n      return true;\r\n    }\r\n\r\n    // This is to handle parent/child template between containers which has a parent (eg. sidebar) and containers without one (eg. topbar)\r\n    let childTemplate = { ...template };\r\n    this.template = childTemplate;\r\n    if (this.baseTemplate === null)\r\n    {\r\n      this.baseTemplate = childTemplate;\r\n      childTemplate = null;\r\n    }\r\n\r\n    const properties = { hostStyles: { ...this.hostStyles.DEFAULT, ...this.hostStyles.HIDE } };\r\n    const { hostNode, shadowRoot } = await UIContentUtils.loadTemplate(properties, this.baseTemplate, childTemplate);\r\n    this.hostNode = hostNode;\r\n    this.shadowRoot = shadowRoot;\r\n\r\n    Globals.bkGlobals = await BackgroundIPC.getBkGlobals();\r\n\r\n    return true;\r\n  }\r\n\r\n  static isSameObject(object1 = null, object2 = null)\r\n  {\r\n    if (object1 === null && object2 === null) return true;\r\n    return object1 && object2 && JSON.stringify(object1) === JSON.stringify(object2);\r\n  }\r\n\r\n  async reloadContainer(template, animateReload = this.animateReload)\r\n  {\r\n    // On reload, close the sidebar (if animate = true)\r\n    // prevent re-rendering during reload\r\n    await this.closeContainer(false, animateReload);\r\n\r\n    // Load new template\r\n    this.template = template;\r\n    await UIContentUtils.reloadTemplate(template, this.baseTemplate, this.shadowRoot);\r\n  }\r\n\r\n  setBackgroundOverlay(show)\r\n  {\r\n    const body = document.querySelector('body');\r\n\r\n    if (show)\r\n    {\r\n      // Grayout the background\r\n      const styles = 'display:none; width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 99999; background: rgba(0, 0, 0, 0.3);';\r\n      this.bgGrayoutElement = document.createElement('div');\r\n      this.bgGrayoutElement.style.cssText = styles;\r\n\r\n      body.append(this.bgGrayoutElement); // Add the grayout\r\n      body.style.overflow = 'hidden'; // hide the scrollbar\r\n      UIContentUtils.fadeIn(this.bgOverlay);\r\n    }\r\n    else\r\n    {\r\n      if (this.bgGrayoutElement) UIContentUtils.fadeOut(this.bgGrayoutElement, () => {});\r\n      body.style.overflow = 'auto'; // re-show the scrollbar\r\n    }\r\n  }\r\n\r\n  showBackgroundGrayout(bgGrayout)\r\n  {\r\n    this.bgGrayout = bgGrayout;\r\n    if (!bgGrayout) return;\r\n\r\n    // Grayout the background\r\n    const styles = 'display:none; width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 99999; background: rgba(0, 0, 0, 0.3);';\r\n    this.bgGrayoutElement = document.createElement('div');\r\n    this.bgGrayoutElement.style.cssText = styles;\r\n\r\n    const body = document.querySelector('body');\r\n    body.append(this.bgGrayoutElement); // Add the grayout\r\n    body.style.overflow = 'hidden'; // hide the scrollbar\r\n    UIContentUtils.fadeIn(this.bgGrayoutElement);\r\n  }\r\n\r\n  hideBackgroundGrayOut()\r\n  {\r\n    if (this.bgGrayoutElement && this.bgGrayout)\r\n    {\r\n      UIContentUtils.fadeOut(this.bgGrayoutElement, () => {});\r\n      document.querySelector('body').style.overflow = 'auto'; // re-show the scrollbar\r\n      this.bgGrayout = false;\r\n    }\r\n  }\r\n\r\n  showContainer(options = null)\r\n  {\r\n    const bgGrayout = options && options.bgGrayout;\r\n    this.showBackgroundGrayout(bgGrayout);\r\n    for (const property in this.hostStyles.SHOW)\r\n    {\r\n      this.hostNode.style[property] = this.hostStyles.SHOW[property];\r\n    }\r\n  }\r\n\r\n  closeContainer(clear = true, animate = true)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      // Handle background grayout removal\r\n      this.hideBackgroundGrayOut();\r\n\r\n      // Protect from multiple close triggers\r\n      if (this.closing)\r\n      {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      this.closing = true;\r\n\r\n      const close = () =>\r\n      {\r\n        this.closing = false;\r\n        this.showing = false;\r\n\r\n        // Clear when all content within the dom should\r\n        // be reset, happens when triggering from UI buttons\r\n        if (clear)\r\n        {\r\n          this.hostNode.remove();\r\n          this.hostNode = null;\r\n          this.componentData = null;\r\n          this.template = null;\r\n          this.shadowRoot = null;\r\n          this.baseTemplate = null;\r\n        }\r\n      };\r\n\r\n      if (!animate)\r\n      {\r\n        close();\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      // Hide action panel with animation\r\n      const styleObj = { ...this.hostStyles.DEFAULT, ...this.hostStyles.HIDE };\r\n      for (const property in styleObj)\r\n      {\r\n        this.hostNode.style[property] = styleObj[property];\r\n      }\r\n\r\n      setTimeout(() => resolve(close()), 500);\r\n    });\r\n  }\r\n\r\n  query(id)\r\n  {\r\n    return this.shadowRoot.querySelector(id);\r\n  }\r\n\r\n  querySelector(selector)\r\n  {\r\n    return this.shadowRoot.querySelector(selector);\r\n  }\r\n\r\n  querySelectorAll(selector)\r\n  {\r\n    return this.shadowRoot.querySelectorAll(selector);\r\n  }\r\n\r\n  clickListener(id, callback)\r\n  {\r\n    const element = this.shadowRoot.querySelector(id);\r\n    element && element.addEventListener('click', (event) =>\r\n    {\r\n      if (Globals.bkGlobals.isTrustCheckRequired && !event.isTrusted)\r\n      {\r\n        return;\r\n      }\r\n      callback(event);\r\n    });\r\n  }\r\n}\r\n","// Component\r\nimport ShadowDomContainer from '@extension/components/shadow_dom_container';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\nimport { extension } from '@extension/common/webextension';\r\n\r\n// Sidebar UI Styles\r\nconst SidebarStyles = {\r\n  DEFAULT: {\r\n    top: '0',\r\n    padding: '0',\r\n    margin: '0',\r\n    zIndex: '2147483646',\r\n    position: 'fixed',\r\n    border: 'none',\r\n    opacity: '0',\r\n    left: 'auto',\r\n    right: '0',\r\n    display: 'block',\r\n    maxWidth: 'none',\r\n    boxShadow: '10px 0 35px rgba(0, 0, 0, 0.2)',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n\r\n  HIDE: {\r\n    transition: 'width 0s 0.4s, height 0s 0.4s, opacity 0.4s, transform 0.4s',\r\n    transform: 'translate3d(400px, 0, 0)',\r\n    opacity: '0',\r\n    width: '400px',\r\n    height: '0',\r\n  },\r\n\r\n  SHOW: {\r\n    transition: 'opacity 0.4s, transform 0.4s',\r\n    transform: 'translate3d(0, 0, 0)',\r\n    opacity: '1',\r\n    width: '400px',\r\n    height: '100%',\r\n  },\r\n};\r\n\r\nexport default class SidebarContainer extends ShadowDomContainer\r\n{\r\n  constructor()\r\n  {\r\n    const defaultBaseTemplate = {\r\n      htmlPath: 'html/sidebar/sidebar_action_panel.html',\r\n      cssPath: 'css/sidebar_action_panel_style.css',\r\n    };\r\n\r\n    super(SidebarStyles, defaultBaseTemplate);\r\n    this.loadAsBaseTemplate = null;\r\n    this.defaultBaseTemplate = defaultBaseTemplate;\r\n  }\r\n\r\n  async init(template, componentData = null, isForegroundPage = false, loadAsBaseTemplate = false)\r\n  {\r\n    // Check if there is already a baseTemplate. If so, we might be replacing a component without a base\r\n    // template with one that has it. Example, SMA (no base template) with SS_ACCEPTED (w/ base template)\r\n    if (this.loadAsBaseTemplate === true && this.loadAsBaseTemplate !== loadAsBaseTemplate)\r\n    {\r\n      // In this case, we need to set the base template for the incoming component that needs it\r\n      this.baseTemplate = this.defaultBaseTemplate;\r\n    }\r\n\r\n    // This sets baseTemplate to null so that the input template can be\r\n    // used as the base template instead of the child template in the ShadowDomContainer\r\n    // This handles the case for showing SMA sidebar or replacing SS_ACCEPTED sidebar with SMA sidebar\r\n    if (loadAsBaseTemplate)\r\n    {\r\n      this.baseTemplate = null;\r\n    }\r\n\r\n    // Set the load as template flag\r\n    this.loadAsBaseTemplate = loadAsBaseTemplate;\r\n\r\n    const success = await this.initContainer(template, componentData);\r\n    if (!success) return success;\r\n\r\n    this.injectImages();\r\n    this.initBaseEventListeners(isForegroundPage);\r\n\r\n    return success;\r\n  }\r\n\r\n  async injectImages()\r\n  {\r\n    const bkGlobals = await BackgroundIPC.getBkGlobals();\r\n    const waImageSecret = bkGlobals.WA_IMAGE_SECRET;\r\n\r\n    const logoQuery = this.query('#logo');\r\n    logoQuery ? logoQuery.setAttribute('src', extension.runtime.getURL(`../../images/web_advisor/logo.png?secret=${waImageSecret}`)) : '';\r\n\r\n    const closeQuery = this.query('#sidebar-close');\r\n    closeQuery ? closeQuery.setAttribute('src', extension.runtime.getURL(`../../images/action_panel/x-icon.svg?secret=${waImageSecret}`)) : '';\r\n  }\r\n\r\n  initBaseEventListeners(isForegroundPage)\r\n  {\r\n    !this.loadAsBaseTemplate && this.clickListener('#sidebar-close', () =>\r\n    {\r\n      if (isForegroundPage)\r\n      {\r\n        window.history.length < 2 ? BackgroundIPC.closeTab() : window.history.go(-1);\r\n        return;\r\n      }\r\n      this.closeContainer();\r\n    });\r\n  }\r\n}\r\n","export const Globals = {\r\n  ANNOTATION: {},\r\n  BackgroundIPC: null,\r\n  BackgroundCommons: null,\r\n  ContextTelemetry: null,\r\n  TelemetryEventNames: null,\r\n  UrlParser: null,\r\n  Utils: null,\r\n  Commands: {},\r\n  CommonConstants: {},\r\n  extension: null,\r\n  SearchEngineHelper: null,\r\n  prevLink: null,\r\n  Logger: null\r\n};\r\n","import { Globals } from './globals';\r\n\r\nexport default class ResourceManager\r\n{\r\n  /**\r\n   * Obtain the corresponding string for the resource name\r\n   * @param {String}   name     - The name of the resource\r\n   * @param {Function} callback - Handles the localized string returned\r\n   */\r\n  static getResString(name, callback)\r\n  {\r\n    Globals.ANNOTATION.resourceRequestor.getResStr(name, (value) =>\r\n    {\r\n      if (!value)\r\n      {\r\n        Globals.Logger.error(`Resource string ${name} failed to fetch through resource requestor`);\r\n      }\r\n      else\r\n      {\r\n        callback(value);\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Background\nimport { BackgroundGlobals } from '@extension/background/background_globals';\n// Common\nimport { BlockState, BrowserType, BuildSettings, Color, Score } from '@extension/common/constants';\nimport { BackgroundConstants } from '@extension/common/background_constants';\nimport { extension } from '@extension/common/webextension';\nimport { Logger } from '@extension/common/logger';\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\n// @mcafee\nimport ResourceManager from '@mcafee/wa-annotations/Common/resource_manager';\n\n/**\n * TODO: Comments\n */\nexport default class BackgroundCommon\n{\n  static async toGTICategoriesString(categories, includeDescription = false)\n  {\n    const getRes = (l10nId) => new Promise((resolve) =>\n    {\n      ResourceManager.getResString(l10nId, (res) => resolve(res));\n    });\n\n    const getCategoryStrings = async (categoryId, includeDescription) =>\n    {\n      const newCategory = {};\n\n      const name = await getRes(`category_id_${categoryId}_name`);\n      newCategory.name = name;\n\n      if (includeDescription)\n      {\n        const description = await getRes(`category_id_${categoryId}_description`);\n        newCategory.description = description;\n      }\n\n      return newCategory;\n    };\n\n    const promises = [];\n    for (const category of categories)\n    {\n      promises.push(getCategoryStrings(category, includeDescription));\n    }\n\n    const newCategories = await Promise.all(promises);\n    return newCategories;\n  }\n\n  /**\n   * Determine the shorthand browser type name based on its corresponding index value.\n   * @returns {String} - The browser name (shorthand)\n   */\n  static browserTypeToString(toLowerCase = false)\n  {\n    let browserType = '';\n    switch (BuildSettings.BROWSER_TYPE)\n    {\n      case 1:\n        browserType = 'FF';\n        break;\n      case 2:\n        browserType = 'CH';\n        break;\n      case 3:\n        browserType = 'ED';\n        break;\n      default:\n        browserType = 'UN';\n    }\n\n    return toLowerCase ? browserType.toLowerCase() : browserType;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toImagePaths(imageName)\n  {\n    let imagePath = 'images/browser_action/';\n\n    const legacyImageName = imageName.startsWith('small_') ? imageName : `small_${imageName}`;\n\n    switch (legacyImageName)\n    {\n      case 'small_button_green.gif':\n        imagePath += 'green';\n        break;\n      case 'small_button_yellow.gif':\n        imagePath += 'yellow';\n        break;\n      case 'small_button_red.gif':\n        imagePath += 'red';\n        break;\n      case 'small_button_grey.gif':\n        imagePath += 'white';\n        break;\n      case 'small_button_disabled.gif':\n        imagePath += 'disabled';\n        break;\n      default:\n        imagePath += imageName;\n        break;\n    }\n\n    // 16 and 32 used by Chrome/Firefox, 20 and 40 used by Edge\n    const imagePaths = {\n      size16: `${imagePath}_16.png`,\n      size20: `${imagePath}_20.png`,\n      size32: `${imagePath}_32.png`,\n      size40: `${imagePath}_40.png`\n    };\n\n    return imagePaths;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static colorToImagePaths(color)\n  {\n    let imageName = 'white';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageName = 'green';\n        break;\n      case Color.YELLOW:\n        imageName = 'yellow';\n        break;\n      case Color.RED:\n        imageName = 'red';\n        break;\n      case Color.UNKNOWN:\n        imageName = 'white';\n        break;\n      case Color.DISABLED:\n        imageName = 'disabled';\n        break;\n    }\n\n    return BackgroundCommon.toImagePaths(imageName);\n  }\n\n  /**\n   * Return the appropriate class for the annotation item\n   * @param {Object} annotationItem - Reputation object returned by the GTI server\n   */\n  static toAnnotationImageClass(annotationItem)\n  {\n    const color = BackgroundCommon.toColor(annotationItem);\n\n    let imageClass = '';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageClass = 'OK';\n        break;\n      case Color.RED:\n        imageClass = 'WARN';\n        break;\n      case Color.YELLOW:\n        imageClass = 'INFO';\n        break;\n      case Color.UNKNOWN:\n        imageClass = 'UNKNOWN';\n        break;\n    }\n\n    return imageClass;\n  }\n\n  /**\n  * Determines if the URL provided is malicious or not.\n  * @param   {Object} categories - Url info deemed phishing / malicious\n  * @returns {boolean} - Outcome of the phishing site check\n  */\n  static isPhishingURI(categories)\n  {\n    return categories && categories.includes(BackgroundConstants.PHISHING_CATEGORY);\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toBlockState(annItem)\n  {\n    const colorVal = BackgroundCommon.toColor(annItem);\n\n    if (colorVal === Color.RED || colorVal === Color.YELLOW)\n    {\n      if (BackgroundCommon.isPhishingURI(annItem.category))\n      {\n        return BlockState.PHISHING;\n      }\n    }\n\n    // Because the color and block state values correspond to the numbers, you can simply return the color value\n    return isNaN(colorVal) ? BlockState.UNKNOWN : colorVal;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toColor(annItem)\n  {\n    let color = Color.UNKNOWN;\n\n    if (annItem === undefined || annItem.trust === undefined)\n    {\n      return color;\n    }\n\n    if (annItem.trust >= Score.CLEAN)\n    {\n      color = Color.GREEN;\n    }\n    else if (annItem.trust > Score.UNVERIFIED)\n    {\n      color = Color.YELLOW;\n    }\n    else if (annItem.trust >= Score.DIRTY)\n    {\n      color = Color.RED;\n    }\n    else\n    {\n      color = Color.UNKNOWN;\n    }\n\n    return color;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toSiteReportUrl(url)\n  {\n    const siteReportUrl = extension.runtime.getURL('html/site_status_site_report.html');\n    return `${siteReportUrl}?url=${escape(url)}`;\n  }\n\n  static isExtensionUrl(url)\n  {\n    // Chrome/Edge Internal Pages\n    if ((BrowserType.CHROME === BuildSettings.BROWSER_TYPE && url.startsWith(`chrome-extension://${extension.runtime.id}`))\n    || (BrowserType.EDGE === BuildSettings.BROWSER_TYPE && url.startsWith(`ms-browser-extension://${extension.runtime.id}`)))\n    {\n      return true;\n    }\n\n    // Firefox Internal Pages\n    if (BrowserType.FIREFOX === BuildSettings.BROWSER_TYPE)\n    {\n      let firefoxInternalUUID = extension.i18n.getMessage('@@extension_id');\n      if (!firefoxInternalUUID)\n      {\n        const internalPageUrl = extension.runtime.getURL('images/web_advisor/logo.png');\n        // get internal uuid from resource url extracting characters between 'moz-extension://' and '/'\n        // sample url: moz-extension://ABCDE/images/web_advisor/logo.png => ABCDE\n        const urlSplit = internalPageUrl.split('/');\n        firefoxInternalUUID = (urlSplit.length >= 3) ? urlSplit[2] : '';\n      }\n\n      return firefoxInternalUUID && url.startsWith(`moz-extension://${firefoxInternalUUID}`);\n    }\n\n    return false;\n  }\n\n  // Check whether a url is a siteadvisor url or our own extension url\n  static isSafeUrl(url)\n  {\n    return BackgroundCommon.isSiteAdvisorUrl(url) || BackgroundCommon.isExtensionUrl(url);\n  }\n\n  static isSiteAdvisorUrl(url)\n  {\n    return (url.startsWith(`http://${BackgroundConstants.SITE_ADVISOR_URL}`)\n    || url.startsWith(`https://${BackgroundConstants.SITE_ADVISOR_URL}`));\n  }\n\n  static isPropertRedirectUrl(url)\n  {\n    return BackgroundCommon.isPropertyWebURL(url) || url.startsWith('edge://') || url.startsWith('chrome://');\n  }\n\n  // Check whether a url is a proper web url\n  static isProperWebURL(url)\n  {\n    if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('ftp://'))\n    {\n      return true;\n    }\n\n    return false;\n  }\n\n  static getUINumber(number)\n  {\n    // sample output:\n    // 0: 0\n    // 999: 999\n    // 1010: 1k+\n    // 1251: 1.2k+\n    // 9999: 9.9k+\n    // > 10000: 10k+\n    const THOUSAND = 1000;\n    const TEN_THOUSAND = 10000;\n    if (number >= TEN_THOUSAND) return '10k+';\n    if (number >= THOUSAND)\n    {\n      let decimal = (number / THOUSAND).toFixed(1);\n      decimal = decimal.substring(2, 3) === '0' ? decimal.substring(0, 1) : decimal;\n      return `${decimal}k+`;\n    }\n    return `${number}`;\n  }\n\n  static hasEpochTimeElapsed(initialEpochInSeconds, timePassedinSeconds)\n  {\n    const nowInSeconds = (new Date()).getTime() / 1000;\n    if (nowInSeconds > initialEpochInSeconds + timePassedinSeconds) return true;\n    return false;\n  }\n\n  static isPersonalPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static isActivityPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static blockRequest(tabId, url, message)\n  {\n    extension.declarativeNetRequest.getDynamicRules(\n      (rules) =>\n      {\n        const found = rules.filter((rule) => rule.condition.urlFilter === url);\n\n        if (found.length === 0)\n        {\n          extension.declarativeNetRequest.updateDynamicRules(\n            {\n              addRules: [{\n                id: rules.length + 1,\n                condition: {\n                  domains: ['<all_urls>'],\n                  urlFilter: url,\n                  resourceTypes: ['main_frame']\n                },\n                action: {\n                  type: 'block'\n                }\n              }]\n            },\n            () =>\n            {\n              Logger.log(`${message} ${url} ${tabId}`);\n            }\n          );\n        }\n      }\n    );\n  }\n}\n","import BackgroundIPC from '@extension/common/background_ipc';\nimport { extension } from '@extension/common/webextension';\nimport BackgroundCommon from '@extension/common/background_common';\nimport { Logger } from '@extension/common/logger';\nimport UIStrings from '@extension/utilities/ui_strings';\nimport { BrowserType, BuildSettings } from '@extension/common/constants';\n/////////////////////////////////\n////////\n//////////////////////////////////////////////////////////\n//////////\n\nexport default class SideBarMain\n{\n  constructor(componentData, containerHandler)\n  {\n    this.componentData = componentData;\n\n    // containerHandler related:\n    this.shadowRoot = containerHandler.shadowRoot;\n    this.query = containerHandler.query;\n    this.showContainer = containerHandler.showContainer;\n    this.closeContainer = containerHandler.closeContainer;\n    this.clickListener = containerHandler.clickListener;\n  }\n\n  async init()\n  {\n    const strConvertor = new UIStrings(null, this.shadowRoot);\n    // Populate localize strings\n    strConvertor.init();\n\n    try\n    {\n      // Get feature stats\n      const bkData = await BackgroundIPC.getPopupData();\n\n      // init content base on feature\n      this.initContent(bkData, strConvertor);\n\n      // init listeners\n      this.initListeners(bkData);\n      this.populateData(bkData);\n      this.showContainer();\n      this.query('#top_div_accessibility').focus();\n    }\n    catch (error)\n    {\n      Logger.error(error);\n    }\n  }\n\n  initContent(bkData, strConvertor)\n  {\n    let sidebarTitle = strConvertor.localeData('sidebar_title');\n    let sidebarSubtitle = strConvertor.localeData('sidebar_subtitle');\n/////////////////////////////////////\n//////////////////////////////////////////////\n////////////////////////////////////////////////////\n//////////////\n    this.query('#sidebar_title').innerHTML = sidebarTitle;\n    this.query('#sidebar_subtitle').innerHTML = sidebarSubtitle;\n  }\n\n  hideStats()\n  {\n    this.query('#sidebar_title').style.display = 'none';\n    this.query('#sidebar_subtitle').style.display = 'none';\n    this.query('.innerbody__stats-box').style.display = 'none';\n  }\n\n  showMessage()\n  {\n    this.query('.innerbody').classList.add('center');\n    this.query('.innerbody__message').style.display = 'flex';\n  }\n\n  populateData(data)\n  {\n    const { stats,\n      BINARY_VERSION } = data;\n\n    // populate version\n    const version = this.query('#sidebar_version').textContent;\n    this.query('#sidebar_version').textContent = `${version} ${BuildSettings.EXTENSION_VERSION}`;\n\n    const { pagesScanned, pagesBlocked, downloadsBlocked, cryptoBlocked } = stats;\n\n    // populate feature stats\n    this.query('#num-pages-scanned').textContent = BackgroundCommon.getUINumber(pagesScanned);\n    this.query('#num-unsafe-blocked').textContent = BackgroundCommon.getUINumber(downloadsBlocked);\n    this.query('#num-pages-blocked').textContent = BackgroundCommon.getUINumber(pagesBlocked);\n    this.query('#num-crypto-blocked').textContent = BackgroundCommon.getUINumber(cryptoBlocked);\n\n    // Hide the Blocked Download Items if this is Edge Chromium and Native does not exists\n    if (BrowserType.EDGE === BuildSettings.BROWSER_TYPE && BINARY_VERSION === null)\n    {\n      this.query('#sidebar_statsrow_unsafe_blocked').style.display = 'none';\n    }\n  }\n\n  close(isURLValid)\n  {\n    if (!isURLValid) BackgroundIPC.closeTab();\n    else this.closeContainer();\n  }\n\n  initListeners({ url })\n  {\n    const isURLValid = BackgroundCommon.isProperWebURL(url);\n    if (!isURLValid)\n    {\n      this.query('#sidebar_view_site_report').cssText = 'color: #B1BABF; cursor: default';\n    }\n    else\n    {\n      this.clickListener('#sidebar_view_site_report', () =>\n      {\n        BackgroundIPC.viewSiteReport(url, true);\n      });\n    }\n\n    this.clickListener('img[id=close-btn]', () =>\n    {\n      this.close(isURLValid);\n    });\n\n    const goToSettings = (tabtype) =>\n    {\n      const settingsURL = extension.runtime.getURL(`html/settings.html${tabtype ? `?tabtype=${tabtype}` : ''}`);\n      BackgroundIPC.focusOrCreateTab(settingsURL);\n    };\n\n    this.clickListener('img[id=settings]', () =>\n    {\n      goToSettings();\n    });\n  }\n}\n","// Parses the passed URI to read out the value of a particular\r\n// query string parameter within the URI string.\r\nexport default class UrlParser\r\n// this is because we declare the function in both contentplg and iframeplg,\r\n// using const will throw double declaration error here\r\n{\r\n  // get meaningful part of an uri (the part before ? or #)\r\n  static getURI(uri)\r\n  {\r\n    let parts = uri.split('?');\r\n    if (parts.length > 1)\r\n    {\r\n      return parts[0];\r\n    }\r\n    parts = uri.split('#');\r\n    if (parts.length > 1)\r\n    {\r\n      return parts[0];\r\n    }\r\n    return uri;\r\n  }\r\n\r\n  // get a clean URI (subdomain + domain only)\r\n  static getCleanURI(uri)\r\n  {\r\n    let cleanURI = uri;\r\n    if (cleanURI.endsWith('/'))\r\n    {\r\n      cleanURI = cleanURI.slice(0, -1);\r\n    }\r\n    if (cleanURI.startsWith('http://'))\r\n    {\r\n      cleanURI = cleanURI.slice(7);\r\n    }\r\n    else if (cleanURI.startsWith('https://'))\r\n    {\r\n      cleanURI = cleanURI.slice(8);\r\n    }\r\n    return this.getURI(cleanURI);\r\n  }\r\n\r\n  static getParam(uri, paramName)\r\n  {\r\n    const qpos = uri.indexOf('?');\r\n    if (qpos === -1)\r\n    {\r\n      return null;\r\n    }\r\n    const qString = uri.substring(qpos + 1);\r\n\r\n    // Now split each param delimited by &\r\n    const params = qString.split('&');\r\n    for (let index = 0; index < params.length; ++index)\r\n    {\r\n      // Now separate out each param name and value delimited by =.\r\n      const position = params[index].indexOf('=');\r\n      if (position === -1)\r\n      {\r\n        continue;\r\n      }\r\n      const name = params[index].substring(0, position);\r\n      if (name === paramName)\r\n      {\r\n        const value = params[index].substring(position + 1);\r\n        return value;\r\n      }\r\n    }\r\n    return null; // param not found.\r\n  }\r\n\r\n  static getDomain(url)\r\n  {\r\n    // there must be http(s) in the url, if not then return empty\r\n    if (url === undefined || !/^https?:\\/\\//.test(url))\r\n    {\r\n      return '';\r\n    }\r\n    const domainURL = new URL(url);\r\n    return domainURL.hostname;\r\n  }\r\n\r\n  static decodeQueryParam(p)\r\n  {\r\n    return decodeURIComponent(p.replace(/\\+/g, ' '));\r\n  }\r\n}\r\n","import { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n\r\nexport const WhitelistTypes = {\r\n  BLOCK_PAGE: 'BLOCK_PAGE',\r\n  CRYPTOJACKING: 'CRYPTOJACKING',\r\n  TYPOSQUATTING: 'TYPOSQUATTING',\r\n  IFRAME: 'IFRAME',\r\n  RAT_DETECTION: 'RAT_DETECTION'\r\n};\r\n\r\nexport const WhitelistStoreMappings = {\r\n  BLOCK_PAGE: LocalStorageVariables.BLOCK_PAGE_WHITELIST.name,\r\n  CRYPTOJACKING: LocalStorageVariables.CRYPTO_WHITELIST.name,\r\n  TYPOSQUATTING: LocalStorageVariables.TYPOSQUATTING_WHITELIST.name,\r\n  IFRAME: LocalStorageVariables.BLOCK_PAGE_WHITELIST.name,\r\n  RAT_DETECTION: LocalStorageVariables.RAT_DETECTION_WHITELIST.name\r\n};\r\n\r\nexport const WhitelistActions = {\r\n  ADD: 'ADD',\r\n  GET: 'GET',\r\n  REMOVE: 'REMOVE',\r\n  CLEAR: 'CLEAR',\r\n};\r\n","import { Color, BlockState, KEY_CODES_RANGE } from '@extension/common/constants';\r\n\r\nexport const FEATURE_TAB_ID = {\r\n  WHITELIST: 'whitelist',\r\n  PREFERENCE: 'preference',\r\n  STATISTICS: 'statistics',\r\n  ABOUT: 'about',\r\n};\r\n\r\n/* Acts as Event Names and also as Trigger Identifiers for handling telemetry */\r\nexport const EventNames = {\r\n  BLOCK_PAGE: 'Block_Page',\r\n  BROWSER_ACTION_CLICKED: 'BrowserAction_Clicked',\r\n  BROWSER_NAVIGATE: 'Browser_Navigate',\r\n  CRYPTOJACKING_BLOCK: 'Cryptojacking_Block',\r\n  DARK_WEB_SCAN: 'DarkWebMonitoring',\r\n  DOWNLOAD_BLOCK: 'Download_Block',\r\n  GET_SEARCH_EXTENSION: 'EmbedSearchExtension',\r\n  PROFILE_INFO: 'ProfileInfo',\r\n  REMOTE_ACCESS_TROJAN: 'RemoteAccessTrojan',\r\n  SEARCH_SUGGEST_BLOCK_PAGE: 'SearchSuggest_BlockPage',\r\n  SEARCH_SUGGEST: 'SearchSuggest',\r\n  SECURE_SEARCH_HIT: 'Secure_Search_Hit',\r\n  SIDEBAR_PANEL: 'SideBar_Panel',\r\n  SITE_REPORT: 'SiteReport',\r\n  SMA_REPUTATION: 'SMA_Reputation',\r\n  TOAST: 'Toast',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  WSS_ANALYTICS: 'WSS_Analytics',\r\n  APS: {\r\n    EVENT_NAME: 'AdvancedProtectionSignals',\r\n    IMPRESSION_BALLOON: 'IMPRESSION_BALLOON',\r\n    IMPRESSION_HOVER: 'IMPRESSION_HOVER',\r\n    CLOSE_BALLOON: 'CLOSE_BALLOON',\r\n    TOAST_CLOSE: 'TOAST_CLOSE',\r\n    TOAST: 'toast',\r\n    BALLOON: 'balloon',\r\n  },\r\n};\r\n\r\nexport const ToastTypes = {\r\n  REGULAR_TOAST: 'RegularToast',\r\n  EFFICACY_TOAST: 'Efficacy_SS',\r\n};\r\n\r\nexport const ImpressionNames = {\r\n  BROWSER_ACTION_CLICKED: 'BrowserActionClicked',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  BLOCK_PAGE: 'BlockPage',\r\n  SECURE_SEARCH_HIT: 'SecureSearchHit',\r\n  CRYPTOJACKING_BLOCK: 'CryptojackingBlock',\r\n  SIDEBAR_PANEL: 'SideBarPanel',\r\n  SMA_REPUTATION: 'SMAReputation',\r\n  DOWNLOAD_BLOCK: 'DownloadBlock',\r\n};\r\n\r\nexport const InteractionTypes = {\r\n  IMPRESSION: 'Impression',\r\n  WEBADVISOR: 'WebAdvisor',\r\n  CRYPTOJACKING: {\r\n    LEARN_MORE_CLICKED: 'LearnMoreClicked',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  SIDEBAR_PANEL: {\r\n    MAIN: 'Main',\r\n  },\r\n  SELECTION: 'Selection',\r\n  DISMISSED: 'Dismissed',\r\n  HOVERED: 'Hovered',\r\n  CLOSE_CLICKED: 'CloseClicked',\r\n  CLICKED: 'Clicked',\r\n  ENABLE: 'Enable',\r\n  ADD: 'Add',\r\n  RAT_DETECTION: {\r\n    ACKNOWLEDGED: 'Acknowledged',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  ACCEPTED: 'Accepted',\r\n  DECLINED: 'Declined',\r\n  ACKNOWLEDGED: 'Acknowledged',\r\n  CLOSE: 'Close',\r\n  NEXT: 'Next',\r\n  GOT_IT: 'GotIt',\r\n  HOVER: 'Hover',\r\n};\r\n\r\nexport const PageLevel = {\r\n  TOP: 'Top',\r\n  FRAME: 'Frame',\r\n  INLINE: 'Inline',\r\n};\r\n\r\nexport const BLOCK_PAGE_STYLE = {\r\n  EDUCATION: 'Education',\r\n  NORMAL: 'Normal',\r\n};\r\n\r\nexport const SETTING_TABS = {\r\n  ABOUT: 'About',\r\n  PREFERENCES: 'Preferences',\r\n  WHITELIST: 'Whitelist',\r\n  STATS: 'UserStatistics',\r\n};\r\n\r\nexport const TelemetryColor = {\r\n  UNKNOWN: 'UNKNOWN',\r\n  RED: 'Red',\r\n  YELLOW: 'Yellow',\r\n};\r\n\r\nexport const TelemetryBlockState = {\r\n  GREEN: 'Green',\r\n  YELLOW: 'Yellow',\r\n  RED: 'Red',\r\n  UNKNOWN: 'UNKNOWN',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  PHISHING: 'Phishing',\r\n};\r\n\r\nexport const SearchType = {\r\n  DEFAULT: 'DefaultSearch',\r\n};\r\n\r\n// For telemetry identification and message storing\r\nexport const TelemetryTerms = {\r\n  ACTION: {\r\n    CLICK: 'click',\r\n    KEYDOWN: 'keydown',\r\n    RETURN_KEY_CODE: 13,\r\n    SHOW: 'show',\r\n    SEARCH_SUGGEST_KEY_CODES: [8, 32, 46,\r\n      ...KEY_CODES_RANGE(48, 57), ...KEY_CODES_RANGE(65, 90), ...KEY_CODES_RANGE(96, 107),\r\n      ...KEY_CODES_RANGE(109, 111), ...KEY_CODES_RANGE(186, 192), ...KEY_CODES_RANGE(219, 222)], // whitelistedKeys are keycodes which results in triggerring a search suggest\r\n  },\r\n  MISC: {\r\n    // Trigger states\r\n    LOADED: 'Loaded',\r\n    CHECKED: 'checked',\r\n    // Other terms\r\n    UNKNOWN: 'UNKNOWN',\r\n    ACTION_PANEL: 'ActionPanel',\r\n    ACCEPTED: 'Accepted',\r\n    DECLINED: 'Declined',\r\n    SETTINGS_TAB_PREFIX: 'settings_tab_',\r\n    GREEN: 'GREEN',\r\n    YELLOW: 'YELLOW',\r\n    RED: 'RED',\r\n    PREFERENCE: 'Preference',\r\n    DEFAULT: 'default',\r\n  },\r\n  // Search engine annotations\r\n  SEARCH_ENGINE: {\r\n    GOOGLE: 'google',\r\n    YAHOO: 'yahoo',\r\n  },\r\n  // Social media annotations\r\n  SOCIAL_MEDIA: {\r\n    LINKEDIN: 'linkedin',\r\n    FACEBOOK: 'facebook',\r\n    YOUTUBE: 'youtube',\r\n    INSTAGRAM: 'instagram',\r\n    REDDIT: 'reddit',\r\n    TWITTER: 'twitter',\r\n  },\r\n};\r\n\r\nexport class CommonTelemetry\r\n{\r\n  static toColorTelemetry(color)\r\n  {\r\n    let colorStr = TelemetryColor.UNKNOWN;\r\n    switch (color)\r\n    {\r\n      case Color.RED:\r\n        colorStr = TelemetryColor.RED;\r\n        break;\r\n      case Color.YELLOW:\r\n        colorStr = TelemetryColor.YELLOW;\r\n        break;\r\n    }\r\n    return colorStr;\r\n  }\r\n\r\n  static toTelemetryBlockState(blockState)\r\n  {\r\n    let blockStateStr = TelemetryBlockState.UNKNOWN;\r\n    switch (blockState)\r\n    {\r\n      case BlockState.GREEN:\r\n        blockStateStr = TelemetryBlockState.GREEN;\r\n        break;\r\n      case BlockState.YELLOW:\r\n        blockStateStr = TelemetryBlockState.YELLOW;\r\n        break;\r\n      case BlockState.RED:\r\n        blockStateStr = TelemetryBlockState.RED;\r\n        break;\r\n      case BlockState.TYPOSQUATTING:\r\n        blockStateStr = TelemetryBlockState.TYPOSQUATTING;\r\n        break;\r\n      case BlockState.PHISHING:\r\n        blockStateStr = TelemetryBlockState.PHISHING;\r\n        break;\r\n    }\r\n    return blockStateStr;\r\n  }\r\n\r\n  static toTelemetrySettingTab(tabName)\r\n  {\r\n    let tabNameStr = SETTING_TABS.PREFERENCES;\r\n    switch (tabName)\r\n    {\r\n      case FEATURE_TAB_ID.WHITELIST:\r\n        tabNameStr = SETTING_TABS.WHITELIST;\r\n        break;\r\n      case FEATURE_TAB_ID.STATISTICS:\r\n        tabNameStr = SETTING_TABS.STATS;\r\n        break;\r\n      case FEATURE_TAB_ID.ABOUT:\r\n        tabNameStr = SETTING_TABS.ABOUT;\r\n        break;\r\n    }\r\n    return tabNameStr;\r\n  }\r\n}\r\n","import {\r\n  EventNames,\r\n  ImpressionNames,\r\n  InteractionTypes,\r\n  SearchType,\r\n  CommonTelemetry,\r\n  FEATURE_TAB_ID,\r\n  PageLevel,\r\n  TelemetryTerms,\r\n  ToastTypes,\r\n} from '@extension/telemetry/common_telemetry';\r\nimport BackgroundCommon from '@extension/common/background_common';\r\n\r\nexport class TelemetryMessageModifiers\r\n{\r\n  constructor(options)\r\n  {\r\n    this._options = options;\r\n    this.TELEMETRY_HANDLERS = this.initializeTelemetryHandler();\r\n  }\r\n\r\n  // Traverse through the TELEMETRY_HANDLERS Json object and fetch the list of messages which match the 'identifier'\r\n  fetchTelemetryHandlers(identifier)\r\n  {\r\n    const handlers = [];\r\n    this.TELEMETRY_HANDLERS.forEach((handler) =>\r\n    {\r\n      if (!handler.trigger.identifier || (identifier === handler.trigger.identifier))\r\n      {\r\n        handlers.push(handler);\r\n      }\r\n    });\r\n    return handlers;\r\n  }\r\n\r\n  /*\r\n    JSON object pertaining the list of all the Telemetry attributes needed for identifing the event/action.\r\n    Also returns the list of messages associated with each identifier which is the telemetry message to be sent.\r\n  */\r\n  initializeTelemetryHandler()\r\n  {\r\n    return [\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          sendTelemetry: this._options.isFromBackground || false\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: (this._options.level === PageLevel.FRAME) ? 'UNKNOWN' : (this._options.blockPageStyle || 'UNKNOWN'),\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: this._options.blockPageStyle || 'UNKNOWN',\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_ACTION_CLICKED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BROWSER_ACTION_CLICKED,\r\n              interaction_type: InteractionTypes.WEBADVISOR,\r\n              badge_count: this._options.count,\r\n              _event_name: EventNames.BROWSER_ACTION_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_NAVIGATE,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              url: this._options.url,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.BROWSER_NAVIGATE\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_learn_link',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.LEARN_MORE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '.crypto-block-actions__close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_banner_allow_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.WHITELISTED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DOWNLOAD_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.DOWNLOAD_BLOCK,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              process_name: TelemetryTerms.MISC.UNKNOWN,\r\n              file_name: TelemetryTerms.MISC.UNKNOWN,\r\n              colour: TelemetryTerms.MISC.UNKNOWN,\r\n              ui_type: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.DOWNLOAD_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.PREFERENCE}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.WHITELIST}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.WHITELIST),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.ABOUT}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.ABOUT),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.STATISTICS}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.STATISTICS),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          selector: '#block_page_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          selector: '#typosquatting_message_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SECURE_SEARCH_HIT,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: ImpressionNames.SECURE_SEARCH_HIT,\r\n              search_type: SearchType.DEFAULT,\r\n              _event_name: EventNames.SECURE_SEARCH_HIT,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              type_tag: this._options.typeTag,\r\n              provider_type: this._options.engineName\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SIDEBAR_PANEL,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SIDEBAR_PANEL,\r\n              interaction_type: this._options.interaction_type,\r\n              _event_name: EventNames.SIDEBAR_PANEL,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SMA_REPUTATION,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.GREEN,\r\n              count: this._options[TelemetryTerms.MISC.GREEN],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.RED,\r\n              count: this._options[TelemetryTerms.MISC.RED],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.YELLOW,\r\n              count: this._options[TelemetryTerms.MISC.YELLOW],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.UNKNOWN,\r\n              count: this._options[TelemetryTerms.MISC.UNKNOWN],\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TOAST,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              _event_name: 'ToastCheckCompleted',\r\n              category: 'ToastCheck',\r\n              triggerType: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              _event_name: 'Secure_Search_Toast',\r\n              category: 'SecureSearchToast',\r\n              action_type: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              provider: (this._options.toastData) ? (this._options.toastData.providerId) : TelemetryTerms.MISC.UNKNOWN,\r\n              toastType: (this._options.toastData) ? (this._options.toastData.toastType) : ToastTypes.REGULAR_TOAST,\r\n              metadata: (this._options.toastData) ? (this._options.toastData.metadata) : TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TYPOSQUATTING,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.TYPOSQUATTING,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.TYPOSQUATTING\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#rat_detection_got_it_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.ACKNOWLEDGED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar_rat_detection_whitelist_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.WHITELISTED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.WSS_ANALYTICS,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.WSS_ANALYTICS,\r\n              message: this._options.message,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DARK_WEB_SCAN,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.DARK_WEB_SCAN,\r\n              category: EventNames.DARK_WEB_SCAN,\r\n              action_type: this._options.eventAction || TelemetryTerms.MISC.UNKNOWN,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              count: this._options.count || TelemetryTerms.MISC.UNKNOWN,\r\n              type: this._options.type,\r\n              flow_id: this._options.flowId,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.EVENT_NAME,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_HOVER,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.HOVER,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.CLOSE_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.TOAST_CLOSE,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: this._options.gotItButton ? InteractionTypes.GOT_IT : InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n    ];\r\n  }\r\n}\r\n","import { TelemetryTerms } from '@extension/telemetry/common_telemetry';\r\nimport { TelemetryMessageModifiers } from '@extension/telemetry/telemetry_message_modifiers';\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\nimport { onDOMContentReady } from '@extension/utilities/utils';\r\n\r\nexport default class ContextTelemetry\r\n{\r\n  /* Registers the telemetry and fetches the respective messages based on the mapped 'identifiers'.\r\n     - Sends telemetry if associated with a User action event for a few respective cases.\r\n     - Else sends telemetry based on the 'sendTelemetry' attribute value for a few respective cases.\r\n     - Or else sends telemetry when the document is ready for a few respective cases.\r\n  */\r\n  static sendTelemetryMessages(options, handler)\r\n  {\r\n    const { sendTelemetry } = handler.trigger;\r\n    const triggerAction = handler.trigger.action;\r\n    const permittedActionList = [TelemetryTerms.ACTION.CLICK]; // All non-keyPress user actions\r\n\r\n    if (handler.trigger.selector && handler.trigger.action)\r\n    {\r\n      if (options.containerMeta)\r\n      {\r\n        const selectedTag = options.containerMeta.query(handler.trigger.selector);\r\n        if (selectedTag)\r\n        {\r\n          selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n        }\r\n      }\r\n      else\r\n      {\r\n        onDOMContentReady(() =>\r\n        {\r\n          const selectedTag = document.querySelector(handler.trigger.selector);\r\n          if (selectedTag)\r\n          {\r\n            selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    else if (sendTelemetry || (handler.trigger.state === options.state))\r\n    {\r\n      sendMessages();\r\n    }\r\n\r\n    /**\r\n     * Function handling the sending of telemetry, either from content or background script.\r\n     * @param {Object} event - Event object if invoked by an event listener. Can also be undefined if invoked directly by us.\r\n     */\r\n    function sendMessages(event)\r\n    {\r\n      handler.messages.forEach((spec) =>\r\n      {\r\n        const telemetryMessage = { ...spec.template };\r\n        // send telemetry only when its loaded or when its loaded with count != 0 (SMA Reputation)\r\n        const shouldSendMessage = ((sendTelemetry) && ((telemetryMessage.count !== undefined) ? (telemetryMessage.count !== 0) : true));\r\n\r\n        /* send telemetry when the key pressed is in WHITELISTEDKEYS array (found in 'options' JSON)\r\n           or if the user action is a click event */\r\n        let worthyAction = permittedActionList.includes(triggerAction);\r\n        if (triggerAction === TelemetryTerms.ACTION.KEYDOWN && options.whitelistedKeys)\r\n        {\r\n          const eventCode = event.keyCode;\r\n          worthyAction = options.whitelistedKeys.includes(eventCode);\r\n        }\r\n\r\n        if (shouldSendMessage || worthyAction)\r\n        {\r\n          if (options.isFromBackground)\r\n          {\r\n            BackgroundGlobals.messageDispatcher.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n          else\r\n          {\r\n            BackgroundIPC.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Accepts the paramters required for detecting the respective telemetry */\r\n  static handle(options)\r\n  {\r\n    const messageModifiers = new TelemetryMessageModifiers(options);\r\n    const telemetryHandlers = messageModifiers.fetchTelemetryHandlers(options.identifier);\r\n    telemetryHandlers.forEach((handler) =>\r\n    {\r\n      this.sendTelemetryMessages(options, handler);\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\n/////////////////////////////////\n//////////////////////////////////\n//////////\nexport default class Utils\n{\n  /**\n   * Creates a debounced function that delays invoking func until after wait\n   * milliseconds have elapsed since the last time the debounced function was invoked.\n   * source: http://davidwalsh.name/javascript-debounce-function\n  */\n  static debounce(func, wait, immediate)\n  {\n    let timeout;\n    return (...args) =>\n    {\n      const later = () =>\n      {\n        timeout = null;\n        if (!immediate) func(...args);\n      };\n\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(later, wait);\n      if (callNow) func(...args);\n    };\n  }\n\n  static isBrowserEN()\n  {\n    const language = extension.i18n.getUILanguage();\n    return language.toLowerCase().startsWith('en');\n  }\n\n  static isChromeBrowser()\n  {\n    // window.opr is only defined for opera. Edge Chromium has user agent Edg. So avoid these two as\n    // chrome extension can be installed even in these two popular browsers, window.navigator\n    const ua = navigator.userAgent.toLowerCase();\n\n    // Check if browser is chromium based, window.chrome\n    if (!ua.includes('chrome') || !!chrome === false) return false;\n\n    // check if it is opera browser, window.opr\n    if (ua.includes('opr')) return false;\n\n    // check if it is edge browser\n    if (ua.includes('edg')) return false;\n\n    return true;\n  }\n}\n\n/**\n * Vanilla JS solution to JQuery's $(document).ready() API\n */\nexport const onDOMContentReady = (cb) =>\n{\n  if (typeof document === 'undefined' || document === null)\n  {\n    return;\n  }\n\n  if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll))\n  {\n    cb();\n  }\n  else\n  {\n    document.addEventListener('DOMContentLoaded', cb);\n  }\n};\n\nexport const getBrowserInfo = () =>\n{\n  const ua = navigator.userAgent.toLowerCase();\n\n  const match = /(edge)\\/([\\w.]+)/.exec(ua)\n        || /(edg)\\/([\\w.]+)/.exec(ua)\n        || /(opr)[/]([\\w.]+)/.exec(ua)\n        || /(chrome)[ /]([\\w.]+)/.exec(ua)\n        || /(iemobile)[/]([\\w.]+)/.exec(ua)\n        || /(version)(applewebkit)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+).*(version)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+)/.exec(ua)\n        || /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua)\n        || /(msie) ([\\w.]+)/.exec(ua)\n        || (ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua))\n        || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua))\n        || [];\n\n  const platformMatch = /(ipad)/.exec(ua)\n        || /(ipod)/.exec(ua)\n        || /(windows phone)/.exec(ua)\n        || /(iphone)/.exec(ua)\n        || /(kindle)/.exec(ua)\n        || /(silk)/.exec(ua)\n        || /(android)/.exec(ua)\n        || /(win)/.exec(ua)\n        || /(mac)/.exec(ua)\n        || /(linux)/.exec(ua)\n        || /(cros)/.exec(ua)\n        || /(playbook)/.exec(ua)\n        || /(bb)/.exec(ua)\n        || /(blackberry)/.exec(ua)\n        || [];\n\n  const matched = {\n    browser: match[5] || match[3] || match[1] || '',\n    version: match[4] || match[2] || '0',\n    platform: platformMatch[0] || '',\n  };\n\n  if (matched.browser === 'mozilla')\n  {\n    matched.browser = 'firefox';\n  }\n\n  if (matched.browser === 'edg')\n  {\n    matched.browser = 'edge';\n  }\n\n  return matched;\n};\n\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n */\nexport async function digestMessage(message)\n{\n  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8); // hash the message\n  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n  return hashHex;\n}\n/////////////////////////////////\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////\n \n/////\n///\n////////////////////\n/////////////////\n///////////////////////\n///////////////////\n////////////////////////\n//////////////////////\n////////////////////////////\n//////////////////\n/////////////////////////////\n///////\n//////\n\n////////////////////////////////////////////\n///\n///////////////\n///\n//////////////\n///\n \n//////////\n","// Common\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\nimport UrlParser from '@extension/common/url_parser';\r\nimport { WhitelistActions, WhitelistTypes } from '@extension/common/whitelist_variables';\r\nimport { Logger } from '@extension/common/logger';\r\n// Util\r\nimport UIStrings from '@extension/utilities/ui_strings';\r\n// Telemetry\r\nimport { EventNames, TelemetryTerms } from '@extension/telemetry/common_telemetry';\r\nimport ContextTelemetry from '@extension/telemetry/context_telemetry';\r\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\r\n\r\n/**\r\n * RAT detection sidebar class handling markup, styles and event listeners\r\n */\r\nexport default class SidebarRatDetection\r\n{\r\n  constructor(componentData, containerHandler)\r\n  {\r\n    this.componentData = componentData;\r\n    this.strConvertor = null;\r\n    this.domain = UrlParser.getDomain(document.location.href);\r\n\r\n    // containerHandler related:\r\n    this.shadowRoot = containerHandler.shadowRoot;\r\n    this.query = containerHandler.query;\r\n    this.showContainer = containerHandler.showContainer;\r\n    this.closeContainer = containerHandler.closeContainer;\r\n    this.clickListener = containerHandler.clickListener;\r\n\r\n    // For Handling Telemetry\r\n    this.options = {\r\n      identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n      containerMeta: containerHandler\r\n    };\r\n  }\r\n\r\n  async init()\r\n  {\r\n    try\r\n    {\r\n      // Initialize Font on document\r\n      await UIContentUtils.initFontOnDocument();\r\n\r\n      this.strConvertor = new UIStrings(null, this.shadowRoot);\r\n      this.strConvertor.init();\r\n\r\n      this.initEventListeners();\r\n      this.showContainer();\r\n      this.query('.main-container').focus();\r\n\r\n      this.query('#logo').focus();\r\n      // Handle Telemetry\r\n      this.options.state = TelemetryTerms.MISC.LOADED;\r\n      this.options.url = this.domain;\r\n      ContextTelemetry.handle(this.options);\r\n    }\r\n    catch (error)\r\n    {\r\n      Logger.error(error);\r\n    }\r\n  }\r\n\r\n  initEventListeners()\r\n  {\r\n    // buttons listeners\r\n    this.clickListener('#rat_detection_got_it_btn', () =>\r\n    {\r\n      BackgroundIPC.updateRatDetectionShowingFlag(true);\r\n      this.closeContainer();\r\n    });\r\n\r\n    // buttons listeners\r\n    this.clickListener('#sidebar-close', () =>\r\n    {\r\n      BackgroundIPC.updateRatDetectionShowingFlag(true);\r\n    });\r\n\r\n    this.clickListener('#sidebar_rat_detection_whitelist_btn', () =>\r\n    {\r\n      BackgroundIPC.whitelist(WhitelistActions.ADD, WhitelistTypes.RAT_DETECTION, { domains: [this.domain] });\r\n      this.closeContainer();\r\n    });\r\n  }\r\n}\r\n","// Components\r\nimport SidebarContainer from '@extension/components/sidebar_container';\r\n// Common\r\nimport { SideBarCommands } from '@extension/common/commands';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n// UI\r\nimport SideBarMain from '@extension/ui/sidebar/sidebar_main';\r\nimport SidebarRatDetection from '@extension/ui/sidebar/sidebar_rat_detection';\r\n\r\n/**\r\n * Handles showing / hiding / initializing extension's sidebar components.\r\n */\r\nexport default class SidebarUIHandler\r\n{\r\n  constructor()\r\n  {\r\n    this.savedComponentDetails = null; // Used when reloading a component\r\n    this.isForegroundPage = false;\r\n    this.sidebarContainer = new SidebarContainer();\r\n    this.componentMap = {\r\n      [SideBarCommands.MAIN]: {\r\n        template: {\r\n          htmlPath: 'html/sidebar/sidebar_main.html',\r\n          cssPath: 'css/sidebar_main.css',\r\n        },\r\n        Component: SideBarMain,\r\n        loadAsBaseTemplate: true,\r\n      },\r\n      [SideBarCommands.RAT_DETECTION]: {\r\n        template: {\r\n          htmlPath: 'html/sidebar/sidebar_rat_detection.html',\r\n          cssPath: 'css/sidebar_rat_detection.css',\r\n          containerId: 'main-container__innerbody',\r\n        },\r\n        Component: SidebarRatDetection,\r\n      },\r\n    };\r\n  }\r\n\r\n  processMessage(payload, isForegroundPage = false)\r\n  {\r\n    this.isForegroundPage = isForegroundPage;\r\n    const { subcommand } = payload;\r\n    if (!subcommand) return;\r\n\r\n    switch (subcommand)\r\n    {\r\n      case SideBarCommands.RELOAD:\r\n        this.ReloadComponent();\r\n        return;\r\n    }\r\n\r\n    this.RenderUIContainer(payload);\r\n  }\r\n\r\n  async RenderUIContainer(payload)\r\n  {\r\n    const { subcommand, componentData } = payload;\r\n    const componentDetails = this.componentMap[subcommand];\r\n\r\n    if (!componentDetails) return;\r\n    const { template, Component, loadAsBaseTemplate = false } = componentDetails;\r\n\r\n    // Pass the Background generated Secret to all sidebars\r\n    const bkGlobals = await BackgroundIPC.getBkGlobals();\r\n    const waImageSecret = bkGlobals.WA_IMAGE_SECRET;\r\n    template.waImageSecret = waImageSecret;\r\n\r\n    const success = await this.sidebarContainer.init(template, componentData, this.isForegroundPage, loadAsBaseTemplate);\r\n    if (!success) return;\r\n\r\n    const instance = new Component(componentData, this.sidebarContainer, this.isForegroundPage);\r\n    instance.init();\r\n\r\n    // Saving component details for Reload\r\n    this.savedComponentDetails = { instance, ...componentDetails };\r\n  }\r\n\r\n  async ReloadComponent()\r\n  {\r\n    const { template, componentData, Component } = this.savedComponentDetails;\r\n    await this.sidebarContainer.reloadContainer(template, false);\r\n    new Component(componentData, this.sidebarContainer, this.isForegroundPage).init();\r\n  }\r\n}\r\n","// Styles\r\nimport '@styles/sidebar_action_panel.scss';\r\n// Util\r\nimport UIStrings from '@extension/utilities/ui_strings';\r\n// Common\r\nimport { extension } from '@extension/common/webextension';\r\n// Content\r\nimport SidebarUIHandler from '@extension/scripts/ui_handler/sidebar_ui_handler';\r\n\r\nexport default class ForegroundSidebarBase\r\n{\r\n  constructor()\r\n  {\r\n    this.strConvertor = null;\r\n    this.sidebarUIHandler = null;\r\n    this.isForeground = true;\r\n  }\r\n\r\n  init()\r\n  {\r\n    this.strConvertor = new UIStrings(null);\r\n    this.strConvertor.init();\r\n    this.sidebarUIHandler = new SidebarUIHandler();\r\n  }\r\n\r\n  processMessage(subcommand, componentData)\r\n  {\r\n    this.sidebarUIHandler.processMessage({ subcommand, componentData }, this.isForeground);\r\n  }\r\n\r\n  initMessageListener()\r\n  {\r\n    extension.runtime.onMessage.addListener((request, sender) =>\r\n    {\r\n      if (sender.id !== extension.runtime.id) return;\r\n      const { payload } = request;\r\n      payload && this.sidebarUIHandler.processMessage(payload, this.isForeground);\r\n    });\r\n  }\r\n}\r\n","import { SideBarCommands } from '@extension/common/commands';\r\n// UI\r\nimport ForegroundSidebarBase from '@extension/ui/foreground/foreground_sidebar_base';\r\n\r\nclass ForegroundSidebar extends ForegroundSidebarBase\r\n{\r\n  start()\r\n  {\r\n    this.init();\r\n    this.processMessage(SideBarCommands.MAIN, { sidebarMainData: {} });\r\n    this.initMessageListener();\r\n  }\r\n}\r\n\r\nnew ForegroundSidebar().start();\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","BackgroundCommands","ContentCommands","SideBarCommands","ExternalCommands","PING","DISCONNECT_NATIVE","SET_PROPERTY_EX","SET_PROPERTY","GET_PROPERTY","CLEAR_GTI_CACHE","RESET_CRYPTO","CLEAN_TYPOSQUATING_WHITELIST","CLEAR_TYPOSQUATING_CACHE","CLEAN_CRYPTO_WHITELIST","CLEAN_RAT_WHITELIST","CLEAN_RAT_CACHE","REPLACE_TRUSTED_DOMAIN","VERIFY_GTI_REQUEST","VERIFY_TYPOSQUAT_SERVER","GET_ALL_WA_SETTINGS","SET_STORAGE_PROPERTY","GET_STORAGE_PROPERTY","REINIT_SCHEDULED_TASKS","OPEN_SETTINGS","OPEN_ACTION_PANEL","GET_MEMORY_FOOTPRINT","ENDURANCE_TEST_RESET","FORM_DETECTION_RESULT","SHOW_UNUSED_SELECTORS","SET_MTI_GLOBALS","chrome","HandlePromise","static","message","customCallback","Promise","resolve","reject","runtime","sendMessage","data","lastError","defaultCallback","BackgroundIPC","action","command","handlePromiseMessage","url","requestData","referer","request","commandId","params","type","bIncludeSearchEngines","then","val","JSON","parse","showInNewTab","domain","id","x","y","telemetry","frameUrls","engine","payload","extension_id","showed","searchTerm","setting","username","hostname","completeLogin","email","name","value","personal","activity","HttpService","onHttpResponse","response","ok","status","statusText","Error","sendHttpRequest","headers","body","method","fetch","this","ResourceRequestor","constructor","http","geti18nRes","attr","placeholders","str","productName","replace","getResStr","resourceId","callback","UIStrings","iframeId","pageDocument","document","resourcerequestor","iframeContainer","querySelectorAll","contentDocument","localeData","fillText","text","element","getElementById","position","getAttribute","insertAdjacentText","textContent","fillLocalizedTexts","fillInputPlaceHolders","setAttribute","fillPlaceHolderInternal","getPlaceholderText","catch","fillPlaceHolders","init","SocialMediaTypes","NONE","LINKEDIN","INSTAGRAM","YOUTUBE","FACEBOOK","TWITTER","REDDIT","AnnotationOptions","Object","values","reduce","sum","ONLY_SECURE_SEARCH","ALL","Symbol","iterator","key","keys","NonZeroSocialMediaTypes","LocalStorageVariables","options","TabData","blockedIframes","cryptoBlockData","tabDomainTrusted","getResetValues","reset","tabId","update","get","BackgroundGlobals","cacheStore","getDefaultValues","set","newTabData","cache","delete","currentTabData","setTabBlockPageData","blockPageData","addBlockedFrame","push","getBlockedFrames","resetBlockedFrames","BlockState","GREEN","YELLOW","RED","UNKNOWN","HACKERSAFE","TYPOSQUATTING","PHISHING","prop","BrowserType","BuildSettings","Color","Score","KEY_CODES_RANGE","start","end","Array","from","slice","BackgroundConstants","TrustedDomains","Set","NativeSettingsPreprocess","trim","split","CH","FF","EDGE","IE","suffixBrowserMap","SYSTEM","USER","_browser","getBrowserSuffix","NativeSettings","DEV_MODE","scope","AFF_ID","BINARY_VERSION","EXTENSION_VERSION_CH","writeOnly","EXTENSION_VERSION_FF","EXTENSION_VERSION_ED","BROWSER_TYPE","USER_AGENT","SUGGESTION_URL","SCRIPT_GENERATED_DEFAULT_SS_URL","SECURE_SEARCH_REGEXES","preprocess","PreprocessSecureSearchRegEx","SHOW_SEARCH_SETTINGS","SECURE_SEARCH_TOAST_STAMP","SECURE_SEARCH_ANNOTATION_ONLY","SECURE_SEARCH_SHOW_ICONS","SECURE_SEARCH_CHOICE","SS_DEF","ANNOTATIONS_CHOICE_EXPLICIT","CURRENT_SAO_IN_EXTENSION","FF_EXTENSION_LAST_TOAST_TIME","FF_EXTENSION_TOAST_COUNT","CHECKLIST_START_INGORE_DATE_AV","CHECKLIST_START_IGNORE_DATE_FW","CHECKLIST_IGNORE_DURACTION","CHECKLIST_GRACE_PERIOD_AV","CHECKLIST_GRACE_PERIOD_FW","CHECKLIST_GRACE_PERIOD_DURATION","CRYPTOJACKING_DISABLED","SMA_USER_TOGGLE","SMA_ANNOTATION_OPTIONS","PAGES_SCANNED","PAGES_BLOCKED","DOWNLOADS_SCANNED","DOWNLOADS_BLOCKED","CRYPTO_BLOCKED","BLOCKPAGE_WHITELIST","TS_WHITELIST","CSP_ID_SETTING","UNINSTALL_SURVEY_ENABLED","UNINSTALL_SURVEY_URL","RAT_DETECTION_ENABLED","IDPS_FEATURE_ENABLED","APS_COHORT","APS_TOGGLE_SETTING","ALT_TRIGGER","IFRAME_FORM_CHECK_ENABLED","ANNOTATION_JOURNEY_COHORT","ANNOTATION_JOURNEY_TOAST","HTI_THROTTLE","MTI_CLIENT_ID","isTrustCheckRequired","ExtensionTelemetryUrl","scheduleManager","schedules","isNativeConnected","telemetryEngine","postInstallationPage","listenerManager","firefoxInternalUUID","shadowMode","browserType","ffViewports","garbageCollector","typoCache","logger","loglevel","messageDispatcher","port","tabData","tabIdToLastClickTime","Map","useNativeLogger","wasm","userAgentInBase64","typoSquattingServer","tldParser","cryptoBlacklist","trustedDomains","nativeSettings","searchSuggest","ratBlacklist","urls","updatedByNative","wssMessageDispatcher","wssNativeClient","WSS_INSTALLED","isWPSInstalled","searchEngines","enginesVersionUrl","engineCheckInterval","ENGINES_VERSION","AUTO_PLAY_NOTIFICATION_ENABLED","ALLOW_LOCALHOST","IDPS_AUTH_URL","IDPS_BREACH_COUNT_URL","IDPS_CSP_CLIENT_ID","IDPS_IS_ENTITLED","IDPS_PROVISION_ID","IDPS_LOGIN_DOMAIN","UA_CLIENT","TYPOSQUATTING_MAX_CACHE","TYPOSQUATTING_EXPIRY","WA_IMAGE_SECRET","apsUrlList","shopping","paths","selector","apsAnimationTimeout","downloadUrls","wpsRequestedSettings","permittedContentTypes","SUPPORTED_WEBSITE_LIST","isHTI","mtiRequestor","gtiServer","htiServer","cspClientId","ForegroundGlobals","LogLevels","INFO","ERROR","WARN","DEBUG","LogTypes","ProcessTypes","BACKGROUND","CONTENT","TELEMETRY","SMART_NATIVE_CLIENT","ProcessStyleMap","DEFAULT","Logger","logType","process","includes","storage","local","isBackground","details","processType","extensionType","consoleLog","state","processLog","async","logLevel","getLogLevel","logMessage","Date","toLocaleString","hour","minute","hour12","styleRegular","hightlight","console","error","log","uniqueHighlight","context","level","getStorageLogLevelAsync","Number","isInteger","storageLocalGetAsync","storageLogLevel","UIContentUtils","properties","baseTemplate","childTemplate","hostStyles","hostNode","createElement","property","style","mode","getBkGlobals","shadowRoot","attachShadow","populateContainer","appendChild","templateData","htmlPath","cssPath","containerId","waImageSecret","template","getTemplate","querySelector","baseTemplateData","innerHTML","httpService","responseText","htmlText","stylesText","responseStyles","cleanHTML","image","content","source","secretParam","src","cloneNode","poppinsUrl","poppinsPromise","FontFace","load","openSansUrl","openSansPromise","poppins","openSans","all","fonts","add","opacity","display","fade","window","requestAnimationFrame","cb","stopTransition","Globals","uid","externalMsgDispatcher","isvalidRequestType","requestType","valid","validateMsg","sendExtnMsg","extnId","request_type","defaultCb","reputationReqCount","imageCounter","isSearchHitSend","resourceRequestor","clientFunctions","activeURI","eventHandler","bkGlobals","searchEngine","searchAnnotationOption","socialMediaOption","socialMediaToggle","hasReportPage","ShadowDomContainer","closing","showing","animateReload","allowReplace","componentData","showContainer","bind","closeContainer","query","clickListener","bgGrayout","bgGrayoutElement","isSameObject","stringify","reloadContainer","HIDE","loadTemplate","object1","object2","reloadTemplate","setBackgroundOverlay","show","styles","cssText","append","overflow","fadeIn","bgOverlay","fadeOut","showBackgroundGrayout","hideBackgroundGrayOut","SHOW","clear","animate","close","remove","styleObj","setTimeout","addEventListener","event","isTrusted","SidebarStyles","top","padding","margin","zIndex","border","left","right","maxWidth","boxShadow","backgroundColor","transition","transform","width","height","SidebarContainer","defaultBaseTemplate","super","loadAsBaseTemplate","isForegroundPage","success","initContainer","injectImages","initBaseEventListeners","logoQuery","closeQuery","history","length","closeTab","go","ANNOTATION","BackgroundCommons","ContextTelemetry","TelemetryEventNames","UrlParser","Utils","Commands","CommonConstants","extension","SearchEngineHelper","prevLink","ResourceManager","BackgroundCommon","categories","includeDescription","getRes","l10nId","getResString","res","getCategoryStrings","categoryId","newCategory","description","promises","category","toLowerCase","imageName","imagePath","startsWith","size16","size20","size32","size40","color","toImagePaths","annotationItem","imageClass","toColor","annItem","colorVal","isPhishingURI","isNaN","trust","escape","urlSplit","isSiteAdvisorUrl","isExtensionUrl","isPropertyWebURL","number","decimal","toFixed","substring","initialEpochInSeconds","timePassedinSeconds","getTime","rules","filter","rule","condition","urlFilter","addRules","domains","resourceTypes","SideBarMain","containerHandler","strConvertor","bkData","getPopupData","initContent","initListeners","populateData","focus","sidebarTitle","sidebarSubtitle","hideStats","showMessage","classList","stats","version","pagesScanned","pagesBlocked","downloadsBlocked","cryptoBlocked","getUINumber","isURLValid","isProperWebURL","viewSiteReport","tabtype","settingsURL","focusOrCreateTab","goToSettings","uri","parts","cleanURI","endsWith","getURI","paramName","qpos","indexOf","index","test","URL","p","decodeURIComponent","WhitelistTypes","WhitelistActions","FEATURE_TAB_ID","EventNames","BLOCK_PAGE","BROWSER_ACTION_CLICKED","BROWSER_NAVIGATE","CRYPTOJACKING_BLOCK","DARK_WEB_SCAN","DOWNLOAD_BLOCK","GET_SEARCH_EXTENSION","PROFILE_INFO","REMOTE_ACCESS_TROJAN","SEARCH_SUGGEST_BLOCK_PAGE","SEARCH_SUGGEST","SECURE_SEARCH_HIT","SIDEBAR_PANEL","SITE_REPORT","SMA_REPUTATION","TOAST","WSS_ANALYTICS","APS","EVENT_NAME","IMPRESSION_BALLOON","IMPRESSION_HOVER","CLOSE_BALLOON","TOAST_CLOSE","BALLOON","ToastTypes","ImpressionNames","InteractionTypes","LEARN_MORE_CLICKED","WHITELISTED","ACKNOWLEDGED","PageLevel","SETTING_TABS","TelemetryColor","TelemetryBlockState","SearchType","TelemetryTerms","ACTION","CLICK","KEYDOWN","RETURN_KEY_CODE","SEARCH_SUGGEST_KEY_CODES","MISC","LOADED","CHECKED","ACTION_PANEL","ACCEPTED","DECLINED","SETTINGS_TAB_PREFIX","PREFERENCE","SEARCH_ENGINE","GOOGLE","YAHOO","SOCIAL_MEDIA","CommonTelemetry","colorStr","blockState","blockStateStr","tabName","tabNameStr","TelemetryMessageModifiers","_options","TELEMETRY_HANDLERS","initializeTelemetryHandler","fetchTelemetryHandlers","identifier","handlers","forEach","handler","trigger","sendTelemetry","isFromBackground","messages","analyticsSDK","interaction_type","colour","toTelemetryBlockState","blockPageStyle","_event_name","browser","browserTypeToString","badge_count","count","is_shown","crypto_miner","miner","process_name","file_name","ui_type","tab","toTelemetrySettingTab","search_type","selected","SEARCH_SUGGEST_TYPOSQUATTING","type_tag","typeTag","provider_type","engineName","block_state","site_categories","siteCategories","displayUrl","site","triggerType","action_type","provider","toastData","toastType","metadata","eventAction","flow_id","flowId","sequence","gotItButton","triggerAction","permittedActionList","containerMeta","selectedTag","sendMessages","readyState","documentElement","doScroll","spec","telemetryMessage","shouldSendMessage","worthyAction","whitelistedKeys","eventCode","keyCode","sendTelemetryMessages","SidebarRatDetection","getDomain","location","href","initFontOnDocument","initEventListeners","handle","updateRatDetectionShowingFlag","whitelist","SidebarUIHandler","savedComponentDetails","sidebarContainer","componentMap","Component","processMessage","subcommand","RenderUIContainer","ReloadComponent","componentDetails","instance","ForegroundSidebarBase","sidebarUIHandler","isForeground","initMessageListener","sender","sidebarMainData"],"sourceRoot":""}
{"version":3,"file":"scripts/content_crypto_block.js","mappings":"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A,2BACA,yBACA,+BACA,0BACA,gCACA,sCACA,8BACA,uBACA,yBACA,qBACA,wCACA,mCACA,0BACA,4BACA,iCACA,8BACA,+BACA,0BACA,0CACA,2BACA,kBACA,oCACA,6BACA,4BACA,wBACA,2BACA,0BACA,wBACA,2BACA,8BACA,2CACA,yBACA,wBACA,6BACA,sBACA,oBACA,+CACA,wBACA,2BACA,4BACA,6BACA,2BACA,wBACA,2BACA,qCACA,0BACA,2BACA,oCACA,uCACA,yBACA,4BACA,wBACA,4BACA,2BACA,8BACA,6BACA,gCACA,mCACA,4BACA,gCACA,4BACA,kCACA,+BACA,4BACA,wCACA,mBACA,0BACA,8BACA,2BACA,6BACA,2BACA,qBACA,+BACA,iCACA,2CACA,8BACA,6BACA,sCACA,0CACA,4BACA,2BACA,+BACA,2BACA,oCACA,0BACA,uBACA,qCACA,+BACA,+BACA,6BACA,yBACA,uBACA,qCACA,2BACA,4BACA,yBACA,6BACA,2BACA,6BACA,8BACA,2BACA,2BACA,sDACA,4BACA,8BACA,sBACA,0BACA,0BACA,0BACA,yBACA,+BACA,yBACA,6BACA,gCACA,4BACA,6CACA,wBACA,2BACA,2BACA,uBACA,iDACA,4BACA,oCACA,yBACA,4BACA,wCACA,yBACA,8BACA,wBACA,qBACA,0BACA,yBACA,0BACA,qCACA,uBACA,2BACA,2BACA,sCACA,6BACA,uBACA,kCACA,2BACA,wCACA,yBACA,yBACA,yBACA,8BACA,2BACA,0BACA,iCACA,kCACA,kCACA,wCACA,yBACA,4CACA,2CACA,yCACA,6CACA,gDACA,6CACA,+BACA,6BACA,+BACA,+CACA,2BACA,6BACA,wBACA,gCExJAC,eAAgBhG,GAChBiG,eAAgBnF,GAChBoF,cAAe,KACfC,aFwJ0B,CAC1B,CACExL,OAAQ,yBACRyL,KAAM,IAER,CACEzL,OAAQ,sBACRyL,KAAM,CACJ,4DAGJ,CACEzL,OAAQ,qBACRyL,KAAM,IAER,CACEzL,OAAQ,6BACRyL,KAAM,IAER,CACEzL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","sources":["webpack:///./extension/common/commands.js","webpack:///./extension/common/webextension.js","webpack:///./extension/common/http_service.js","webpack:///./extension/common/handle_promise.js","webpack:///./extension/common/background_ipc.js","webpack:///./extension/common/sma_variables.js","webpack:///./extension/common/annotation_variables.js","webpack:///./extension/common/cache_store_variables.js","webpack:///./extension/common/tab_data.js","webpack:///./extension/common/constants.js","webpack:///./extension/common/background_constants.js","webpack:///./extension/background/dispatchers/native/native_settings.js","webpack:///./extension/background/background_globals.js","webpack:///./extension/ui/foreground/foreground_globals.js","webpack:///./extension/common/logger.js","webpack:///./extension/utilities/ui_content_utils.js","webpack:///./coreengine/globals.js","webpack:///./coreengine/external_msg_dispatcher.js","webpack:///./extension/components/shadow_dom_container.js","webpack:///./extension/components/topbar_container.js","webpack:///./coreengine/resource_requestor.js","webpack:///./extension/utilities/ui_strings.js","webpack:///./extension/ui/topbar/topbar_iframe_block.js","webpack:///./extension/common/whitelist_variables.js","webpack:///./extension/telemetry/common_telemetry.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/globals.js","webpack:///./WABrowserExtension-Common/Annotations-Package/Common/resource_manager.js","webpack:///./extension/common/background_common.js","webpack:///./extension/telemetry/telemetry_message_modifiers.js","webpack:///./extension/telemetry/context_telemetry.js","webpack:///./extension/utilities/utils.js","webpack:///./extension/ui/topbar/topbar_crypto_block.js","webpack:///./extension/scripts/ui_handler/topbar_ui_handler.js","webpack:///./extension/scripts/content_base.js","webpack:///./extension/scripts/content_crypto_block.js"],"sourcesContent":["/**\r\n * The command ids supported for IPC between content process and chrome/background process.\r\n */\r\n\r\nexport const BackgroundCommands = {\r\n  // Generic Commands\r\n  CACHE_STORE: 'CACHE_STORE',\r\n  CONTENT_HANDLER: 'CONTENT_HANDLER',\r\n  EXECUTE_COMMAND: 'EXECUTE_COMMAND',\r\n  FOCUS_OR_CREATE_TAB: 'FOCUS_OR_CREATE_TAB',\r\n  GET_BK_GLOBALS: 'GET_BK_GLOBALS',\r\n  GET_EXTENSION_STATUS: 'GET_EXTENSION_STATUS',\r\n  GET_TAB_DATA: 'GET_TAB_DATA',\r\n  TI_REQUEST: 'TI_REQUEST',\r\n  INSTALL_EXTENSION: 'INSTALL_EXTENSION',\r\n  PLACEHOLDER_TEXT: 'PLACEHOLDER_TEXT',\r\n  REMOVE_TAB: 'REMOVE_TAB',\r\n  SEND_TELEMETRY: 'SEND_TELEMETRY',\r\n  SET_VIEWPORT: 'SET_VIEWPORT',\r\n  WHITELIST: 'WHITELIST',\r\n  RESET_NATIVE_SETTING: 'RESET_NATIVE_SETTING',\r\n  UPDATE_BK_NATIVE_SETTINGS: 'UPDATE_BK_NATIVE_SETTINGS',\r\n\r\n  // Options Menu / Settings Page\r\n  SHOW_SIDEBAR_MAIN: 'SHOW_SIDEBAR_MAIN',\r\n  GET_POPUP_DATA: 'GET_POPUP_DATA',\r\n  GET_SETTINGS_DATA: 'GET_SETTINGS_DATA',\r\n  RESET_SETTINGS: 'RESET_SETTINGS',\r\n\r\n  // Autoplay video\r\n  AUTO_RUN_VIDEO_SITE: 'AUTO_RUN_VIDEO_SITE',\r\n  GET_CLICK_EVENT_TIME: 'GET_CLICK_EVENT_TIME',\r\n  SAVE_CLICK_EVENT_TIME: 'SAVE_CLICK_EVENT_TIME',\r\n\r\n  // Typosquatting\r\n  GET_TYPOSQUATTING_DATA: 'GET_TYPOSQUATTING_DATA',\r\n\r\n  // Block Page / Iframe / Site Report\r\n  IS_FRAME_BLOCKED: 'IS_FRAME_BLOCKED',\r\n  IS_WHITELISTED: 'IS_WHITELISTED',\r\n  ANY_BLOCKED_IFRAMES: 'ANY_BLOCKED_IFRAMES',\r\n  ANY_BLOCKED_CRYPTOSCRIPTS: 'ANY_BLOCKED_CRYPTOSCRIPTS',\r\n  UNBLOCK_ALL_IFRAMES: 'UNBLOCK_ALL_IFRAMES',\r\n  VIEW_SITE_REPORT: 'VIEW_SITE_REPORT',\r\n\r\n  // Annotations\r\n  SEARCH_ANNOTATION: 'SEARCH_ANNOTATION',\r\n  UPDATE_ENGINE_STATS: 'UPDATE_ENGINE_STATS',\r\n\r\n  // SMA\r\n  SOCIAL_MEDIA_ANNOTATION: 'SOCIAL_MEDIA_ANNOTATION',\r\n\r\n  // RAT Detection\r\n  UPDATE_RAT_DETECTION_SHOWING_FLAG: 'UPDATE_RAT_DETECTION_SHOWING_FLAG',\r\n\r\n  // Search Suggestion\r\n  SEARCH_SUGGEST: 'SEARCH_SUGGEST',\r\n\r\n  // Form detection\r\n  SAVE_FORM_INFO: 'SAVE_FORM_INFO',\r\n  GET_FORM_INFO_CACHE: 'GET_FORM_INFO_CACHE',\r\n  CLEAR_FORM_INFO_CACHE: 'CLEAR_FORM_INFO_CACHE',\r\n  SAVE_MULTISTEP_LOGIN: 'SAVE_MULTISTEP_LOGIN',\r\n  GET_FD_WEIGHTS: 'GET_FD_WEIGHTS',\r\n  GET_FD_EXCEPTIONS: 'GET_FD_EXCEPTIONS',\r\n  GET_FD_CRF_PARAMS: 'GET_FD_CRF_PARAMS',\r\n\r\n  // DWS\r\n  CLEAR_CACHED_DWS_INFO: 'CLEAR_DWS_INFO',\r\n  GET_CACHED_DWS_INFO: 'GET_CACHED_DWS_INFO',\r\n  UPDATE_DWS_WHITELIST: 'UPDATE_DWS_WHITELIST',\r\n  LAUNCH_IDPS_LOGIN: 'LAUNCH_IDPS_LOGIN',\r\n  UPDATE_DWS_SHOWN: 'UPDATE_DWS_SHOWN',\r\n\r\n  // APS\r\n  GET_APS_DETAILS: 'GET_APS_DETAILS',\r\n  FORM_PRE_CHECK_PASSED: 'FORM_PRE_CHECK_PASSED',\r\n  SIGN_UP_FORM_DETECTED: 'SIGN_UP_FORM_DETECTED',\r\n\r\n  // Firefox Policy Consent\r\n  SET_FF_POLICY_COLLECTION: 'SET_FF_POLICY_COLLECTION',\r\n  SET_FF_POLICY_LAST_SHOWN: 'SET_FF_POLICY_LAST_SHOWN',\r\n};\r\n\r\nexport const ContentCommands = {\r\n  // Commands handled by iframes\r\n  UNBLOCK_IFRAME: 'UNBLOCK_IFRAME',\r\n\r\n  // Content UI Handler Commands\r\n  BALLOON_MESSAGE: 'BALLOON_MESSAGE',\r\n  PAGE_OVERLAY: 'PAGE_OVERLAY',\r\n  SIDEBAR: 'SIDEBAR',\r\n  TOPBAR: 'TOPBAR',\r\n\r\n  // Ping\r\n  PING_CONTENT_ANNOTATION: 'PING_CONTENT_ANNOTATION',\r\n  PING_CONTENT_RAT_DETECTION: 'PING_CONTENT_RAT_DETECTION',\r\n  PING_CONTENT_IFRAME_BANNER: 'PING_CONTENT_IFRAME_BANNER',\r\n  PING_CONTENT_AUTOPLAY_DETECTION: 'PING_CONTENT_AUTOPLAY_DETECTION',\r\n  PING_CONTENT_SIDEBAR_MAIN: 'PING_CONTENT_SIDEBAR_MAIN',\r\n  PING_CONTENT_FF_DL_OVERLAY: 'PING_CONTENT_FF_DL_OVERLAY',\r\n  PING_CONTENT_CRYPTO_BLOCK: 'PING_CONTENT_CRYPTO_BLOCK',\r\n  PING_CONTENT_FF_VIEWPORTS: 'PING_CONTENT_FF_VIEWPORTS',\r\n  PING_CONTENT_IDPS: 'PING_CONTENT_IDPS',\r\n  PING_CONTENT_APS_TOAST: 'PING_CONTENT_APS_TOAST',\r\n  PING_CONTENT_APS_BALLOON: 'PING_CONTENT_APS_BALLOON',\r\n  PING_CONTENT_APS_OBSERVER: 'PING_CONTENT_APS_OBSERVER',\r\n  PING_CONTENT_SITE_LISTENER: 'PING_CONTENT_SITE_LISTENER',\r\n  PING_IFRAME_FORM_CHECK: 'PING_IFRAME_FORM_CHECK',\r\n  PING_IFRAME_FORM_DETECTION: 'PING_IFRAME_FORM_DETECTION',\r\n  PING_IFRAME_BLOCK: 'PING_IFRAME_BLOCK',\r\n\r\n  // APS\r\n  APS_REGISTRATION_PAGE: 'APS_REGISTRATION_PAGE',\r\n\r\n  // Broadcast to foreground\r\n  BROADCAST_TO_FOREGROUND: 'BROADCAST_TO_FOREGROUND',\r\n\r\n  // Annotation Journey Toast\r\n  TRIGGER_AJ_TOAST: 'TRIGGER_AJ_TOAST'\r\n};\r\n\r\n// **********************************************\r\n// SUB-COMMANDS USED BY CONTENT HANDLER COMMANDS:\r\n// **********************************************\r\n\r\nexport const SideBarCommands = {\r\n  MAIN: 'MAIN',\r\n  RELOAD: 'RELOAD',\r\n  SMA: 'SMA',\r\n  RAT_DETECTION: 'RAT_DETECTION',\r\n};\r\n\r\nexport const BalloonMessageCommands = {\r\n  ADVANCED_PROTECTION_SIGNAL: 'ADVANCED_PROTECTION_SIGNAL',\r\n  ADVANCED_PROTECTION_SIGNAL_TOAST: 'ADVANCED_PROTECTION_SIGNAL_TOAST',\r\n  DWS: 'DWS',\r\n};\r\n\r\nexport const TopBarCommands = {\r\n  CRYPTO_BLOCK: 'CRYPTO_BLOCK',\r\n  IFRAME_BLOCK: 'IFRAME_BLOCK',\r\n  TRIGGER_ALLOW: 'TRIGGER_ALLOW',\r\n};\r\n\r\nexport const PageOverlayCommands = {\r\n  SEARCH_EXTENSION_OVERLAY: 'SEARCH_EXTENSION_OVERLAY',\r\n  FINISH_DOWNLOAD: 'FINISH_DOWNLOAD',\r\n};\r\n\r\nexport const ExternalCommands = {\r\n  // Legacy\r\n  PING: 0,\r\n  DISCONNECT_NATIVE: 1,\r\n  SET_PROPERTY_EX: 2, //  For automation\r\n  SET_PROPERTY: 3, // For automation\r\n  GET_PROPERTY: 4, // For automation\r\n  CLEAR_GTI_CACHE: 5, // For automation\r\n  RESET_CRYPTO: 6, // For automation\r\n  CLEAN_TYPOSQUATING_WHITELIST: 7, // For automation\r\n  CLEAR_TYPOSQUATING_CACHE: 8, // For automation\r\n  CLEAN_CRYPTO_WHITELIST: 10, // For automation\r\n  CLEAN_RAT_WHITELIST: 12, // For automation\r\n  CLEAN_RAT_CACHE: 13, // For automation\r\n  REPLACE_TRUSTED_DOMAIN: 15, // For automation\r\n  VERIFY_GTI_REQUEST: 17, // For automation\r\n  VERIFY_TYPOSQUAT_SERVER: 18, // For watchdog automation\r\n  GET_ALL_WA_SETTINGS: 19, // For automation extension\r\n  SET_STORAGE_PROPERTY: 20, // Set a local storage property within WA\r\n  GET_STORAGE_PROPERTY: 21, // Get a local storage property within WA (for automation)\r\n  REINIT_SCHEDULED_TASKS: 22,\r\n  OPEN_SETTINGS: 23, // For personal protection hub\r\n  OPEN_ACTION_PANEL: 24, // For personal protection hub\r\n  GET_MEMORY_FOOTPRINT: 26, // For automation, endurance run\r\n  ENDURANCE_TEST_RESET: 27, // For automation, endurance run\r\n  FORM_DETECTION_RESULT: 28,\r\n  SHOW_UNUSED_SELECTORS: 29, // For automation\r\n  SET_MTI_GLOBALS: 30\r\n};\r\n\r\nexport const ExternalResponse = {\r\n  PONG: 0,\r\n};\r\n","export const extension = WEBPACK_BROWSER_NAME === 'chrome' || WEBPACK_BROWSER_NAME === 'edge' ? chrome : browser; // eslint-disable-line no-undef\r\n","/**\r\n * Wrapper class making the http request call (using the built-in Fetch api).\r\n * Handling normal and exception cases.\r\n */\r\nexport default class HttpService\r\n{\r\n  onHttpResponse(response)\r\n  {\r\n    if (!response.ok)\r\n    {\r\n      const message = `HttpService Status: ${response.status}\\nError Text: ${response.statusText}`;\r\n      return Promise.reject(new Error(message));\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  sendHttpRequest({ url, headers, body, method = 'GET' })\r\n  {\r\n    return fetch(url, { headers, method, body }).then(this.onHttpResponse);\r\n  }\r\n}\r\n","export default class HandlePromise\r\n{\r\n  static handlePromiseMessage(message, customCallback = null)\r\n  {\r\n    const defaultCallback = (resolve, reject, data) =>\r\n    {\r\n      if (chrome.runtime.lastError) reject(chrome.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      chrome.runtime.sendMessage(message, (data) =>\r\n      {\r\n        if (typeof customCallback === 'function') customCallback(resolve, reject, data);\r\n        else defaultCallback(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\r\nimport { BackgroundCommands, ContentCommands } from '@extension/common/commands';\r\nimport HandlePromise from '@extension/common/handle_promise';\r\n\r\n/**\r\n * Handles communication from content process to the background process.\r\n */\r\nexport default class BackgroundIPC\r\n{\r\n  static cacheStore(action, data)\r\n  {\r\n    const command = BackgroundCommands.CACHE_STORE;\r\n    return HandlePromise.handlePromiseMessage({ command, action, data });\r\n  }\r\n\r\n  static isFrameBlocked(url)\r\n  {\r\n    const command = BackgroundCommands.IS_FRAME_BLOCKED;\r\n    return HandlePromise.handlePromiseMessage({ command, url });\r\n  }\r\n\r\n  static makeMTIRequest(requestData, referer)\r\n  {\r\n    const command = BackgroundCommands.TI_REQUEST;\r\n    const request = { command, requestData, referer };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static executeCommand(commandId, params)\r\n  {\r\n    const command = BackgroundCommands.EXECUTE_COMMAND;\r\n    extension.runtime.sendMessage({ command, commandId, params });\r\n  }\r\n\r\n  static focusOrCreateTab(url)\r\n  {\r\n    const command = BackgroundCommands.FOCUS_OR_CREATE_TAB;\r\n    extension.runtime.sendMessage({ command, url });\r\n  }\r\n\r\n  static closeTab()\r\n  {\r\n    const command = BackgroundCommands.REMOVE_TAB;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static whitelist(action, type, data)\r\n  {\r\n    const command = BackgroundCommands.WHITELIST;\r\n    return HandlePromise.handlePromiseMessage({ action, command, type, data });\r\n  }\r\n\r\n  static getPopupData()\r\n  {\r\n    const command = BackgroundCommands.GET_POPUP_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getSettingsData()\r\n  {\r\n    const command = BackgroundCommands.GET_SETTINGS_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static searchAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static socialMediaAnnotation(action, data)\r\n  {\r\n    const command = BackgroundCommands.SOCIAL_MEDIA_ANNOTATION;\r\n    return HandlePromise.handlePromiseMessage({ action, data, command });\r\n  }\r\n\r\n  static async getBkGlobals(bIncludeSearchEngines = false)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      const command = BackgroundCommands.GET_BK_GLOBALS;\r\n      const promise = HandlePromise.handlePromiseMessage({ command, bIncludeSearchEngines });\r\n      promise.then((val) => { resolve(JSON.parse(val)); });\r\n    });\r\n  }\r\n\r\n  static viewSiteReport(url = null, showInNewTab = false)\r\n  {\r\n    const command = BackgroundCommands.VIEW_SITE_REPORT;\r\n    extension.runtime.sendMessage({ command, url, showInNewTab });\r\n  }\r\n\r\n  static getTypoSquattingData(domain)\r\n  {\r\n    const command = BackgroundCommands.GET_TYPOSQUATTING_DATA;\r\n    return HandlePromise.handlePromiseMessage({ command, domain });\r\n  }\r\n\r\n  static getPlaceholderText(id)\r\n  {\r\n    const command = BackgroundCommands.PLACEHOLDER_TEXT;\r\n    return HandlePromise.handlePromiseMessage({ command, id });\r\n  }\r\n\r\n  static setViewPort(x, y)\r\n  {\r\n    const command = BackgroundCommands.SET_VIEWPORT;\r\n    extension.runtime.sendMessage({ command, x, y });\r\n  }\r\n\r\n  static sendTelemetry(telemetry)\r\n  {\r\n    const command = BackgroundCommands.SEND_TELEMETRY;\r\n    extension.runtime.sendMessage({ command, telemetry });\r\n  }\r\n\r\n  static anyBlockedIframes(frameUrls)\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_IFRAMES;\r\n    return HandlePromise.handlePromiseMessage({ command, frameUrls });\r\n  }\r\n\r\n  static anyBlockedCryptoScripts()\r\n  {\r\n    const command = BackgroundCommands.ANY_BLOCKED_CRYPTOSCRIPTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static resetSettings()\r\n  {\r\n    const command = BackgroundCommands.RESET_SETTINGS;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static sendEngineStat(engine)\r\n  {\r\n    extension.runtime.sendMessage({ command: BackgroundCommands.UPDATE_ENGINE_STATS, engine });\r\n  }\r\n\r\n  static contentHandler(message)\r\n  {\r\n    const command = BackgroundCommands.CONTENT_HANDLER;\r\n    extension.runtime.sendMessage({ command, message });\r\n  }\r\n\r\n  static getTabData(payload = {})\r\n  {\r\n    const command = BackgroundCommands.GET_TAB_DATA;\r\n    const request = { command, ...payload };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static isWhitelisted(url)\r\n  {\r\n    const command = BackgroundCommands.IS_WHITELISTED;\r\n    const request = { command, url };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static getExtensionStatus(id)\r\n  {\r\n    return HandlePromise.handlePromiseMessage({ command: BackgroundCommands.GET_EXTENSION_STATUS, extension_id: id });\r\n  }\r\n\r\n  static unblockAllIframes()\r\n  {\r\n    const command = BackgroundCommands.UNBLOCK_ALL_IFRAMES;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateRatDetectionShowingFlag(showed)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_RAT_DETECTION_SHOWING_FLAG;\r\n    extension.runtime.sendMessage({ command, showed });\r\n  }\r\n\r\n  /**\r\n   * Send a message to the background to retrieve the results from Search Suggestion for the search term\r\n   *\r\n   * @param {String} searchTerm\r\n   */\r\n  static getSearchSuggest(searchTerm)\r\n  {\r\n    const command = BackgroundCommands.SEARCH_SUGGEST;\r\n    const request = { command, searchTerm };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static resetNativeSetting(setting)\r\n  {\r\n    const command = BackgroundCommands.RESET_NATIVE_SETTING;\r\n    extension.runtime.sendMessage({ command, setting });\r\n  }\r\n\r\n  /**\r\n   * Save form info (logging info)\r\n   * @param {string} username - username entered in the form.\r\n   * @param {string} hostname - hostname of the page the form was submitted on.\r\n   */\r\n  static saveFormInfo(username, hostname)\r\n  {\r\n    const command = BackgroundCommands.SAVE_FORM_INFO;\r\n    extension.runtime.sendMessage({ command, username, hostname });\r\n  }\r\n\r\n  /**\r\n   * Send message to the backend to save login from multi-step detection\r\n   * @param {Object} data - Object containing the neccesary info from the form.\r\n   * @param {string} data.username - (optional) username entered into the form. Only supplied if login not complete, ie first step of multistep form.\r\n   * @param {string} data.hostanme - hostname of the page the form was submitted on.\r\n   * @param {Boolean} completeLogin - Whether or not the multistep login process is completed or not.\r\n   */\r\n  static saveMultiStepLogin(data, completeLogin)\r\n  {\r\n    const command = BackgroundCommands.SAVE_MULTISTEP_LOGIN;\r\n    extension.runtime.sendMessage({ command, data, completeLogin });\r\n  }\r\n\r\n  static getFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.GET_FORM_INFO_CACHE;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static clearFormInfoCache()\r\n  {\r\n    const command = BackgroundCommands.CLEAR_FORM_INFO_CACHE;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  /**\r\n   * Update list of emails to be excluded from DWS offering.\r\n   * The email is whitelisted either because the user said not to offer it again, or because the user\r\n   * added it to be monitored in the web portal.\r\n   * @param {*} email\r\n   */\r\n  static updateDWSWhitelist(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_WHITELIST;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.GET_CACHED_DWS_INFO;\r\n    const request = { command, email };\r\n    return HandlePromise.handlePromiseMessage(request);\r\n  }\r\n\r\n  static clearCachedDWSInfo(email)\r\n  {\r\n    const command = BackgroundCommands.CLEAR_CACHED_DWS_INFO;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static updateDWSShown(email)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_DWS_SHOWN;\r\n    extension.runtime.sendMessage({ command, email });\r\n  }\r\n\r\n  static getAPSDetails()\r\n  {\r\n    const command = BackgroundCommands.GET_APS_DETAILS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static signUpFormDetected()\r\n  {\r\n    const command = BackgroundCommands.SIGN_UP_FORM_DETECTED;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static updateBkNativeSettings(name, value)\r\n  {\r\n    const command = BackgroundCommands.UPDATE_BK_NATIVE_SETTINGS;\r\n    extension.runtime.sendMessage({ command, name, value });\r\n  }\r\n\r\n  static launchIDPSLogin()\r\n  {\r\n    const command = BackgroundCommands.LAUNCH_IDPS_LOGIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static showSidebarMain()\r\n  {\r\n    const command = BackgroundCommands.SHOW_SIDEBAR_MAIN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  static setFFPolicyCollection({ personal, activity })\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_COLLECTION;\r\n    extension.runtime.sendMessage({ command, personal, activity });\r\n  }\r\n\r\n  static setFFPolicyLastShown()\r\n  {\r\n    const command = BackgroundCommands.SET_FF_POLICY_LAST_SHOWN;\r\n    extension.runtime.sendMessage({ command });\r\n  }\r\n\r\n  // This will broadcast a sendMessage to all page owned by us\r\n  // For example, to all foreground pages. A message will be sent to\r\n  // background as well but it will not be processed\r\n  static broadcastToForeground(payload)\r\n  {\r\n    const command = ContentCommands.BROADCAST_TO_FOREGROUND;\r\n    extension.runtime.sendMessage({ command, payload });\r\n  }\r\n\r\n  static getFDWeights()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_WEIGHTS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDExceptions()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_EXCEPTIONS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n\r\n  static getFDCrfParams()\r\n  {\r\n    const command = BackgroundCommands.GET_FD_CRF_PARAMS;\r\n    return HandlePromise.handlePromiseMessage({ command });\r\n  }\r\n}\r\n","export const SocialMediaTypes = {\r\n  NONE: 0,\r\n  LINKEDIN: 1,\r\n  INSTAGRAM: 2,\r\n  YOUTUBE: 4,\r\n  FACEBOOK: 8,\r\n  TWITTER: 16,\r\n  REDDIT: 32\r\n};\r\n\r\n// Sum of all Social Media Types\r\nexport const SocialMediaAllTypes = Object.values(SocialMediaTypes).reduce((sum, value) => sum + value);\r\n\r\nexport const SocialMediaActions = {\r\n  TOGGLE_ON: 'TOGGLE_ON',\r\n  TOGGLE_OFF: 'TOGGLE_OFF',\r\n  ANNOTATION_ENABLE_ALL: 'ANNOTATION_ENABLE_ALL',\r\n  ANNOTATION_DISABLE_ALL: 'ANNOTATION_DISABLE_ALL',\r\n  ANNOTATION_ENABLE: 'ANNOTATION_ENABLE',\r\n  ANNOTATION_DISABLE: 'ANNOTATION_DISABLE',\r\n  GET: 'GET',\r\n};\r\n","export const SearchAnnotationActions = {\r\n  GET: 'GET',\r\n  SET: 'SET',\r\n};\r\n\r\nexport const AnnotationOptions = {\r\n  NONE: 'NONE',\r\n  ONLY_SECURE_SEARCH: 'ONLY_SECURE_SEARCH',\r\n  ALL: 'ALL',\r\n  * [Symbol.iterator]() // Override the iterable protocol to allow spreading of keys (...AnnotationOptions)\r\n  {\r\n    for (const key of Object.keys(this))\r\n    {\r\n      yield key;\r\n    }\r\n  }\r\n};\r\n\r\n// DO NOT CHANGE the number for the search engine types\r\n// Some of these numbers are mapped to native's search providers\r\nexport const SearchEngineTypes = {\r\n  UNKNOWN: 0,\r\n  // Search engine annotations\r\n  GOOGLE: 1,\r\n  YAHOO: 2,\r\n  AOL: 3,\r\n  ASK: 4,\r\n  UOL: 5,\r\n  GOO: 6,\r\n  MYWAY: 7,\r\n  TERRA: 8,\r\n  WEB: 9,\r\n  BIGLOBE: 10,\r\n  GMX: 11,\r\n  EXCITE: 12,\r\n  SKY: 13,\r\n  NAVER: 14,\r\n  NIFTY: 15,\r\n  RAKUTEN: 16,\r\n  IXQUICK: 17,\r\n  XFINITY: 18,\r\n  SOGOU: 19,\r\n  DOGPILE: 20,\r\n  SEARCH: 21,\r\n  WEBCRAWLER: 22,\r\n  BING: 23,\r\n  INFO: 24,\r\n  YANDEX: 25,\r\n  YIPPY: 26, // No longer supported\r\n  WOW: 27,\r\n  HAOSO: 28,\r\n  DUCKDUCKGO: 30,\r\n  ONESEARCH: 31,\r\n  // Social media annotations\r\n  LINKEDIN: 100,\r\n  FACEBOOK: 101,\r\n  YOUTUBE: 102,\r\n  INSTAGRAM: 103,\r\n  REDDIT: 104,\r\n  TWITTER: 105,\r\n};\r\n\r\nexport const EngineType = {\r\n  SEARCH: 0,\r\n  SOCIALMEDIA: 1,\r\n};\r\n","import { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\n\r\nconst { NONE, ...NonZeroSocialMediaTypes } = SocialMediaTypes;\r\n\r\nexport const CacheStoreActions = {\r\n  SET: 'SET',\r\n  GET: 'GET',\r\n  CLEAR: 'CLEAR',\r\n};\r\n\r\n// All keys must be same as value\r\n// Stored in browser storage\r\nexport const LocalStorageVariables = {\r\n  // Number of times the first variant of yellow block page sidebar has been shown\r\n  BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_PHISHING_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Did user accept SS in the past\r\n  // Sidebar Action Panels related\r\n  BLOCK_PAGE_RED_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_RED_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // Whitelist related\r\n  BLOCK_PAGE_WHITELIST: {\r\n    name: 'BLOCK_PAGE_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Number of times the first variant of red block page sidebar has been shown\r\n  BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT: {\r\n    name: 'BLOCK_PAGE_YELLOW_FIRST_VARIANT_COUNT',\r\n    type: 'number'\r\n  },\r\n  // blockpage whitelisted sites\r\n  CRYPTO_WHITELIST: {\r\n    name: 'CRYPTO_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  // Telemetry related\r\n  ENGINE_DOWNLOAD_TASK: {\r\n    name: 'ENGINE_DOWNLOAD_TASK',\r\n    type: 'object'\r\n  },\r\n  // Engine JSON\r\n  ENGINES: {\r\n    name: 'ENGINES',\r\n    type: 'object'\r\n  },\r\n  ENGINES_FUTURE_TIME: { // TODO: Might not need - not being used\r\n    name: 'ENGINES_FUTURE_TIME',\r\n    type: 'object'\r\n  },\r\n  ENGINES_VERSION: {\r\n    name: 'ENGINES_VERSION',\r\n    type: 'string'\r\n  },\r\n  EXTENSION_LOGGING: {\r\n    name: 'EXTENSION_LOGGING',\r\n    options: [0, 1, 2, 3, 4],\r\n    type: 'number'\r\n  },\r\n  USE_NATIVE_LOGGER: {\r\n    name: 'USE_NATIVE_LOGGER',\r\n    type: 'boolean'\r\n  },\r\n  EXTN_UUID2: {\r\n    name: 'EXTN_UUID2',\r\n    type: 'string'\r\n  },\r\n\r\n  IFRAME_BLOCK_FIRST_TIME: {\r\n    name: 'IFRAME_BLOCK_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  LAST_HEARTBEAT_SENT: { // TODO: Might not need - not being used\r\n    name: 'LAST_HEARTBEAT_SENT',\r\n    type: 'object'\r\n  },\r\n  POPUP_STATS: {\r\n    name: 'POPUP_STATS',\r\n    type: 'object'\r\n  },\r\n  POST_INSTALLATION_PAGE_SHOWED: { // TODO: Might not need - not being used\r\n    name: 'POST_INSTALLATION_PAGE_SHOWED',\r\n    type: 'object'\r\n  },\r\n  RAT_DETECTION_WHITELIST: {\r\n    name: 'RAT_DETECTION_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  SEARCH_ANNOTATION_OPTION: {\r\n    name: 'SEARCH_ANNOTATION_OPTION',\r\n    options: [...AnnotationOptions],\r\n    type: 'string'\r\n  },\r\n  // Used as a flag to show SMA Notification for the first time only\r\n  SMA_ANNOTATION_OPTIONS: {\r\n    name: 'SMA_ANNOTATION_OPTIONS',\r\n    options: { ...NonZeroSocialMediaTypes }, // Objects signify checkboxes\r\n    type: 'number'\r\n  },\r\n  // SMA options the user has selected\r\n  SMA_USER_TOGGLE: {\r\n    name: 'SMA_USER_TOGGLE',\r\n    type: 'boolean'\r\n  },\r\n  TELEMETRY_HEARTBEAT_TASK: { // TODO: Complete definition\r\n    name: 'TELEMETRY_HEARTBEAT_TASK',\r\n    type: 'object'\r\n  },\r\n  TYPOSQUATTING_WHITELIST: {\r\n    name: 'TYPOSQUATTING_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  CACHE_TYPOSQUATTING: {\r\n    name: 'CACHE_TYPOSQUATTING',\r\n    type: 'object'\r\n  },\r\n  CACHE_GTI: {\r\n    name: 'CACHE_GTI',\r\n    type: 'object'\r\n  },\r\n  CACHE_TAB_DATA: {\r\n    name: 'CACHE_TAB_DATA',\r\n    type: 'object'\r\n  },\r\n  // Flag to indicate whether to retrieve block page whitelist from native\r\n  USER_NATIVE_STATS: {\r\n    name: 'USER_NATIVE_STATS',\r\n    type: 'boolean'\r\n  },\r\n  // stats for what we have done for the user - shown on popup\r\n  WHITELIST_FLAG: {\r\n    name: 'WHITELIST_FLAG',\r\n    type: 'boolean'\r\n  },\r\n  // DWS Info\r\n  DWS_INFO: {\r\n    name: 'DWS_INFO',\r\n    type: 'object'\r\n  },\r\n  // list of emails already monitored or whitelisted by the user.\r\n  DWS_WHITELIST: {\r\n    name: 'DWS_WHITELIST',\r\n    type: 'array'\r\n  },\r\n  DWS_UNIQUE_EMAILS: {\r\n    name: 'DWS_UNIQUE_EMAILS',\r\n    type: 'array'\r\n  },\r\n  APS_TOAST_FIRST_TIME: {\r\n    name: 'APS_TOAST_FIRST_TIME',\r\n    type: 'boolean'\r\n  },\r\n  APS_FULL_MSG_SHOWN_ARRAY: {\r\n    name: 'APS_FULL_MSG_SHOWN_ARRAY',\r\n    type: 'array'\r\n  },\r\n  // Firefox user policy consent\r\n  FF_POLICY_PERSONAL_COLLECTION: {\r\n    name: 'FF_POLICY_PERSONAL_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_ACTIVITY_COLLECTION: {\r\n    name: 'FF_POLICY_ACTIVITY_COLLECTION',\r\n    type: 'boolean'\r\n  },\r\n  FF_POLICY_LAST_SHOWN: {\r\n    name: 'FF_POLICY_LAST_SHOWN',\r\n    type: 'number'\r\n  },\r\n  // WA Affid\r\n  WA_AFFID: {\r\n    name: 'WA_AFFID',\r\n    type: 'number'\r\n  },\r\n  // APS TOGGLE SETTING\r\n  APS_TOGGLE_SETTING: {\r\n    name: 'APS_TOGGLE_SETTING',\r\n    type: 'boolean'\r\n  },\r\n  // ANNOTATION JOURNEY TOAST\r\n  AJ_TOAST: {\r\n    name: 'AJ_TOAST',\r\n    type: 'boolean'\r\n  },\r\n  AJ_APS_ENABLE: {\r\n    name: 'AJ_APS_ENABLE',\r\n    type: 'number'\r\n  },\r\n\r\n  HTI_THROTTLE: {\r\n    name: 'HTI_THROTTLE',\r\n    type: 'number'\r\n  },\r\n\r\n  IS_HTI: {\r\n    name: 'IS_HTI',\r\n    type: 'boolean'\r\n  },\r\n};\r\n\r\n// In memory only, not in browser storage, reset upon browser restart\r\nexport const CacheStorageVariables = {\r\n  // RAT Detection related:\r\n  RAT_DETECTION_SHOWING: {\r\n    name: 'RAT_DETECTION_SHOWING',\r\n    type: 'object'\r\n  },\r\n  // Form detection\r\n  FORM_INFO: {\r\n    name: 'FORM_INFO',\r\n    type: 'object'\r\n  },\r\n  SAVE_MULTI_STEP_LOGIN: {\r\n    name: 'SAVE_MULTI_STEP_LOGIN',\r\n    type: 'object'\r\n  },\r\n  APS_EMAIL_LINKS: {\r\n    name: 'APS_EMAIL_LINKS',\r\n    type: 'array'\r\n  },\r\n  WSS_EMAIL: {\r\n    name: 'WSS_EMAIL',\r\n    type: 'string'\r\n  }\r\n};\r\n","import { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n\r\n/**\r\n * Tab data class and it's helper functions\r\n */\r\nexport default class TabData\r\n{\r\n  // Values that will get reset everytime we nativagate to a new page\r\n  static getResetValues()\r\n  {\r\n    return { blockedIframes: [], cryptoBlockData: null, tabDomainTrusted: false };\r\n  }\r\n\r\n  static getDefaultValues()\r\n  {\r\n    return TabData.getResetValues();\r\n  }\r\n\r\n  reset(tabId)\r\n  {\r\n    this.update(tabId, TabData.getResetValues());\r\n  }\r\n\r\n  get(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    return cache[tabId] || TabData.getDefaultValues();\r\n  }\r\n\r\n  set(tabId, newTabData)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    cache[tabId] = newTabData;\r\n    BackgroundGlobals.cacheStore.set(LocalStorageVariables.CACHE_TAB_DATA.name, cache);\r\n  }\r\n\r\n  delete(tabId)\r\n  {\r\n    const cache = BackgroundGlobals.cacheStore.get(LocalStorageVariables.CACHE_TAB_DATA.name, {});\r\n    delete (cache[tabId]);\r\n  }\r\n\r\n  update(tabId, newTabData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, ...newTabData });\r\n  }\r\n\r\n  setTabBlockPageData(tabId, blockPageData)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    this.set(tabId, { ...currentTabData, blockPageData });\r\n  }\r\n\r\n  addBlockedFrame(tabId, value)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes.push(value);\r\n  }\r\n\r\n  getBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    return currentTabData.blockedIframes;\r\n  }\r\n\r\n  resetBlockedFrames(tabId)\r\n  {\r\n    const currentTabData = this.get(tabId);\r\n    currentTabData.blockedIframes = [];\r\n  }\r\n}\r\n","/**\r\n * The different webpage/url states that exists within WebAdvisor\r\n */\r\nexport const BlockState = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  TYPOSQUATTING: 5,\r\n  PHISHING: 6,\r\n  * [Symbol.iterator]() // Create an iterable that returns all the \"bad\" states\r\n  {\r\n    for (const prop of Object.keys(this))\r\n    {\r\n      if (prop !== 'GREEN' && prop !== 'UNKNOWN')\r\n      {\r\n        yield this[prop];\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * The browsers that WebAdvisor supports\r\n */\r\nexport const BrowserType = {\r\n  UNKNOWN: -1,\r\n  FIREFOX: 1,\r\n  CHROME: 2,\r\n  EDGE: 3\r\n};\r\n\r\n/**\r\n * The default settings for extension. These settings are overrided at build time\r\n */\r\nexport const BuildSettings = {\r\n  /* eslint-disable no-undef */\r\n  BROWSER_TYPE: WEBPACK_BROWSER_TYPE,\r\n  DEBUG_MODE: WEBPACK_DEBUG_MODE,\r\n  EXTENSION_VERSION: WEBPACK_EXTN_VERSION,\r\n  LOG_LEVEL: WEBPACK_LOG_LEVEL,\r\n  ENGINES_VERSION: WEBPACK_ENGINES_VERSION,\r\n  YEAR: WEBPACK_YEAR,\r\n  /* eslint-enable no-undef */\r\n};\r\n\r\n/**\r\n * Values to let the native know which Block Page type was shown\r\n */\r\nexport const WPSBlockPageType = {\r\n  Red: 1,\r\n  Yellow: 2,\r\n  Phishing: 3,\r\n  Typoquatting: 4,\r\n  iFrame: 5,\r\n  Crypto: 6,\r\n};\r\n\r\n/**\r\n * Every possible color status shown on WebAdvisor\r\n */\r\nexport const Color = {\r\n  GREEN: 0,\r\n  YELLOW: 1,\r\n  RED: 2,\r\n  UNKNOWN: 3,\r\n  HACKERSAFE: 4, // deprecated.\r\n  DISABLED: 5,\r\n};\r\n\r\n/**\r\n * The different commands that can be executed in the application\r\n */\r\nexport const ExecuteCommands = {\r\n  RAISE_NEW_TAB_EVENT: 3,\r\n  UPDATE_CACHE_STATS: 4 // deprecated.\r\n};\r\n\r\n/**\r\n * The corresponding color values for browser action icon\r\n */\r\nexport const BrowseActionColors = {\r\n  [Color.GREEN]: 'GREEN',\r\n  [Color.YELLOW]: 'YELLOW',\r\n  [Color.RED]: 'RED',\r\n  [Color.UNKNOWN]: 'WHITE',\r\n  [Color.DISABLED]: 'DISABLED',\r\n};\r\n\r\n/**\r\n * The score value ranges that determine the outcome of a webpage's safety\r\n */\r\nexport const Score = {\r\n  CLEAN: 70, // Green\r\n  UNVERIFIED: 30, // Yellow\r\n  DIRTY: 1, // Red\r\n}; // Default Grey (0)\r\n\r\n/**\r\n * Constructs a new object with the object key and values swapped.\r\n * @param   {Object} original - The original object to swap the key and values\r\n * @returns {Object} - The new constructed object with the key and values swapped\r\n */\r\nexport const swapObjectPropertyAndValues = (original) =>\r\n{\r\n  const swapped = {};\r\n\r\n  Object.keys(original).forEach((prop) =>\r\n  {\r\n    swapped[original[prop]] = prop;\r\n  });\r\n\r\n  return swapped;\r\n};\r\n\r\nexport const SEARCH_EXTENSION_DOWNLOAD_URLS = {\r\n  FF: 'https://sadownload.mcafee.com/products/SA/Win/xpi/searchextension/searchextension.xpi',\r\n};\r\n\r\nexport const SEARCH_EXTENSION_STORE_URLS = {\r\n  CH: 'https://chrome.google.com/webstore/detail/mcafee%C2%AE-secure-search/enppghjcblldgigemljohkgpcompnjgh',\r\n  ED: 'https://microsoftedge.microsoft.com/addons/detail/dbghilognjpbmkdcpjgodiieiflmlaeb'\r\n};\r\n\r\n// generate a range of numbers for using in WhitelistedKeys' codes\r\nexport const KEY_CODES_RANGE = (start, end) => Array.from(Array(end + 1).keys()).slice(start);\r\n\r\nexport const SEARCH_URL = {\r\n  YAHOO: 'https://search.yahoo.com/search?fr=mcafee&type=C040US0D19700101&p=',\r\n  BING: 'https://www.bing.com/search?partnercode=MC99&q=',\r\n};\r\n","export const BackgroundConstants = {\r\n  MAX_CACHE_RECORDS: 1000,\r\n  MAX_RESERVED_CALLBACK_ID: 5,\r\n  PHISHING_CATEGORY: 'ph',\r\n  SITE_ADVISOR_URL: 'www.siteadvisor.com/',\r\n  GTI_SERVER: 'https://webadvisorc.rest.gti.mcafee.com/1',\r\n  TYPOSQUATTING_SERVER: 'https://mip.api.mcafeewebadvisor.com/v1/typosquatting?',\r\n  ENGINE_VERSION_URL: 'https://sadownload.mcafee.com/products/SA/Win/extensions/engines/update.json',\r\n  HTI_SERVER: 'https://threat.api.mcafee.com/',\r\n};\r\n\r\n// Add 'watlab1.mcafee.int' to the list for testing.\r\nexport const TrustedDomains = new Set([\r\n  'www.mcafee.com',\r\n]);\r\n\r\nexport const CryptoBlacklist = [\r\n  'wss://*.gasolina.ml/*',\r\n  '*://kissdoujin.com/Content/js/c-hive.js*',\r\n  'wss://*.sen-to-zdrowie.ml/*',\r\n  '*://cookiescript.info/libs/*',\r\n  '*://rocks.io/assets/*',\r\n  '*://coin-have.com/c/*',\r\n  '*://coinnebula.com/lib/*',\r\n  'wss://*.coin-have.com/',\r\n  'ws://digger.cryptobara.com/*',\r\n  'ws://*.webminepool.tk/*',\r\n  '*://*.lewd.ninja/static/m.js*',\r\n  '*://tokyodrift.ga/dropyoulike/a-o/*',\r\n  '*://*.2giga.link/hive/lib/*',\r\n  '*://papoto.com/lib/*',\r\n  '*://load.jsecoin.com/*',\r\n  'ws://*.1q2w3.fun/*',\r\n  '*://*/*plugins/ajcryptominer/assets/*',\r\n  '*://monerominer.rocks/miner.php*',\r\n  '*://minemytraffic.com/*',\r\n  '*://*.monerise.com/core/*',\r\n  '*://*.cookiescript.info/libs/*',\r\n  'ws://hive.tubetitties.com/*',\r\n  'wss://*.freecontent.racing/*',\r\n  'wss://*.hodling.faith/*',\r\n  'ws://gtg02.bestsecurepractice.com/proxy',\r\n  '*://cryptoloot.pro/lib/*',\r\n  '*://lmodr.biz/*',\r\n  '*://*.webminepool.com/lib/base.js',\r\n  'ws://*.sen-to-zdrowie.ml/*',\r\n  'ws://*.morningdigit.com/*',\r\n  '*://mine.nahnoji.cz/*',\r\n  '*://*.minescripts.info/*',\r\n  '*://jsecoin.com/server*',\r\n  '*://coinhive.com/lib*',\r\n  'wss://*.webminepool.tk/*',\r\n  'ws://*.monerise.com/proxy/*',\r\n  '*://kisshentai.net/Content/js/c-hive.js*',\r\n  '*://mataharirama.xyz/*',\r\n  '*://*.coinpirate.cf/*',\r\n  'ws://*.playerassets.info/*',\r\n  'wss://*.1q2w3.fun/*',\r\n  '*://*.1q2w3.fun/*',\r\n  '*://anime.reactor.cc/js/ch/cryptonight.wasm*',\r\n  '*://webmine.cz/miner*',\r\n  'wss://ws.l33tsite.info/*',\r\n  '*://coinhive.com/captcha*',\r\n  'wss://www.mutuza.win/proxy',\r\n  '*://*.morningdigit.com/*',\r\n  'ws://*.host.d-ns.ga/*',\r\n  '*://*.doubleclick5.xyz/*',\r\n  '*://miner.pr0gramm.com/xmr.min.js*',\r\n  '*://*.freecontent.bid/*',\r\n  'ws://lewd.ninja/comics/*',\r\n  'wss://*.monerise.com:9333/proxy/*',\r\n  '*://*.webminepool.com/lib/captcha.js',\r\n  '*://coinerra.com/lib/*',\r\n  '*://*.playerassets.info/*',\r\n  'wss://*.webmine.pro/*',\r\n  'wss://lewd.ninja/comics/*',\r\n  '*://*.doubleclick1.xyz/*',\r\n  'ws://*.freecontent.racing/*',\r\n  '*://*.googleanalytcs.com/*',\r\n  'wss://*.coinnebula.com/proxy*',\r\n  'ws://*.monerise.com:9333/proxy/*',\r\n  'ws://*.freecontent.loan/*',\r\n  '*://party-nngvitbizn.now.sh/*',\r\n  'wss://api.l33tsite.info/*',\r\n  '*://coinlab.biz/lib/coinlab.js*',\r\n  'wss://*.monerise.com/proxy/*',\r\n  'ws://www.mutuza.win/proxy',\r\n  '*://jscdndel.com/content/vidm.min.js*',\r\n  '*://listat.biz/*',\r\n  '*://minecrunch.co/web/*',\r\n  'ws://*.chainblock.science/*',\r\n  '*://baiduccdn1.com/lib/*',\r\n  '*://*.mutuza.win/worker.js',\r\n  '*://*.load.jsecoin.com/*',\r\n  '*://ppoi.org/lib/*',\r\n  'wss://*.chainblock.science/*',\r\n  'wss://*.crypto-loot.com/proxy*',\r\n  'wss://gtg02.bestsecurepractice.com/proxy',\r\n  'wss://*.coinhive.com/proxy*',\r\n  '*://coin-hive.com/captcha*',\r\n  '*://jsccnn.com/content/vidm.min.js*',\r\n  '*://monerominer.rocks/scripts/miner.js*',\r\n  '*://*.jsecoin.com/server*',\r\n  '*://server.jsecoin.com/*',\r\n  'wss://*.coin-hive.com/proxy*',\r\n  '*://*.doubleclick4.xyz/*',\r\n  '*://miner.cryptobara.com/client/*',\r\n  '*://*.rocks.io/assets/*',\r\n  '*://*.ppoi.org/lib/*',\r\n  '*://you.tubetitties.com/worker.js*',\r\n  'wss://*.googleanalytcs.com/*',\r\n  'wss://hive.tubetitties.com/*',\r\n  '*://static.reasedoper.pw/*',\r\n  '*://*.ppoi.org/token/*',\r\n  'ws://*.webmine.pro/*',\r\n  '*://you.tubetitties.com/hash.wasm*',\r\n  '*://*.doubleclick3.xyz/*',\r\n  '*://*.turnsocial.com/m.js',\r\n  'ws://*.hodling.faith/*',\r\n  'wss://*.morningdigit.com/*',\r\n  '*://*.ad-miner.com/lib/*',\r\n  'wss://*.2giga.link/wproxy*',\r\n  'ws://*.googleanalytcs.com/*',\r\n  '*://*.doubleclick6.xyz/*',\r\n  'ws://turnsocial.now.sh/*',\r\n  '*://cdn.cloudcoins.co/javascript/cloudcoins.min.js*',\r\n  '*://joyreactor.cc/ws/ch/*',\r\n  '*://minero.pw/miner.min.js*',\r\n  '*://*.webmine.pro/*',\r\n  '*://punchsub.net/chm.js',\r\n  'wss://mine.nahnoji.cz/*',\r\n  'wss://mine.torrent.pw/*',\r\n  '*://*.mutuza.win/lib/*',\r\n  '*://*.kickass.cd/power2/m.js',\r\n  'ws://*.cpu2cash.link/*',\r\n  '*://*.server.jsecoin.com/*',\r\n  '*://*.mutuza.win/processor.js',\r\n  'wss://turnsocial.now.sh/*',\r\n  '*://kiwifarms.net/js/Jawsh/xmr/xmr.min.js*',\r\n  '*://*.rocks.io/proxy*',\r\n  '*://crypto-loot.com/lib*',\r\n  '*://*.chmproxy.bid/lib/*',\r\n  'ws://*.gasolina.ml/*',\r\n  '*://*.stackpathdns.com/assets/javascript/cr.js',\r\n  '*://*.coinblind.com/lib/*',\r\n  '*://miner.pr0gramm.com/pm.min.js*',\r\n  '*://*.bewhoyouare.gq/*',\r\n  'wss://*.zlx.com.br/proxy*',\r\n  '*://a-o.ninja/apk-AO/kingofthenorth/*',\r\n  '*://ad-miner.com/lib/*',\r\n  '*://*.webminepool.com/api/*',\r\n  '*://*.cpu2cash.link/*',\r\n  '*://*.hemnes.win/*',\r\n  'wss://*.cpu2cash.link/*',\r\n  'ws://*.coinpirate.cf/*',\r\n  'ws://ws.l33tsite.info/*',\r\n  '*://digger.cryptobara.com/client/*',\r\n  '*://kickass.cd/m.js*',\r\n  'ws://*.zlx.com.br/proxy*',\r\n  '*://*.doubleclick2.xyz/*',\r\n  '*://*.amazonaws.com/doubleclick13/*',\r\n  'wss://*.freecontent.loan/*',\r\n  '*://*.host.d-ns.ga/*',\r\n  '*://*.candid.zone/youtube.com/*',\r\n  'ws://api.l33tsite.info/*',\r\n  '*://gtg2.bestsecurepractice.com/lib/*',\r\n  'wss://*.host.d-ns.ga/*',\r\n  '*://coin-hive.com/lib*',\r\n  'ws://mine.nahnoji.cz/*',\r\n  'wss://*.playerassets.info/*',\r\n  '*://*.afminer.com/code/*',\r\n  'wss://*.coinpirate.cf/*',\r\n  '*://cookiescriptcdn.pro/libs/*',\r\n  '*://*.goredirect.party/assets/*',\r\n  '*://*.ZLX.COM.BR/assets/min.js*',\r\n  '*://*.ZLX.COM.BR/assets/playermon.js*',\r\n  '*://p.hemnes.win/lib/*',\r\n  '*://gtg02.bestsecurepractice.com/proxy2/*',\r\n  '*://gtg02.bestsecurepractice.com/meri.js',\r\n  '*://gtg02.bestsecurepractice.com/lv.js',\r\n  '*://gtg02.bestsecurepractice.com/worker.js',\r\n  '*://gtg02.bestsecurepractice.com/processor.js',\r\n  '*://gtg02.bestsecurepractice.com/demo.html',\r\n  '*://*.turnsocial.com/c.wasm*',\r\n  '*://*.turnsocial.com/m.js*',\r\n  '*://cdn.minescripts.info/c/*',\r\n  '*://tokyodrift.ga/dropyoulike/backup/c.wasm*',\r\n  '*://punchsub.net/chm2.js',\r\n  '*://*.kickass.cd/webmr4.js',\r\n  '*://*.kickass.cd/m.js',\r\n  'wss://*.authedmine.com/proxy'\r\n];\r\n\r\nexport const RatBlacklist = [\r\n  {\r\n    domain: 'www.beamyourscreen.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.connectwise.com',\r\n    urls: [\r\n      'www.connectwise.com/platform/unified-management/control'\r\n    ],\r\n  },\r\n  {\r\n    domain: 'get.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'fastsupport.gotoassist.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.join.me',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.mikogo.de',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'www.securelink.com',\r\n    urls: [],\r\n  },\r\n  {\r\n    domain: 'join.zoho.com',\r\n    urls: [],\r\n  }\r\n];\r\n\r\nexport const ApsUrlList = {\r\n  shopping:\r\n  {\r\n    'www.amazon.com':\r\n    {\r\n      paths: ['buy/payselect/handlers', 'buy/addressselect/handlers']\r\n    }\r\n  },\r\n  email:\r\n  {\r\n    'mail.google.com/mail':\r\n    {\r\n      selector: 'table[role=presentation] > tr div[data-message-id] a'\r\n    },\r\n    'outlook.live.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'outlook.office365.com/mail':\r\n    {\r\n      selector: 'div[role=complementary][aria-label] a'\r\n    },\r\n    'mail.yahoo.com':\r\n    {\r\n      selector: 'div[role=main] ul li a'\r\n    },\r\n  }\r\n};\r\n","import { BrowserType, BuildSettings } from '@extension/common/constants';\r\n\r\nclass NativeSettingsPreprocess\r\n{\r\n  static PreprocessSecureSearchRegEx(value)\r\n  {\r\n    return value.trim().split('\\n');\r\n  }\r\n\r\n  static getBrowserSuffix()\r\n  {\r\n    const BROWSER_SUFFIX = {\r\n      CH: '_ch',\r\n      FF: '_ff',\r\n      IE: '_ie',\r\n      EDGE: '_ed',\r\n    };\r\n\r\n    const { CH, FF, EDGE } = BROWSER_SUFFIX;\r\n    const suffixBrowserMap = {};\r\n    suffixBrowserMap[BrowserType.EDGE] = EDGE;\r\n    suffixBrowserMap[BrowserType.FIREFOX] = FF;\r\n    suffixBrowserMap[BrowserType.CHROME] = CH;\r\n\r\n    return suffixBrowserMap[BuildSettings.BROWSER_TYPE];\r\n  }\r\n}\r\n\r\nexport const SCOPE = {\r\n  SYSTEM: 0,\r\n  USER: 1,\r\n};\r\nconst { SYSTEM, USER } = SCOPE;\r\n\r\nexport const SETTINGS_TYPE = {\r\n  NONE: 0,\r\n  INT: 1,\r\n  INT64: 2,\r\n  BOOL: 3,\r\n  STRING: 4,\r\n};\r\n\r\nexport const NativeConstants = {\r\n  WEBBOOST_AUTO_PLAY_NOTIFICATION: 'AutoPlayNotificationRequired',\r\n  WEBBOOST_UPSELL_DISABLED: 'WBUpsellDisabled', // TODO: re-introduce for WB Upsell\r\n  USE_NATIVE_LOGGER: 'UseNativeLogger',\r\n};\r\n\r\n// For retrieving native settings just change the one json object below. Access the nativeSettings value as eg BkGlobals.nativeSettings.AFF_ID.value\r\nconst _browser = NativeSettingsPreprocess.getBrowserSuffix();\r\nexport const NativeSettings = {\r\n  // Dev\r\n  DEV_MODE: { scope: SYSTEM, name: 'dev_mode', value: false },\r\n\r\n  // Product\r\n  AFF_ID: { scope: SYSTEM, name: '*Affid', value: 0 },\r\n  BINARY_VERSION: { scope: SYSTEM, name: 'version', value: null },\r\n  EXTENSION_VERSION_CH: { scope: SYSTEM, name: 'ChromeExtVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_FF: { scope: SYSTEM, name: '*FirefoxXPIVersion', value: '', writeOnly: true },\r\n  EXTENSION_VERSION_ED: { scope: SYSTEM, name: 'EdgeExtVersion', value: '', writeOnly: true },\r\n\r\n  // Machine\r\n  BROWSER_TYPE: { scope: SYSTEM, name: 'browsertype', value: '', writeOnly: true },\r\n  USER_AGENT: { scope: SYSTEM, name: 'useragent', value: '', writeOnly: true },\r\n\r\n  // Secure Search\r\n  SUGGESTION_URL: { scope: SYSTEM, name: 'suggestion_url', value: '' },\r\n  SCRIPT_GENERATED_DEFAULT_SS_URL: { scope: USER, name: `SCRIPT_GENERATED_DEFAULT_SS_URL${_browser}`, value: '' },\r\n  SECURE_SEARCH_REGEXES: { scope: USER, name: 'SECURE_SEARCH_REGEXES', value: '', preprocess: NativeSettingsPreprocess.PreprocessSecureSearchRegEx },\r\n  SHOW_SEARCH_SETTINGS: { scope: SYSTEM, name: '*ShowSearchSettings', value: true },\r\n  SECURE_SEARCH_TOAST_STAMP: { scope: USER, name: `*SSDateStampShowedToast${_browser}`, value: 0 },\r\n  SECURE_SEARCH_ANNOTATION_ONLY: { scope: SYSTEM, name: '*OnlyShowAnnotationsOnSecureSearch', value: true },\r\n  SECURE_SEARCH_SHOW_ICONS: { scope: USER, name: '*Icons', value: true },\r\n  SECURE_SEARCH_CHOICE: { scope: USER, name: `*SSToastChoice${_browser}`, value: false },\r\n  SS_DEF: { scope: SYSTEM, name: `*SS_DEF${_browser}`, value: 0 },\r\n  ANNOTATIONS_CHOICE_EXPLICIT: { scope: SYSTEM, name: `*AnnotationsChoiceExplicit${_browser}`, value: false },\r\n  CURRENT_SAO_IN_EXTENSION: { scope: USER, name: `*CurrentSAOInExtension${_browser}`, value: '' },\r\n\r\n  // Firefox Toast\r\n  FF_EXTENSION_LAST_TOAST_TIME: { scope: USER, name: 'ff_extension_last_toast_time', value: 0, writeOnly: true },\r\n  FF_EXTENSION_TOAST_COUNT: { scope: USER, name: 'ff_extension_toast_count', value: 0, writeOnly: true },\r\n\r\n  // Checklist Settings\r\n  CHECKLIST_START_INGORE_DATE_AV: { scope: SYSTEM, name: 'startIgnoreDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_START_IGNORE_DATE_FW: { scope: SYSTEM, name: 'startIgnoreDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_IGNORE_DURACTION: { scope: SYSTEM, name: 'ignoreDuration', value: '14', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_AV: { scope: SYSTEM, name: 'fixGracePeriodStartDateAV', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_FW: { scope: SYSTEM, name: 'fixGracePeriodStartDateFW', value: '', writeOnly: true },\r\n  CHECKLIST_GRACE_PERIOD_DURATION: { scope: SYSTEM, name: 'fixGracePeriodDuration', value: '24', writeOnly: true },\r\n\r\n  // Crypto\r\n  CRYPTOJACKING_DISABLED: { scope: SYSTEM, name: 'CryptojackingDisabled', value: false },\r\n\r\n  // SMA\r\n  SMA_USER_TOGGLE: { scope: SYSTEM, name: `sma_user_toggle${_browser}`, value: false, writeOnly: true },\r\n  SMA_ANNOTATION_OPTIONS: { scope: SYSTEM, name: `sma_annotation_options${_browser}`, value: 0, writeOnly: true },\r\n\r\n  // Stats\r\n  PAGES_SCANNED: { scope: SYSTEM, name: '*CounterPagesScanned', value: 0 },\r\n  PAGES_BLOCKED: { scope: SYSTEM, name: '*CounterPagesBlocked', value: 0 },\r\n  DOWNLOADS_SCANNED: { scope: SYSTEM, name: '*CounterDownloadsScanned', value: 0 },\r\n  DOWNLOADS_BLOCKED: { scope: SYSTEM, name: '*CounterDownloadsBlocked', value: 0 },\r\n  CRYPTO_BLOCKED: { scope: SYSTEM, name: '*CounterCryptoJackingBlocked', value: 0 },\r\n\r\n  // Native Whitelist\r\n  BLOCKPAGE_WHITELIST: { scope: USER, name: '*WhiteList', value: '' },\r\n  TS_WHITELIST: { scope: USER, name: '*TListWhiteList', value: '' },\r\n\r\n  // GTI\r\n  CSP_ID_SETTING: { scope: SYSTEM, name: 'CSPIdValue', value: '__not_available__' },\r\n\r\n  // Uninstall URL\r\n  UNINSTALL_SURVEY_ENABLED: { scope: SYSTEM, name: 'uninstall_survey_enabled', value: false },\r\n  UNINSTALL_SURVEY_URL: { scope: SYSTEM, name: 'uninstall_survey_url', value: '' },\r\n\r\n  // RAT Detection\r\n  RAT_DETECTION_ENABLED: { scope: SYSTEM, name: 'rat_detection_enabled', value: true },\r\n\r\n  // IDPS - enum type (0 = feature turned off | 1 = feature partially on, only for sending telemetry | 2 = feature turned on completely)\r\n  IDPS_FEATURE_ENABLED: { scope: SYSTEM, name: 'idps_feature_enabled', value: 0 },\r\n\r\n  // Advanced Protection Signal\r\n  APS_COHORT: { scope: SYSTEM, name: 'aps_cohort', value: 0 },\r\n  APS_TOGGLE_SETTING: { scope: SYSTEM, name: 'aps_toggle_setting', value: true },\r\n\r\n  // Alternative triggers\r\n  ALT_TRIGGER: { scope: SYSTEM, name: 'alt_triggers_cohort', value: 0 },\r\n\r\n  // Form detection optimization feature\r\n  IFRAME_FORM_CHECK_ENABLED: { scope: SYSTEM, name: 'iframe_form_check_enabled', value: true },\r\n\r\n  ANNOTATION_JOURNEY_COHORT: { scope: SYSTEM, name: `annotation_journey_cohort${_browser}`, value: 0 },\r\n  ANNOTATION_JOURNEY_TOAST: { scope: USER, name: `aj_toast${_browser}`, value: null },\r\n\r\n  // The throttle percentage for extension\r\n  HTI_THROTTLE: { scope: SYSTEM, name: 'hti_throttle', value: 0 },\r\n  MTI_CLIENT_ID: { scope: SYSTEM, name: 'gti_client_id', value: '' },\r\n};\r\n","// Background\r\n\r\nimport TabData from '@extension/common/tab_data';\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { BackgroundConstants, CryptoBlacklist, TrustedDomains, RatBlacklist, ApsUrlList } from '@extension/common/background_constants';\r\nimport { NativeSettings } from '@extension/background/dispatchers/native/native_settings';\r\n\r\nexport const BackgroundGlobals = {\r\n  // This flag is set to false by automation to avoid isTrusted check in shadowDOM.\r\n  // Since WA use custom shadowDOM access in automation without using Selenium, isTrusted is false\r\n  // hence for tests to succeed automation will set this flag to false before running tests.\r\n  isTrustCheckRequired: true,\r\n  ExtensionTelemetryUrl: null,\r\n  scheduleManager: null,\r\n  schedules: null,\r\n  isNativeConnected: true,\r\n  telemetryEngine: null,\r\n  postInstallationPage: 'https://www.mcafee.com/consumer/v/wa-how.html',\r\n  listenerManager: null,\r\n  firefoxInternalUUID: '',\r\n  shadowMode: 'closed',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  cacheStore: null,\r\n  ffViewports: null,\r\n  garbageCollector: null,\r\n  typoCache: null,\r\n  logger: null,\r\n  loglevel: null,\r\n  messageDispatcher: null, // The message handler for native messaging\r\n  port: null,\r\n  tabData: new TabData(), // Information about all the tab\r\n  tabIdToLastClickTime: new Map(),\r\n  useNativeLogger: false,\r\n  wasm: null, // webassembly module\r\n  userAgentInBase64: null,\r\n  typoSquattingServer: BackgroundConstants.TYPOSQUATTING_SERVER,\r\n  tldParser: null,\r\n  cryptoBlacklist: CryptoBlacklist,\r\n  trustedDomains: TrustedDomains,\r\n  nativeSettings: NativeSettings,\r\n  searchSuggest: null,\r\n  ratBlacklist: RatBlacklist,\r\n  updatedByNative: false, // flag indicate whether these global variables have been updated by native\r\n\r\n  // WSS\r\n  wssMessageDispatcher: null, // The message handler for WSS native messaging\r\n  wssNativeClient: null,\r\n  WSS_INSTALLED: false,\r\n  isWPSInstalled: false,\r\n\r\n  // Engines JSON\r\n  searchEngines: null,\r\n  enginesVersionUrl: BackgroundConstants.ENGINE_VERSION_URL,\r\n  engineCheckInterval: 1000 * 60 * 60 * 24,\r\n  ENGINES_VERSION: BuildSettings.ENGINES_VERSION,\r\n\r\n  // Feature flags\r\n  AUTO_PLAY_NOTIFICATION_ENABLED: false,\r\n\r\n  // Automation specific flags\r\n  ALLOW_LOCALHOST: false,\r\n\r\n  // Form detection\r\n  IDPS_AUTH_URL: 'https://csptoken.ccs.mcafee.com/auth/token',\r\n  IDPS_BREACH_COUNT_URL: 'https://identity.unifiedapis.mcafee.com/breach/v1/BreachCount',\r\n  IDPS_CSP_CLIENT_ID: null,\r\n  IDPS_IS_ENTITLED: false,\r\n  IDPS_PROVISION_ID: null,\r\n  IDPS_LOGIN_DOMAIN: 'https://protection.mcafee.com',\r\n\r\n  // Unified Auth\r\n  UA_CLIENT: null,\r\n\r\n  // Typosquatting cache variables\r\n  TYPOSQUATTING_MAX_CACHE: 100,\r\n  TYPOSQUATTING_EXPIRY: 1000 * 60 * 60 * 24 * 30, // 1 month\r\n\r\n  // AMWA-11850 CPSIR-83 - Secret code that is appended to image requests to not allow external access to image files\r\n  WA_IMAGE_SECRET: null,\r\n\r\n  // Advanced Protection Signal URLs\r\n  apsUrlList: ApsUrlList,\r\n  apsAnimationTimeout: 5000,\r\n\r\n  downloadUrls: new Set(),\r\n\r\n  // Small Business Integration\r\n  wpsRequestedSettings: new Set(['SMA_USER_TOGGLE', 'SEARCH_ANNOTATION_OPTION', 'SMA_ANNOTATION_OPTIONS']),\r\n\r\n  // Permitted content types . These types are not blocked by URL but passed to native for download scanning.\r\n  permittedContentTypes: ['application/vnd.microsoft.portable-executable',\r\n    'application/octet-stream',\r\n    'application/x-msdos-program',\r\n    'application/x-msdownload',\r\n    'binary/octet-stream',\r\n    'application/x-msdownload'\r\n  ],\r\n\r\n  // supported extenal website connections\r\n  SUPPORTED_WEBSITE_LIST: [\r\n    'protection.mcafee.com',\r\n    'protection-dev-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-dev2-roadhouse-int.dvqa.mcafee.com',\r\n    'protection-qa-roadhouse-int.dvqa.mcafee.com',\r\n  ],\r\n\r\n  // per user use either GTI or HTI. true means set HTI while installing and if false means set GTI\r\n  isHTI: false,\r\n  mtiRequestor: null,\r\n  gtiServer: BackgroundConstants.GTI_SERVER,\r\n  htiServer: BackgroundConstants.HTI_SERVER,\r\n  cspClientId: 'e87c73de-b45e-4427-b590-5124401795b6',\r\n};\r\n","export const ForegroundGlobals = {\r\n  loglevel: null, // specify the current recorded loglevel\r\n};\r\n","// Background\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\n// Common\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n// Foreground\r\nimport { ForegroundGlobals } from '@extension/ui/foreground/foreground_globals';\r\n\r\n/**\r\n * The different log levels considered when detecting / reporting errors in WebAdvisor\r\n * Note that a higher level means that more logs will be printed. (ie, level 3 will print level 2 and 1)\r\n */\r\nexport const LogLevels = {\r\n  NONE: 0,\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * The different log types\r\n */\r\nexport const LogTypes = {\r\n  INFO: 1,\r\n  ERROR: 2,\r\n  WARN: 3,\r\n  DEBUG: 4,\r\n};\r\n\r\n/**\r\n * Process type to distinguish which process called the logger\r\n */\r\nexport const ProcessTypes = {\r\n  BACKGROUND: 'BACKGROUND',\r\n  CONTENT: 'CONTENT',\r\n  TELEMETRY: 'TELEMETRY',\r\n  SMART_NATIVE_CLIENT: 'SMART_NATIVE_CLIENT'\r\n};\r\n\r\nexport const ProcessStyleMap = {\r\n  DEFAULT: 'color: #000000; font-weight: normal; font-style:normal; background: #FFFFFF;',\r\n  BACKGROUND: 'color: #8D0DBA; font-weight: bold; background: #FFFFFF;',\r\n  CONTENT: 'color: #F54A26; font-weight: bold; background: #FFFFFF;',\r\n  TELEMETRY: 'color: #147831; font-weight: bold; background: #FFFFFF;',\r\n  SMART_NATIVE_CLIENT: 'color: #004d7c; font-weight: bold; background: #FFFFFF;'\r\n};\r\n\r\n// *****************************************************************************\r\n// Set \"ExtensionLogging\" = 1 in registry at the same place we set LogLevel\r\n// will turn on native logging. This will log everything including INFO and ERR.\r\n// *****************************************************************************\r\n// *****************************************************************************\r\n// Type \"chrome.storage.local.set({'EXTENSION_LOGGING': 3});\" into the background\r\n// page console to forcefully turn on or turn off the logs inside extension\r\n// chrome = chrome/browser, # = the log level from 0 to 4\r\n// *****************************************************************************\r\nexport class Logger\r\n{\r\n  static processLog(message, logType, process = undefined)\r\n  {\r\n    if (logType === LogLevels.NONE)\r\n    {\r\n      return;\r\n    }\r\n\r\n    // verify that process is a valid option, else set it undefined\r\n    if (process && !Object.values(ProcessTypes).includes(process))\r\n    {\r\n      process = undefined;\r\n    }\r\n\r\n    // Checking whether native logging is enabled or not.\r\n    chrome.storage.local.get(LocalStorageVariables.USE_NATIVE_LOGGER.name, (useNativeLogger) =>\r\n    {\r\n      if (useNativeLogger[LocalStorageVariables.USE_NATIVE_LOGGER.name] === true)\r\n      {\r\n        if (!process)\r\n        {\r\n          // Check if the current code is being ran in the background or foreground\r\n          process = isBackground() ? ProcessTypes.BACKGROUND : ProcessTypes.CONTENT;\r\n        }\r\n        const details = {\r\n          processType: process,\r\n          browserType: BuildSettings.BROWSER_TYPE,\r\n          extensionType: 'wa',\r\n          logType,\r\n          message\r\n        };\r\n\r\n        BackgroundGlobals.messageDispatcher && BackgroundGlobals.messageDispatcher.logger(details);\r\n      }\r\n    });\r\n\r\n    // log within extension\r\n    consoleLog(message, logType, process);\r\n  }\r\n\r\n  /**\r\n   * Set the native Logging status\r\n   * @param {*} state\r\n   */\r\n  static setNativeLogging(state)\r\n  {\r\n    BackgroundGlobals.useNativeLogger = state;\r\n    chrome.storage.local.set(LocalStorageVariables.USE_NATIVE_LOGGER, state);\r\n  }\r\n\r\n  // Need to include processType for telemetry logging only.\r\n  static log(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.INFO, processType);\r\n  }\r\n\r\n  static error(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.ERROR, processType);\r\n  }\r\n\r\n  static warn(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.WARN, processType);\r\n  }\r\n\r\n  static debug(message, processType = undefined)\r\n  {\r\n    Logger.processLog(message, LogLevels.DEBUG, processType);\r\n  }\r\n}\r\n\r\nconst consoleLog = async (message, logType, process = undefined) =>\r\n{\r\n  const logLevel = await getLogLevel();\r\n  if (logLevel === LogLevels.NONE)\r\n  {\r\n    return;\r\n  }\r\n\r\n  const processType = process || (isBackground() ? ProcessTypes.BACKGROUND\r\n    : ProcessTypes.CONTENT);\r\n  const nowDate = new Date();\r\n  const logMessage = `%c[${processType} ${nowDate.toLocaleString([], { hour: '2-digit', minute: '2-digit', hour12: true })}]: %c${message}`;\r\n\r\n  const styleRegular = ProcessStyleMap.DEFAULT;\r\n  let hightlight = ProcessStyleMap[processType];\r\n\r\n  if (!hightlight)\r\n  {\r\n    hightlight = styleRegular;\r\n  }\r\n\r\n  if (logLevel >= LogLevels.ERROR && logType === LogTypes.ERROR)\r\n  {\r\n    console.error(logMessage, styleRegular, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.INFO && logType === LogTypes.INFO)\r\n  {\r\n    console.log(logMessage, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.WARN && logType === LogTypes.WARN)\r\n  {\r\n    const uniqueHighlight = 'color: #FFA500; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cWARN - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n\r\n  if (logLevel >= LogLevels.DEBUG && logType === LogTypes.DEBUG)\r\n  {\r\n    const uniqueHighlight = 'color: #FF33D7; font-family: sans-serif; font-weight: bolder; text-shadow: #000 1px 1px;';\r\n    console.log(`%cDEBUG - ${logMessage}`, uniqueHighlight, hightlight, styleRegular); // eslint-disable-line no-console\r\n  }\r\n};\r\n\r\nconst isBackground = () =>\r\n{\r\n  const isBackground = BackgroundGlobals.cacheStore !== null;\r\n  return isBackground;\r\n};\r\n\r\nconst getLogLevel = async () =>\r\n{\r\n  // Check if the current code is being ran in the background or foreground\r\n  const context = isBackground() ? BackgroundGlobals : ForegroundGlobals;\r\n\r\n  // get loglevel from the current context\r\n  let level = context.loglevel;\r\n\r\n  // if current context loglevel is null (aka not set, we will retrieve the level from storage)\r\n  if (context.loglevel === null)\r\n  {\r\n    level = await getStorageLogLevelAsync();\r\n    context.loglevel = (level === null || level === undefined) ? BuildSettings.LOG_LEVEL : level;\r\n  }\r\n\r\n  if (Number.isInteger(level) && Object.values(LogLevels).includes(level))\r\n  {\r\n    return level;\r\n  }\r\n\r\n  return BuildSettings.LOG_LEVEL;\r\n};\r\n\r\nconst getStorageLogLevelAsync = async () =>\r\n{\r\n  const storageLocalGetAsync = new Promise((resolve) => chrome.storage.local.get(LocalStorageVariables.EXTENSION_LOGGING.name, resolve));\r\n  const response = await storageLocalGetAsync;\r\n  const storageLogLevel = response[LocalStorageVariables.EXTENSION_LOGGING.name];\r\n  if (Number.isInteger(storageLogLevel) && Object.values(LogLevels).includes(storageLogLevel))\r\n  {\r\n    return storageLogLevel;\r\n  }\r\n  return null;\r\n};\r\n","import { extension } from '@extension/common/webextension';\nimport HttpService from '@extension/common/http_service';\nimport BackgroundIPC from '@extension/common/background_ipc';\nimport { Logger } from '@extension/common/logger';\n/////////////////////////////////\n////////\n//////////////////////////////////////////////////////////\n//////////\n\nexport default class UIContentUtils\n{\n  /**\n   * Load HTML templates into Shadow Dom\n   * @param {object} properties                 - properties used by the host node\n   * @param {object} properties.hostStyles      - css object to be applied on the host node\n   * @param {object} baseTemplate               - main template to render\n   * @param {string} baseTemplate.htmlPath      - path to the html file\n   * @param {string} baseTemplate.cssPath       - path to the css file\n   * @param {object} childTemplate              - (optional) inner template to render (if one is provided)\n   * @param {string} childTemplate.htmlPath     - path to the html file\n   * @param {string} childTemplate.cssPath      - path to the css file\n   * @param {string} childTemplate.containerId  - append the html into this containerId from base html path\n   */\n  static async loadTemplate(properties, baseTemplate, childTemplate = null)\n  {\n    const { hostStyles } = properties;\n\n    // Create and attach shadow DOM node to regular DOM\n    const hostNode = document.createElement('div');\n    for (const property in hostStyles)\n    {\n      hostNode.style[property] = hostStyles[property];\n    }\n\n    const bkGlobals = await BackgroundIPC.getBkGlobals();\n\n    const mode = bkGlobals.shadowMode;\n\n    const shadowRoot = hostNode.attachShadow({ mode });\n\n    // Handle base template\n    await UIContentUtils.populateContainer(baseTemplate, shadowRoot);\n\n    // Handle child template (if one is provided)\n    if (childTemplate) await UIContentUtils.populateContainer(childTemplate, shadowRoot);\n\n    document.body.appendChild(hostNode);\n    return { hostNode, shadowRoot };\n  }\n\n  static async populateContainer(templateData, shadowRoot)\n  {\n    const { htmlPath, cssPath, containerId, waImageSecret } = templateData;\n    const template = await UIContentUtils.getTemplate(htmlPath, cssPath, waImageSecret);\n    const container = containerId ? shadowRoot.querySelector(`#${containerId}`) : shadowRoot;\n    container.appendChild(template);\n  }\n\n  static async reloadTemplate(templateData, baseTemplateData, shadowRoot)\n  {\n    // remove all data within the shadow root\n    shadowRoot.innerHTML = '';\n\n    // repopulate base container (if one is provided)\n    if (baseTemplateData) await UIContentUtils.populateContainer(baseTemplateData, shadowRoot);\n\n    // repopulate container\n    await UIContentUtils.populateContainer(templateData, shadowRoot);\n  }\n\n  static async getTemplate(htmlPath, cssPath = null, waImageSecret)\n  {\n    const httpService = new HttpService();\n    const template = document.createElement('template');\n\n    // Grab markup and inject into the base template\n    const responseText = await httpService.sendHttpRequest({ url: extension.runtime.getURL(htmlPath) });\n    const htmlText = await responseText.text();\n\n    // Grab styles and inject into the base template as a new style tag\n    let stylesText = '';\n    if (cssPath)\n    {\n      const responseStyles = await httpService.sendHttpRequest({ url: extension.runtime.getURL(cssPath) });\n      stylesText = await responseStyles.text();\n///////////////////////////////////////\n////////////////////////////////////////////////////////////////\n////////////////\n////////////////////////////////////////////////////////////////\n      stylesText = `<style>${stylesText}</style>`;\n////////////////\n    }\n    let cleanHTML = '';\n    // Wrapper template element\n/////////////////////////////////////\n///////////////////////////////////////\n//////////////\n//////////////////////////////////////////////////////////////\n    cleanHTML = htmlText;\n//////////////\n    template.innerHTML = `${stylesText}${cleanHTML}`;\n\n    // Resolve images\n    for (const image of template.content.querySelectorAll('img[x-mcsrc]'))\n    {\n      const source = image.getAttribute('src');\n      const secretParam = `?secret=${waImageSecret}`;\n      image.src = extension.runtime.getURL(source + secretParam);\n    }\n\n    return template.content.cloneNode(true);\n  }\n\n  static async initFontOnDocument()\n  {\n    // Add custom typefaces and inject into the main document because shadow DOM does not load custom fonts.\n    // For example Google Fonts must be added to the main document (light DOM) for typeface to work.\n    try\n    {\n      // Poppins\n      const poppinsUrl = extension.runtime.getURL('fonts/Poppins-Regular.ttf');\n      const poppinsFont = new FontFace('mcafeePoppins', `url(${poppinsUrl})`);\n      const poppinsPromise = poppinsFont.load(); // wait for font to be loaded\n\n      // OpenSans\n      const openSansUrl = extension.runtime.getURL('fonts/OpenSans-Regular.ttf');\n      const openSansFont = new FontFace('mcafeeOpenSans', `url(${openSansUrl})`);\n      const openSansPromise = openSansFont.load(); // wait for font to be loaded\n\n      const [poppins, openSans] = await Promise.all([poppinsPromise, openSansPromise]);\n      document.fonts.add(poppins); // add font to document\n      document.fonts.add(openSans); // add font to document\n    }\n    catch (error)\n    {\n      Logger.error(error);\n    }\n  }\n\n  static fadeIn(element)\n  {\n    element.style.opacity = 0;\n    element.style.display = 'block';\n\n    function fade()\n    {\n      const opacity = +element.style.opacity + 0.1;\n      if (opacity < 1)\n      {\n        element.style.opacity = opacity;\n        window.requestAnimationFrame(fade);\n      }\n    }\n\n    fade();\n  }\n\n  static fadeOut(element, cb)\n  {\n    let stopTransition = false;\n    element.style.opacity = 1;\n\n    function fade()\n    {\n      // Sometimes the event queue isn't all cleared in time for fadeIn to begin\n    // and a delayed invocation causes an infinite recursion battle between fadeIn & fadeOut\n    // This flag acts as an official kill switch.\n      if (stopTransition) return;\n\n      const opacity = +element.style.opacity - 0.1;\n      if (opacity <= 0)\n      {\n        stopTransition = true;\n        element.style.display = 'none';\n        cb();\n      }\n      else\n      {\n        element.style.opacity = opacity;\n        window.requestAnimationFrame(fade);\n      }\n    }\n\n    fade();\n  }\n}\n","// This global object is used by core to store the properites that are shared across multiple objects in core.\r\n// Most of the properties set in this object are set during initialization of coreengine.\r\n\r\nimport { BuildSettings } from '@extension/common/constants';\r\nimport { SocialMediaTypes } from '@extension/common/sma_variables';\r\nimport { AnnotationOptions } from '@extension/common/annotation_variables';\r\nimport ExternalMsgDispatcher from '@core-engine/external_msg_dispatcher';\r\n\r\nexport const Globals = {\r\n  uid: '0DE9E47C-871A-4F90-8440-B190C216800A',\r\n  browserType: BuildSettings.BROWSER_TYPE,\r\n  externalMsgDispatcher: new ExternalMsgDispatcher(),\r\n  reputationReqCount: 5,\r\n  imageCounter: 0,\r\n  isSearchHitSend: false,\r\n  resourceRequestor: null,\r\n  clientFunctions: null,\r\n  activeURI: null,\r\n  eventHandler: null,\r\n  bkGlobals: null,\r\n  searchEngine: null,\r\n  searchAnnotationOption: AnnotationOptions.ONLY_SECURE_SEARCH,\r\n  socialMediaOption: SocialMediaTypes.NONE,\r\n  socialMediaToggle: false,\r\n\r\n  // Show \"view site report\" link on annotation balloon\r\n  hasReportPage: true,\r\n};\r\n","import { extension } from '@extension/common/webextension';\r\nimport { ExternalCommands } from '@extension/common/commands';\r\nimport { Logger } from '@extension/common/logger';\r\n\r\nexport default class ExternalMsgDispatcher\r\n{\r\n  isvalidRequestType(requestType)\r\n  {\r\n    let valid = false;\r\n    for (const type in ExternalCommands)\r\n    {\r\n      if (ExternalCommands[type] === requestType)\r\n      {\r\n        valid = true;\r\n      }\r\n    }\r\n\r\n    return valid;\r\n  }\r\n\r\n  validateMsg(requestType, payload)\r\n  {\r\n    if (\r\n      requestType === undefined\r\n      || payload === undefined\r\n      || !this.isvalidRequestType(requestType)\r\n    )\r\n    {\r\n      Logger.error('Invalid msg to be sent externally');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  sendExtnMsg(extnId, message, cb)\r\n  {\r\n    const defaultCb = (resolve, reject, data) =>\r\n    {\r\n      if (extension.runtime.lastError) reject(extension.runtime.lastError.message);\r\n      resolve(data);\r\n    };\r\n\r\n    return new Promise((resolve, reject) =>\r\n    {\r\n      const { request_type: requestType, payload } = message;\r\n      if (!this.validateMsg(requestType, payload))\r\n      {\r\n        reject(Error('sendExtnMsg: Invalid Message'));\r\n      }\r\n\r\n      extension.runtime.sendMessage(extnId, message, (data) =>\r\n      {\r\n        if (typeof cb === 'function') cb(resolve, reject, data);\r\n        else defaultCb(resolve, reject, data);\r\n      });\r\n    });\r\n  }\r\n}\r\n","// Utilities\r\nimport UIContentUtils from '@extension/utilities/ui_content_utils';\r\nimport { Globals } from '@core-engine/globals';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n\r\n/**\r\n * Base class handling the sidebar action panel markup, styles and event listeners.\r\n */\r\nexport default class ShadowDomContainer\r\n{\r\n  constructor(hostStyles, baseTemplate = null)\r\n  {\r\n    this.closing = false; // flag to indicate ui is closing\r\n    this.showing = false; // flag to indicate ui is showing\r\n    this.animateReload = true; // flag to animate slide out/in when reloading content\r\n    this.allowReplace = true; // flag to allow content to be replaced or not\r\n    this.componentData = null; // variable used for preventing same content to be re-rendered\r\n    this.template = null; // variable used for preventing same template to be re-rendered (used along with allowReplace)\r\n\r\n    this.hostNode = null;\r\n    this.shadowRoot = null;\r\n    this.hostStyles = hostStyles;\r\n    this.baseTemplate = baseTemplate;\r\n\r\n    // Exposed functions for extendee to use\r\n    this.showContainer = this.showContainer.bind(this);\r\n    this.closeContainer = this.closeContainer.bind(this);\r\n    this.query = this.query.bind(this);\r\n    this.clickListener = this.clickListener.bind(this);\r\n\r\n    // feature\r\n    this.bgGrayout = false; // for adding a background grayout overlay on top of the page\r\n    this.bgGrayoutElement = null;\r\n  }\r\n\r\n  /**\r\n   * Load HTML templates into Shadow Dom\r\n   * @param {object}  template\r\n   * @param {string}  template.htmlPath       - path to the html file\r\n   * @param {string}  template.cssPath        - path to the css file\r\n   * @param {string}  template.containerId    - (optional): append the html into this containerId from base html path\r\n   * @param {bool}    template.allowReplace   - (default = true) set to false content cannot be replaced unless the template is different\r\n   * @param {bool}    template.animateReload  - (default = true) when reloading the content, slide out/in when changing the content\r\n   * @param {object}  template.componentData  - (default == null) - used mainly to avoid rendering same component\r\n   */\r\n  async initContainer(template, componentData = null)\r\n  {\r\n    // Prevent rendering UI if ui is closing or already showing\r\n    if (this.closing) return false;\r\n\r\n    // Also prevent if allowReplace=false and the template is the same\r\n    if (this.showing && (this.allowReplace === false && ShadowDomContainer.isSameObject(template, this.template))) return false;\r\n\r\n    // Ignore content that has been shown\r\n    if (this.componentData && JSON.stringify(this.componentData) === JSON.stringify(componentData)) return false;\r\n\r\n    this.componentData = componentData;\r\n\r\n    // Set new behavior for the container\r\n    const { allowReplace = true, animateReload = true } = template;\r\n    this.allowReplace = allowReplace;\r\n    this.animateReload = animateReload;\r\n    this.showing = true;\r\n\r\n    // If the host node has been created and allowReplace is true\r\n    // then we can just reload the sidebar with new content\r\n    if (this.hostNode && allowReplace)\r\n    {\r\n      await this.reloadContainer(template);\r\n      return true;\r\n    }\r\n\r\n    // This is to handle parent/child template between containers which has a parent (eg. sidebar) and containers without one (eg. topbar)\r\n    let childTemplate = { ...template };\r\n    this.template = childTemplate;\r\n    if (this.baseTemplate === null)\r\n    {\r\n      this.baseTemplate = childTemplate;\r\n      childTemplate = null;\r\n    }\r\n\r\n    const properties = { hostStyles: { ...this.hostStyles.DEFAULT, ...this.hostStyles.HIDE } };\r\n    const { hostNode, shadowRoot } = await UIContentUtils.loadTemplate(properties, this.baseTemplate, childTemplate);\r\n    this.hostNode = hostNode;\r\n    this.shadowRoot = shadowRoot;\r\n\r\n    Globals.bkGlobals = await BackgroundIPC.getBkGlobals();\r\n\r\n    return true;\r\n  }\r\n\r\n  static isSameObject(object1 = null, object2 = null)\r\n  {\r\n    if (object1 === null && object2 === null) return true;\r\n    return object1 && object2 && JSON.stringify(object1) === JSON.stringify(object2);\r\n  }\r\n\r\n  async reloadContainer(template, animateReload = this.animateReload)\r\n  {\r\n    // On reload, close the sidebar (if animate = true)\r\n    // prevent re-rendering during reload\r\n    await this.closeContainer(false, animateReload);\r\n\r\n    // Load new template\r\n    this.template = template;\r\n    await UIContentUtils.reloadTemplate(template, this.baseTemplate, this.shadowRoot);\r\n  }\r\n\r\n  setBackgroundOverlay(show)\r\n  {\r\n    const body = document.querySelector('body');\r\n\r\n    if (show)\r\n    {\r\n      // Grayout the background\r\n      const styles = 'display:none; width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 99999; background: rgba(0, 0, 0, 0.3);';\r\n      this.bgGrayoutElement = document.createElement('div');\r\n      this.bgGrayoutElement.style.cssText = styles;\r\n\r\n      body.append(this.bgGrayoutElement); // Add the grayout\r\n      body.style.overflow = 'hidden'; // hide the scrollbar\r\n      UIContentUtils.fadeIn(this.bgOverlay);\r\n    }\r\n    else\r\n    {\r\n      if (this.bgGrayoutElement) UIContentUtils.fadeOut(this.bgGrayoutElement, () => {});\r\n      body.style.overflow = 'auto'; // re-show the scrollbar\r\n    }\r\n  }\r\n\r\n  showBackgroundGrayout(bgGrayout)\r\n  {\r\n    this.bgGrayout = bgGrayout;\r\n    if (!bgGrayout) return;\r\n\r\n    // Grayout the background\r\n    const styles = 'display:none; width: 100%; height: 100%; position: fixed; top: 0px; left: 0px; z-index: 99999; background: rgba(0, 0, 0, 0.3);';\r\n    this.bgGrayoutElement = document.createElement('div');\r\n    this.bgGrayoutElement.style.cssText = styles;\r\n\r\n    const body = document.querySelector('body');\r\n    body.append(this.bgGrayoutElement); // Add the grayout\r\n    body.style.overflow = 'hidden'; // hide the scrollbar\r\n    UIContentUtils.fadeIn(this.bgGrayoutElement);\r\n  }\r\n\r\n  hideBackgroundGrayOut()\r\n  {\r\n    if (this.bgGrayoutElement && this.bgGrayout)\r\n    {\r\n      UIContentUtils.fadeOut(this.bgGrayoutElement, () => {});\r\n      document.querySelector('body').style.overflow = 'auto'; // re-show the scrollbar\r\n      this.bgGrayout = false;\r\n    }\r\n  }\r\n\r\n  showContainer(options = null)\r\n  {\r\n    const bgGrayout = options && options.bgGrayout;\r\n    this.showBackgroundGrayout(bgGrayout);\r\n    for (const property in this.hostStyles.SHOW)\r\n    {\r\n      this.hostNode.style[property] = this.hostStyles.SHOW[property];\r\n    }\r\n  }\r\n\r\n  closeContainer(clear = true, animate = true)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      // Handle background grayout removal\r\n      this.hideBackgroundGrayOut();\r\n\r\n      // Protect from multiple close triggers\r\n      if (this.closing)\r\n      {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      this.closing = true;\r\n\r\n      const close = () =>\r\n      {\r\n        this.closing = false;\r\n        this.showing = false;\r\n\r\n        // Clear when all content within the dom should\r\n        // be reset, happens when triggering from UI buttons\r\n        if (clear)\r\n        {\r\n          this.hostNode.remove();\r\n          this.hostNode = null;\r\n          this.componentData = null;\r\n          this.template = null;\r\n          this.shadowRoot = null;\r\n          this.baseTemplate = null;\r\n        }\r\n      };\r\n\r\n      if (!animate)\r\n      {\r\n        close();\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      // Hide action panel with animation\r\n      const styleObj = { ...this.hostStyles.DEFAULT, ...this.hostStyles.HIDE };\r\n      for (const property in styleObj)\r\n      {\r\n        this.hostNode.style[property] = styleObj[property];\r\n      }\r\n\r\n      setTimeout(() => resolve(close()), 500);\r\n    });\r\n  }\r\n\r\n  query(id)\r\n  {\r\n    return this.shadowRoot.querySelector(id);\r\n  }\r\n\r\n  querySelector(selector)\r\n  {\r\n    return this.shadowRoot.querySelector(selector);\r\n  }\r\n\r\n  querySelectorAll(selector)\r\n  {\r\n    return this.shadowRoot.querySelectorAll(selector);\r\n  }\r\n\r\n  clickListener(id, callback)\r\n  {\r\n    const element = this.shadowRoot.querySelector(id);\r\n    element && element.addEventListener('click', (event) =>\r\n    {\r\n      if (Globals.bkGlobals.isTrustCheckRequired && !event.isTrusted)\r\n      {\r\n        return;\r\n      }\r\n      callback(event);\r\n    });\r\n  }\r\n}\r\n","// Component\r\nimport ShadowDomContainer from '@extension/components/shadow_dom_container';\r\n\r\nconst topbarStyles = {\r\n  DEFAULT: {\r\n    top: '0',\r\n    padding: '0',\r\n    margin: '0',\r\n    zIndex: '2147483646',\r\n    position: 'fixed',\r\n    border: 'none',\r\n    opacity: '0',\r\n    left: '0',\r\n    display: 'block',\r\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.12)',\r\n  },\r\n\r\n  HIDE: {\r\n    transition: 'width 0s 0.4s, height 0s 0.4s, opacity 0.4s, transform 0.4s',\r\n    transform: 'translate3d(0, -80px, 0)',\r\n    opacity: '0',\r\n    width: '0',\r\n  },\r\n\r\n  SHOW: {\r\n    transition: 'opacity 0.4s, transform 0.4s',\r\n    transform: 'translate3d(0, 0, 0)',\r\n    opacity: '1',\r\n    width: '100%',\r\n    backgroundColor: 'transparent',\r\n  },\r\n};\r\n\r\nexport default class TopbarContainer extends ShadowDomContainer\r\n{\r\n  constructor()\r\n  {\r\n    super(topbarStyles);\r\n  }\r\n\r\n  async init(template, componentData)\r\n  {\r\n    const success = await this.initContainer(template, componentData);\r\n    return success;\r\n  }\r\n}\r\n","import HttpService from '@extension/common/http_service';\r\nimport { extension } from '@extension/common/webextension';\r\n\r\nexport default class ResourceRequestor\r\n{\r\n  constructor()\r\n  {\r\n    this.http = new HttpService();\r\n  }\r\n\r\n  geti18nRes(attr, placeholders = [])\r\n  {\r\n    let str = extension.i18n.getMessage(attr, placeholders);\r\n    const productName = extension.i18n.getMessage('res_PRODUCT_NAME_TRADEMARKED');\r\n    str = str.replace(/%PRODUCTNAME%/g, productName);\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Get the message based on the resource id\r\n   * @param {Number}   resourceId - Resource id\r\n   * @param {Function} callback   - Handles the returned localized string\r\n   */\r\n  getResStr(resourceId, callback)\r\n  {\r\n    const message = this.geti18nRes(resourceId);\r\n    callback(\r\n      message === '??' ? '' : message\r\n    );\r\n  }\r\n}\r\n","import BackgroundIPC from '@extension/common/background_ipc';\r\nimport ResourceRequestor from '../../coreengine/resource_requestor';\r\n\r\nexport default class UIStrings\r\n{\r\n  constructor(iframeId = null, pageDocument = document)\r\n  {\r\n    this.resourcerequestor = new ResourceRequestor();\r\n    this.document = pageDocument;\r\n\r\n    if (iframeId)\r\n    {\r\n      const iframeContainer = this.document.querySelectorAll(`#${iframeId}`);\r\n      if (iframeContainer) this.document = iframeContainer[0].contentDocument;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Passes message name into helper class to retrieve the appropriate localized message for it\r\n   * @param   {string} attr - Name of the message to resolve as specified in the messages.json file\r\n   * @returns {string} - The localized message for current locale\r\n   */\r\n  localeData(attr, placeholders = [])\r\n  {\r\n    return this.resourcerequestor.geti18nRes(attr, placeholders);\r\n  }\r\n\r\n  /**\r\n   * Resolve a specified html element (through id) with the provided text\r\n   * @param {string} id   - The id of the html element\r\n   * @param {string} text - The text to be injected into the html element\r\n   */\r\n  fillText(id, text)\r\n  {\r\n    const element = this.document.getElementById(id);\r\n\r\n    if (element)\r\n    {\r\n      const position = element.getAttribute('x-mcinsertposition');\r\n      if (position)\r\n      {\r\n        element.insertAdjacentText(position, text);\r\n        return;\r\n      }\r\n\r\n      element.textContent = text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resolves all html elements that need to be populated with localized string resources.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillLocalizedTexts()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-mclocalizedtext]'))\r\n    {\r\n      const text = this.localeData(id);\r\n\r\n      if (text === null || text === undefined) return false;\r\n\r\n      this.fillText(id, text);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Fills all input place holder strings. These are hint string to be added to input html elements.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillInputPlaceHolders()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-inputplaceholder]'))\r\n    {\r\n      const text = this.localeData(id);\r\n      const element = this.document.getElementById(id);\r\n\r\n      if (text === null || text === undefined) return false;\r\n\r\n      if (element !== null && element !== undefined)\r\n      {\r\n        element.setAttribute('placeholder', text);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Sends command to background to fill in placeholder text.\r\n   * @param {string} id - Resource id\r\n   */\r\n  fillPlaceHolderInternal(id)\r\n  {\r\n    BackgroundIPC.getPlaceholderText(id).then((data) =>\r\n    {\r\n      this.fillText(id, data.text);\r\n    }).catch(() => {});\r\n  }\r\n\r\n  /**\r\n   * Fills all internal placeholders.\r\n   * @returns {boolean} - Status provided showing if the function call was successful or not\r\n   */\r\n  fillPlaceHolders()\r\n  {\r\n    for (const { id } of this.document.querySelectorAll('*[x-mcplaceholder]'))\r\n    {\r\n      this.fillPlaceHolderInternal(id);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Initializing steps for the class.\r\n   */\r\n  init()\r\n  {\r\n    // if failed to replace a text in locale then show blank page.\r\n    this.fillLocalizedTexts();\r\n    this.fillPlaceHolders();\r\n    this.fillInputPlaceHolders();\r\n  }\r\n}\r\n","// Util\nimport UIStrings from '@extension/utilities/ui_strings';\n// Common\nimport BackgroundIPC from '@extension/common/background_ipc';\n\nexport default class TopbarIframeBlock\n{\n  constructor(componentData, containerHandler)\n  {\n    this.componentData = componentData;\n    this.telemetryData = {};\n\n    // containerHandler related:\n    this.shadowRoot = containerHandler.shadowRoot;\n    this.showContainer = containerHandler.showContainer;\n    this.closeContainer = containerHandler.closeContainer;\n    this.clickListener = containerHandler.clickListener;\n    this.query = containerHandler.query;\n  }\n\n  async init()\n  {\n    // Resolve all html elements with designated ids\n    const strConvertor = new UIStrings(null, this.shadowRoot);\n    strConvertor.init();\n    this.initListeners();\n\n    // Show topbar after everything has loaded\n    this.showContainer();\n    this.query('#iframe-block-logo').focus();\n  }\n\n  initListeners()\n  {\n    this.clickListener('#iframe_banner_close_btn', this.closeContainer);\n    this.clickListener('#iframe_banner_view_all_btn', () =>\n    {\n      BackgroundIPC.unblockAllIframes();\n      this.closeContainer();\n    });\n  }\n}\n","import { LocalStorageVariables } from '@extension/common/cache_store_variables';\r\n\r\nexport const WhitelistTypes = {\r\n  BLOCK_PAGE: 'BLOCK_PAGE',\r\n  CRYPTOJACKING: 'CRYPTOJACKING',\r\n  TYPOSQUATTING: 'TYPOSQUATTING',\r\n  IFRAME: 'IFRAME',\r\n  RAT_DETECTION: 'RAT_DETECTION'\r\n};\r\n\r\nexport const WhitelistStoreMappings = {\r\n  BLOCK_PAGE: LocalStorageVariables.BLOCK_PAGE_WHITELIST.name,\r\n  CRYPTOJACKING: LocalStorageVariables.CRYPTO_WHITELIST.name,\r\n  TYPOSQUATTING: LocalStorageVariables.TYPOSQUATTING_WHITELIST.name,\r\n  IFRAME: LocalStorageVariables.BLOCK_PAGE_WHITELIST.name,\r\n  RAT_DETECTION: LocalStorageVariables.RAT_DETECTION_WHITELIST.name\r\n};\r\n\r\nexport const WhitelistActions = {\r\n  ADD: 'ADD',\r\n  GET: 'GET',\r\n  REMOVE: 'REMOVE',\r\n  CLEAR: 'CLEAR',\r\n};\r\n","import { Color, BlockState, KEY_CODES_RANGE } from '@extension/common/constants';\r\n\r\nexport const FEATURE_TAB_ID = {\r\n  WHITELIST: 'whitelist',\r\n  PREFERENCE: 'preference',\r\n  STATISTICS: 'statistics',\r\n  ABOUT: 'about',\r\n};\r\n\r\n/* Acts as Event Names and also as Trigger Identifiers for handling telemetry */\r\nexport const EventNames = {\r\n  BLOCK_PAGE: 'Block_Page',\r\n  BROWSER_ACTION_CLICKED: 'BrowserAction_Clicked',\r\n  BROWSER_NAVIGATE: 'Browser_Navigate',\r\n  CRYPTOJACKING_BLOCK: 'Cryptojacking_Block',\r\n  DARK_WEB_SCAN: 'DarkWebMonitoring',\r\n  DOWNLOAD_BLOCK: 'Download_Block',\r\n  GET_SEARCH_EXTENSION: 'EmbedSearchExtension',\r\n  PROFILE_INFO: 'ProfileInfo',\r\n  REMOTE_ACCESS_TROJAN: 'RemoteAccessTrojan',\r\n  SEARCH_SUGGEST_BLOCK_PAGE: 'SearchSuggest_BlockPage',\r\n  SEARCH_SUGGEST: 'SearchSuggest',\r\n  SECURE_SEARCH_HIT: 'Secure_Search_Hit',\r\n  SIDEBAR_PANEL: 'SideBar_Panel',\r\n  SITE_REPORT: 'SiteReport',\r\n  SMA_REPUTATION: 'SMA_Reputation',\r\n  TOAST: 'Toast',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  WSS_ANALYTICS: 'WSS_Analytics',\r\n  APS: {\r\n    EVENT_NAME: 'AdvancedProtectionSignals',\r\n    IMPRESSION_BALLOON: 'IMPRESSION_BALLOON',\r\n    IMPRESSION_HOVER: 'IMPRESSION_HOVER',\r\n    CLOSE_BALLOON: 'CLOSE_BALLOON',\r\n    TOAST_CLOSE: 'TOAST_CLOSE',\r\n    TOAST: 'toast',\r\n    BALLOON: 'balloon',\r\n  },\r\n};\r\n\r\nexport const ToastTypes = {\r\n  REGULAR_TOAST: 'RegularToast',\r\n  EFFICACY_TOAST: 'Efficacy_SS',\r\n};\r\n\r\nexport const ImpressionNames = {\r\n  BROWSER_ACTION_CLICKED: 'BrowserActionClicked',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  BLOCK_PAGE: 'BlockPage',\r\n  SECURE_SEARCH_HIT: 'SecureSearchHit',\r\n  CRYPTOJACKING_BLOCK: 'CryptojackingBlock',\r\n  SIDEBAR_PANEL: 'SideBarPanel',\r\n  SMA_REPUTATION: 'SMAReputation',\r\n  DOWNLOAD_BLOCK: 'DownloadBlock',\r\n};\r\n\r\nexport const InteractionTypes = {\r\n  IMPRESSION: 'Impression',\r\n  WEBADVISOR: 'WebAdvisor',\r\n  CRYPTOJACKING: {\r\n    LEARN_MORE_CLICKED: 'LearnMoreClicked',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  SIDEBAR_PANEL: {\r\n    MAIN: 'Main',\r\n  },\r\n  SELECTION: 'Selection',\r\n  DISMISSED: 'Dismissed',\r\n  HOVERED: 'Hovered',\r\n  CLOSE_CLICKED: 'CloseClicked',\r\n  CLICKED: 'Clicked',\r\n  ENABLE: 'Enable',\r\n  ADD: 'Add',\r\n  RAT_DETECTION: {\r\n    ACKNOWLEDGED: 'Acknowledged',\r\n    WHITELISTED: 'Whitelisted',\r\n  },\r\n  ACCEPTED: 'Accepted',\r\n  DECLINED: 'Declined',\r\n  ACKNOWLEDGED: 'Acknowledged',\r\n  CLOSE: 'Close',\r\n  NEXT: 'Next',\r\n  GOT_IT: 'GotIt',\r\n  HOVER: 'Hover',\r\n};\r\n\r\nexport const PageLevel = {\r\n  TOP: 'Top',\r\n  FRAME: 'Frame',\r\n  INLINE: 'Inline',\r\n};\r\n\r\nexport const BLOCK_PAGE_STYLE = {\r\n  EDUCATION: 'Education',\r\n  NORMAL: 'Normal',\r\n};\r\n\r\nexport const SETTING_TABS = {\r\n  ABOUT: 'About',\r\n  PREFERENCES: 'Preferences',\r\n  WHITELIST: 'Whitelist',\r\n  STATS: 'UserStatistics',\r\n};\r\n\r\nexport const TelemetryColor = {\r\n  UNKNOWN: 'UNKNOWN',\r\n  RED: 'Red',\r\n  YELLOW: 'Yellow',\r\n};\r\n\r\nexport const TelemetryBlockState = {\r\n  GREEN: 'Green',\r\n  YELLOW: 'Yellow',\r\n  RED: 'Red',\r\n  UNKNOWN: 'UNKNOWN',\r\n  TYPOSQUATTING: 'Typosquatting',\r\n  PHISHING: 'Phishing',\r\n};\r\n\r\nexport const SearchType = {\r\n  DEFAULT: 'DefaultSearch',\r\n};\r\n\r\n// For telemetry identification and message storing\r\nexport const TelemetryTerms = {\r\n  ACTION: {\r\n    CLICK: 'click',\r\n    KEYDOWN: 'keydown',\r\n    RETURN_KEY_CODE: 13,\r\n    SHOW: 'show',\r\n    SEARCH_SUGGEST_KEY_CODES: [8, 32, 46,\r\n      ...KEY_CODES_RANGE(48, 57), ...KEY_CODES_RANGE(65, 90), ...KEY_CODES_RANGE(96, 107),\r\n      ...KEY_CODES_RANGE(109, 111), ...KEY_CODES_RANGE(186, 192), ...KEY_CODES_RANGE(219, 222)], // whitelistedKeys are keycodes which results in triggerring a search suggest\r\n  },\r\n  MISC: {\r\n    // Trigger states\r\n    LOADED: 'Loaded',\r\n    CHECKED: 'checked',\r\n    // Other terms\r\n    UNKNOWN: 'UNKNOWN',\r\n    ACTION_PANEL: 'ActionPanel',\r\n    ACCEPTED: 'Accepted',\r\n    DECLINED: 'Declined',\r\n    SETTINGS_TAB_PREFIX: 'settings_tab_',\r\n    GREEN: 'GREEN',\r\n    YELLOW: 'YELLOW',\r\n    RED: 'RED',\r\n    PREFERENCE: 'Preference',\r\n    DEFAULT: 'default',\r\n  },\r\n  // Search engine annotations\r\n  SEARCH_ENGINE: {\r\n    GOOGLE: 'google',\r\n    YAHOO: 'yahoo',\r\n  },\r\n  // Social media annotations\r\n  SOCIAL_MEDIA: {\r\n    LINKEDIN: 'linkedin',\r\n    FACEBOOK: 'facebook',\r\n    YOUTUBE: 'youtube',\r\n    INSTAGRAM: 'instagram',\r\n    REDDIT: 'reddit',\r\n    TWITTER: 'twitter',\r\n  },\r\n};\r\n\r\nexport class CommonTelemetry\r\n{\r\n  static toColorTelemetry(color)\r\n  {\r\n    let colorStr = TelemetryColor.UNKNOWN;\r\n    switch (color)\r\n    {\r\n      case Color.RED:\r\n        colorStr = TelemetryColor.RED;\r\n        break;\r\n      case Color.YELLOW:\r\n        colorStr = TelemetryColor.YELLOW;\r\n        break;\r\n    }\r\n    return colorStr;\r\n  }\r\n\r\n  static toTelemetryBlockState(blockState)\r\n  {\r\n    let blockStateStr = TelemetryBlockState.UNKNOWN;\r\n    switch (blockState)\r\n    {\r\n      case BlockState.GREEN:\r\n        blockStateStr = TelemetryBlockState.GREEN;\r\n        break;\r\n      case BlockState.YELLOW:\r\n        blockStateStr = TelemetryBlockState.YELLOW;\r\n        break;\r\n      case BlockState.RED:\r\n        blockStateStr = TelemetryBlockState.RED;\r\n        break;\r\n      case BlockState.TYPOSQUATTING:\r\n        blockStateStr = TelemetryBlockState.TYPOSQUATTING;\r\n        break;\r\n      case BlockState.PHISHING:\r\n        blockStateStr = TelemetryBlockState.PHISHING;\r\n        break;\r\n    }\r\n    return blockStateStr;\r\n  }\r\n\r\n  static toTelemetrySettingTab(tabName)\r\n  {\r\n    let tabNameStr = SETTING_TABS.PREFERENCES;\r\n    switch (tabName)\r\n    {\r\n      case FEATURE_TAB_ID.WHITELIST:\r\n        tabNameStr = SETTING_TABS.WHITELIST;\r\n        break;\r\n      case FEATURE_TAB_ID.STATISTICS:\r\n        tabNameStr = SETTING_TABS.STATS;\r\n        break;\r\n      case FEATURE_TAB_ID.ABOUT:\r\n        tabNameStr = SETTING_TABS.ABOUT;\r\n        break;\r\n    }\r\n    return tabNameStr;\r\n  }\r\n}\r\n","export const Globals = {\r\n  ANNOTATION: {},\r\n  BackgroundIPC: null,\r\n  BackgroundCommons: null,\r\n  ContextTelemetry: null,\r\n  TelemetryEventNames: null,\r\n  UrlParser: null,\r\n  Utils: null,\r\n  Commands: {},\r\n  CommonConstants: {},\r\n  extension: null,\r\n  SearchEngineHelper: null,\r\n  prevLink: null,\r\n  Logger: null\r\n};\r\n","import { Globals } from './globals';\r\n\r\nexport default class ResourceManager\r\n{\r\n  /**\r\n   * Obtain the corresponding string for the resource name\r\n   * @param {String}   name     - The name of the resource\r\n   * @param {Function} callback - Handles the localized string returned\r\n   */\r\n  static getResString(name, callback)\r\n  {\r\n    Globals.ANNOTATION.resourceRequestor.getResStr(name, (value) =>\r\n    {\r\n      if (!value)\r\n      {\r\n        Globals.Logger.error(`Resource string ${name} failed to fetch through resource requestor`);\r\n      }\r\n      else\r\n      {\r\n        callback(value);\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Background\nimport { BackgroundGlobals } from '@extension/background/background_globals';\n// Common\nimport { BlockState, BrowserType, BuildSettings, Color, Score } from '@extension/common/constants';\nimport { BackgroundConstants } from '@extension/common/background_constants';\nimport { extension } from '@extension/common/webextension';\nimport { Logger } from '@extension/common/logger';\nimport { LocalStorageVariables } from '@extension/common/cache_store_variables';\n// @mcafee\nimport ResourceManager from '@mcafee/wa-annotations/Common/resource_manager';\n\n/**\n * TODO: Comments\n */\nexport default class BackgroundCommon\n{\n  static async toGTICategoriesString(categories, includeDescription = false)\n  {\n    const getRes = (l10nId) => new Promise((resolve) =>\n    {\n      ResourceManager.getResString(l10nId, (res) => resolve(res));\n    });\n\n    const getCategoryStrings = async (categoryId, includeDescription) =>\n    {\n      const newCategory = {};\n\n      const name = await getRes(`category_id_${categoryId}_name`);\n      newCategory.name = name;\n\n      if (includeDescription)\n      {\n        const description = await getRes(`category_id_${categoryId}_description`);\n        newCategory.description = description;\n      }\n\n      return newCategory;\n    };\n\n    const promises = [];\n    for (const category of categories)\n    {\n      promises.push(getCategoryStrings(category, includeDescription));\n    }\n\n    const newCategories = await Promise.all(promises);\n    return newCategories;\n  }\n\n  /**\n   * Determine the shorthand browser type name based on its corresponding index value.\n   * @returns {String} - The browser name (shorthand)\n   */\n  static browserTypeToString(toLowerCase = false)\n  {\n    let browserType = '';\n    switch (BuildSettings.BROWSER_TYPE)\n    {\n      case 1:\n        browserType = 'FF';\n        break;\n      case 2:\n        browserType = 'CH';\n        break;\n      case 3:\n        browserType = 'ED';\n        break;\n      default:\n        browserType = 'UN';\n    }\n\n    return toLowerCase ? browserType.toLowerCase() : browserType;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toImagePaths(imageName)\n  {\n    let imagePath = 'images/browser_action/';\n\n    const legacyImageName = imageName.startsWith('small_') ? imageName : `small_${imageName}`;\n\n    switch (legacyImageName)\n    {\n      case 'small_button_green.gif':\n        imagePath += 'green';\n        break;\n      case 'small_button_yellow.gif':\n        imagePath += 'yellow';\n        break;\n      case 'small_button_red.gif':\n        imagePath += 'red';\n        break;\n      case 'small_button_grey.gif':\n        imagePath += 'white';\n        break;\n      case 'small_button_disabled.gif':\n        imagePath += 'disabled';\n        break;\n      default:\n        imagePath += imageName;\n        break;\n    }\n\n    // 16 and 32 used by Chrome/Firefox, 20 and 40 used by Edge\n    const imagePaths = {\n      size16: `${imagePath}_16.png`,\n      size20: `${imagePath}_20.png`,\n      size32: `${imagePath}_32.png`,\n      size40: `${imagePath}_40.png`\n    };\n\n    return imagePaths;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static colorToImagePaths(color)\n  {\n    let imageName = 'white';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageName = 'green';\n        break;\n      case Color.YELLOW:\n        imageName = 'yellow';\n        break;\n      case Color.RED:\n        imageName = 'red';\n        break;\n      case Color.UNKNOWN:\n        imageName = 'white';\n        break;\n      case Color.DISABLED:\n        imageName = 'disabled';\n        break;\n    }\n\n    return BackgroundCommon.toImagePaths(imageName);\n  }\n\n  /**\n   * Return the appropriate class for the annotation item\n   * @param {Object} annotationItem - Reputation object returned by the GTI server\n   */\n  static toAnnotationImageClass(annotationItem)\n  {\n    const color = BackgroundCommon.toColor(annotationItem);\n\n    let imageClass = '';\n\n    switch (color)\n    {\n      case Color.GREEN:\n        imageClass = 'OK';\n        break;\n      case Color.RED:\n        imageClass = 'WARN';\n        break;\n      case Color.YELLOW:\n        imageClass = 'INFO';\n        break;\n      case Color.UNKNOWN:\n        imageClass = 'UNKNOWN';\n        break;\n    }\n\n    return imageClass;\n  }\n\n  /**\n  * Determines if the URL provided is malicious or not.\n  * @param   {Object} categories - Url info deemed phishing / malicious\n  * @returns {boolean} - Outcome of the phishing site check\n  */\n  static isPhishingURI(categories)\n  {\n    return categories && categories.includes(BackgroundConstants.PHISHING_CATEGORY);\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toBlockState(annItem)\n  {\n    const colorVal = BackgroundCommon.toColor(annItem);\n\n    if (colorVal === Color.RED || colorVal === Color.YELLOW)\n    {\n      if (BackgroundCommon.isPhishingURI(annItem.category))\n      {\n        return BlockState.PHISHING;\n      }\n    }\n\n    // Because the color and block state values correspond to the numbers, you can simply return the color value\n    return isNaN(colorVal) ? BlockState.UNKNOWN : colorVal;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toColor(annItem)\n  {\n    let color = Color.UNKNOWN;\n\n    if (annItem === undefined || annItem.trust === undefined)\n    {\n      return color;\n    }\n\n    if (annItem.trust >= Score.CLEAN)\n    {\n      color = Color.GREEN;\n    }\n    else if (annItem.trust > Score.UNVERIFIED)\n    {\n      color = Color.YELLOW;\n    }\n    else if (annItem.trust >= Score.DIRTY)\n    {\n      color = Color.RED;\n    }\n    else\n    {\n      color = Color.UNKNOWN;\n    }\n\n    return color;\n  }\n\n  /**\n   * TODO: Comments\n   */\n  static toSiteReportUrl(url)\n  {\n    const siteReportUrl = extension.runtime.getURL('html/site_status_site_report.html');\n    return `${siteReportUrl}?url=${escape(url)}`;\n  }\n\n  static isExtensionUrl(url)\n  {\n    // Chrome/Edge Internal Pages\n    if ((BrowserType.CHROME === BuildSettings.BROWSER_TYPE && url.startsWith(`chrome-extension://${extension.runtime.id}`))\n    || (BrowserType.EDGE === BuildSettings.BROWSER_TYPE && url.startsWith(`ms-browser-extension://${extension.runtime.id}`)))\n    {\n      return true;\n    }\n\n    // Firefox Internal Pages\n    if (BrowserType.FIREFOX === BuildSettings.BROWSER_TYPE)\n    {\n      let firefoxInternalUUID = extension.i18n.getMessage('@@extension_id');\n      if (!firefoxInternalUUID)\n      {\n        const internalPageUrl = extension.runtime.getURL('images/web_advisor/logo.png');\n        // get internal uuid from resource url extracting characters between 'moz-extension://' and '/'\n        // sample url: moz-extension://ABCDE/images/web_advisor/logo.png => ABCDE\n        const urlSplit = internalPageUrl.split('/');\n        firefoxInternalUUID = (urlSplit.length >= 3) ? urlSplit[2] : '';\n      }\n\n      return firefoxInternalUUID && url.startsWith(`moz-extension://${firefoxInternalUUID}`);\n    }\n\n    return false;\n  }\n\n  // Check whether a url is a siteadvisor url or our own extension url\n  static isSafeUrl(url)\n  {\n    return BackgroundCommon.isSiteAdvisorUrl(url) || BackgroundCommon.isExtensionUrl(url);\n  }\n\n  static isSiteAdvisorUrl(url)\n  {\n    return (url.startsWith(`http://${BackgroundConstants.SITE_ADVISOR_URL}`)\n    || url.startsWith(`https://${BackgroundConstants.SITE_ADVISOR_URL}`));\n  }\n\n  static isPropertRedirectUrl(url)\n  {\n    return BackgroundCommon.isPropertyWebURL(url) || url.startsWith('edge://') || url.startsWith('chrome://');\n  }\n\n  // Check whether a url is a proper web url\n  static isProperWebURL(url)\n  {\n    if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith('ftp://'))\n    {\n      return true;\n    }\n\n    return false;\n  }\n\n  static getUINumber(number)\n  {\n    // sample output:\n    // 0: 0\n    // 999: 999\n    // 1010: 1k+\n    // 1251: 1.2k+\n    // 9999: 9.9k+\n    // > 10000: 10k+\n    const THOUSAND = 1000;\n    const TEN_THOUSAND = 10000;\n    if (number >= TEN_THOUSAND) return '10k+';\n    if (number >= THOUSAND)\n    {\n      let decimal = (number / THOUSAND).toFixed(1);\n      decimal = decimal.substring(2, 3) === '0' ? decimal.substring(0, 1) : decimal;\n      return `${decimal}k+`;\n    }\n    return `${number}`;\n  }\n\n  static hasEpochTimeElapsed(initialEpochInSeconds, timePassedinSeconds)\n  {\n    const nowInSeconds = (new Date()).getTime() / 1000;\n    if (nowInSeconds > initialEpochInSeconds + timePassedinSeconds) return true;\n    return false;\n  }\n\n  static isPersonalPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static isActivityPolicyEnabled()\n  {\n/////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////\n/////\n///////////////////\n/////\n//////////////\n\n    return true;\n  }\n\n  static blockRequest(tabId, url, message)\n  {\n    extension.declarativeNetRequest.getDynamicRules(\n      (rules) =>\n      {\n        const found = rules.filter((rule) => rule.condition.urlFilter === url);\n\n        if (found.length === 0)\n        {\n          extension.declarativeNetRequest.updateDynamicRules(\n            {\n              addRules: [{\n                id: rules.length + 1,\n                condition: {\n                  domains: ['<all_urls>'],\n                  urlFilter: url,\n                  resourceTypes: ['main_frame']\n                },\n                action: {\n                  type: 'block'\n                }\n              }]\n            },\n            () =>\n            {\n              Logger.log(`${message} ${url} ${tabId}`);\n            }\n          );\n        }\n      }\n    );\n  }\n}\n","import {\r\n  EventNames,\r\n  ImpressionNames,\r\n  InteractionTypes,\r\n  SearchType,\r\n  CommonTelemetry,\r\n  FEATURE_TAB_ID,\r\n  PageLevel,\r\n  TelemetryTerms,\r\n  ToastTypes,\r\n} from '@extension/telemetry/common_telemetry';\r\nimport BackgroundCommon from '@extension/common/background_common';\r\n\r\nexport class TelemetryMessageModifiers\r\n{\r\n  constructor(options)\r\n  {\r\n    this._options = options;\r\n    this.TELEMETRY_HANDLERS = this.initializeTelemetryHandler();\r\n  }\r\n\r\n  // Traverse through the TELEMETRY_HANDLERS Json object and fetch the list of messages which match the 'identifier'\r\n  fetchTelemetryHandlers(identifier)\r\n  {\r\n    const handlers = [];\r\n    this.TELEMETRY_HANDLERS.forEach((handler) =>\r\n    {\r\n      if (!handler.trigger.identifier || (identifier === handler.trigger.identifier))\r\n      {\r\n        handlers.push(handler);\r\n      }\r\n    });\r\n    return handlers;\r\n  }\r\n\r\n  /*\r\n    JSON object pertaining the list of all the Telemetry attributes needed for identifing the event/action.\r\n    Also returns the list of messages associated with each identifier which is the telemetry message to be sent.\r\n  */\r\n  initializeTelemetryHandler()\r\n  {\r\n    return [\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          sendTelemetry: this._options.isFromBackground || false\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: (this._options.level === PageLevel.FRAME) ? 'UNKNOWN' : (this._options.blockPageStyle || 'UNKNOWN'),\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BLOCK_PAGE,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BLOCK_PAGE,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              colour: CommonTelemetry.toTelemetryBlockState(this._options.colour),\r\n              level: this._options.level,\r\n              style: this._options.blockPageStyle || 'UNKNOWN',\r\n              _event_name: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_ACTION_CLICKED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.BROWSER_ACTION_CLICKED,\r\n              interaction_type: InteractionTypes.WEBADVISOR,\r\n              badge_count: this._options.count,\r\n              _event_name: EventNames.BROWSER_ACTION_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.BROWSER_NAVIGATE,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              url: this._options.url,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.BROWSER_NAVIGATE\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_learn_link',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.LEARN_MORE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '.crypto-block-actions__close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.CRYPTOJACKING_BLOCK,\r\n          selector: '#cryptojacking_banner_allow_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              interaction_type: InteractionTypes.CRYPTOJACKING.WHITELISTED,\r\n              name: ImpressionNames.CRYPTOJACKING_BLOCK,\r\n              _event_name: EventNames.CRYPTOJACKING_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              is_shown: true,\r\n              domain: this._options.domain || 'default',\r\n              crypto_miner: this._options.miner || 'default'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DOWNLOAD_BLOCK,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.DOWNLOAD_BLOCK,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              process_name: TelemetryTerms.MISC.UNKNOWN,\r\n              file_name: TelemetryTerms.MISC.UNKNOWN,\r\n              colour: TelemetryTerms.MISC.UNKNOWN,\r\n              ui_type: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.DOWNLOAD_BLOCK,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.PREFERENCE}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.PREFERENCE),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.WHITELIST}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.WHITELIST),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.ABOUT}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.ABOUT),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.PROFILE_INFO,\r\n          selector: `#${TelemetryTerms.MISC.SETTINGS_TAB_PREFIX}${FEATURE_TAB_ID.STATISTICS}`,\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.PROFILE_INFO,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              tab: CommonTelemetry.toTelemetrySettingTab(FEATURE_TAB_ID.STATISTICS),\r\n              _event_name: EventNames.PROFILE_INFO,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          selector: '#block_page_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_BLOCK_PAGE,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.BLOCK_PAGE,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          selector: '#typosquatting_message_search_input',\r\n          action: TelemetryTerms.ACTION.KEYDOWN\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SEARCH_SUGGEST_TYPOSQUATTING,\r\n          sendTelemetry: this._options.selected\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.SEARCH_SUGGEST,\r\n              interaction_type: InteractionTypes.SELECTION,\r\n              search_type: EventNames.TYPOSQUATTING,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.SEARCH_SUGGEST\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SECURE_SEARCH_HIT,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: ImpressionNames.SECURE_SEARCH_HIT,\r\n              search_type: SearchType.DEFAULT,\r\n              _event_name: EventNames.SECURE_SEARCH_HIT,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              type_tag: this._options.typeTag,\r\n              provider_type: this._options.engineName\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SIDEBAR_PANEL,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SIDEBAR_PANEL,\r\n              interaction_type: this._options.interaction_type,\r\n              _event_name: EventNames.SIDEBAR_PANEL,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SITE_REPORT,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              name: EventNames.SITE_REPORT,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              block_state: CommonTelemetry.toTelemetryBlockState(this._options.blockState),\r\n              site_categories: this._options.siteCategories,\r\n              url: this._options.displayUrl,\r\n              style: TelemetryTerms.MISC.ACTION_PANEL,\r\n              _event_name: EventNames.SITE_REPORT,\r\n              browser: BackgroundCommon.browserTypeToString()\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.SMA_REPUTATION,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.GREEN,\r\n              count: this._options[TelemetryTerms.MISC.GREEN],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.RED,\r\n              count: this._options[TelemetryTerms.MISC.RED],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.YELLOW,\r\n              count: this._options[TelemetryTerms.MISC.YELLOW],\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.SMA_REPUTATION,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              _event_name: EventNames.SMA_REPUTATION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              site: this._options.site,\r\n              color: TelemetryTerms.MISC.UNKNOWN,\r\n              count: this._options[TelemetryTerms.MISC.UNKNOWN],\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TOAST,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              _event_name: 'ToastCheckCompleted',\r\n              category: 'ToastCheck',\r\n              triggerType: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n            }\r\n          },\r\n          {\r\n            template: {\r\n              _event_name: 'Secure_Search_Toast',\r\n              category: 'SecureSearchToast',\r\n              action_type: 'Impression',\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              provider: (this._options.toastData) ? (this._options.toastData.providerId) : TelemetryTerms.MISC.UNKNOWN,\r\n              toastType: (this._options.toastData) ? (this._options.toastData.toastType) : ToastTypes.REGULAR_TOAST,\r\n              metadata: (this._options.toastData) ? (this._options.toastData.metadata) : TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.TYPOSQUATTING,\r\n          sendTelemetry: this._options.isFromBackground\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: ImpressionNames.TYPOSQUATTING,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(),\r\n              _event_name: EventNames.TYPOSQUATTING\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          state: TelemetryTerms.MISC.LOADED,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#rat_detection_got_it_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.ACKNOWLEDGED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar_rat_detection_whitelist_btn',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.RAT_DETECTION.WHITELISTED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.REMOTE_ACCESS_TROJAN,\r\n          selector: '#sidebar-close',\r\n          action: TelemetryTerms.ACTION.CLICK\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              name: EventNames.REMOTE_ACCESS_TROJAN,\r\n              interaction_type: InteractionTypes.CLOSE_CLICKED,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              url: this._options.url,\r\n              _event_name: EventNames.REMOTE_ACCESS_TROJAN\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.WSS_ANALYTICS,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.WSS_ANALYTICS,\r\n              message: this._options.message,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.DARK_WEB_SCAN,\r\n          sendTelemetry: true\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.DARK_WEB_SCAN,\r\n              category: EventNames.DARK_WEB_SCAN,\r\n              action_type: this._options.eventAction || TelemetryTerms.MISC.UNKNOWN,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              count: this._options.count || TelemetryTerms.MISC.UNKNOWN,\r\n              type: this._options.type,\r\n              flow_id: this._options.flowId,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.EVENT_NAME,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.IMPRESSION,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.IMPRESSION_HOVER,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.HOVER,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.CLOSE_BALLOON,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.BALLOON,\r\n              sequence: this._options.sequence,\r\n              trigger: this._options.trigger,\r\n              color: this._options.color,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        trigger: {\r\n          identifier: EventNames.APS.TOAST_CLOSE,\r\n          sendTelemetry: true,\r\n        },\r\n        messages: [\r\n          {\r\n            template: {\r\n              analyticsSDK: true,\r\n              _event_name: EventNames.APS.EVENT_NAME,\r\n              name: EventNames.APS.EVENT_NAME,\r\n              action_type: this._options.gotItButton ? InteractionTypes.GOT_IT : InteractionTypes.CLOSE,\r\n              browser: BackgroundCommon.browserTypeToString(true) === 'un' ? TelemetryTerms.MISC.UNKNOWN : BackgroundCommon.browserTypeToString(true),\r\n              type: EventNames.APS.TOAST,\r\n              sequence: TelemetryTerms.MISC.DEFAULT,\r\n              trigger: TelemetryTerms.MISC.DEFAULT,\r\n              color: TelemetryTerms.MISC.DEFAULT,\r\n            }\r\n          }\r\n        ]\r\n      },\r\n    ];\r\n  }\r\n}\r\n","import { TelemetryTerms } from '@extension/telemetry/common_telemetry';\r\nimport { TelemetryMessageModifiers } from '@extension/telemetry/telemetry_message_modifiers';\r\nimport { BackgroundGlobals } from '@extension/background/background_globals';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\nimport { onDOMContentReady } from '@extension/utilities/utils';\r\n\r\nexport default class ContextTelemetry\r\n{\r\n  /* Registers the telemetry and fetches the respective messages based on the mapped 'identifiers'.\r\n     - Sends telemetry if associated with a User action event for a few respective cases.\r\n     - Else sends telemetry based on the 'sendTelemetry' attribute value for a few respective cases.\r\n     - Or else sends telemetry when the document is ready for a few respective cases.\r\n  */\r\n  static sendTelemetryMessages(options, handler)\r\n  {\r\n    const { sendTelemetry } = handler.trigger;\r\n    const triggerAction = handler.trigger.action;\r\n    const permittedActionList = [TelemetryTerms.ACTION.CLICK]; // All non-keyPress user actions\r\n\r\n    if (handler.trigger.selector && handler.trigger.action)\r\n    {\r\n      if (options.containerMeta)\r\n      {\r\n        const selectedTag = options.containerMeta.query(handler.trigger.selector);\r\n        if (selectedTag)\r\n        {\r\n          selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n        }\r\n      }\r\n      else\r\n      {\r\n        onDOMContentReady(() =>\r\n        {\r\n          const selectedTag = document.querySelector(handler.trigger.selector);\r\n          if (selectedTag)\r\n          {\r\n            selectedTag.addEventListener(handler.trigger.action, sendMessages);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    else if (sendTelemetry || (handler.trigger.state === options.state))\r\n    {\r\n      sendMessages();\r\n    }\r\n\r\n    /**\r\n     * Function handling the sending of telemetry, either from content or background script.\r\n     * @param {Object} event - Event object if invoked by an event listener. Can also be undefined if invoked directly by us.\r\n     */\r\n    function sendMessages(event)\r\n    {\r\n      handler.messages.forEach((spec) =>\r\n      {\r\n        const telemetryMessage = { ...spec.template };\r\n        // send telemetry only when its loaded or when its loaded with count != 0 (SMA Reputation)\r\n        const shouldSendMessage = ((sendTelemetry) && ((telemetryMessage.count !== undefined) ? (telemetryMessage.count !== 0) : true));\r\n\r\n        /* send telemetry when the key pressed is in WHITELISTEDKEYS array (found in 'options' JSON)\r\n           or if the user action is a click event */\r\n        let worthyAction = permittedActionList.includes(triggerAction);\r\n        if (triggerAction === TelemetryTerms.ACTION.KEYDOWN && options.whitelistedKeys)\r\n        {\r\n          const eventCode = event.keyCode;\r\n          worthyAction = options.whitelistedKeys.includes(eventCode);\r\n        }\r\n\r\n        if (shouldSendMessage || worthyAction)\r\n        {\r\n          if (options.isFromBackground)\r\n          {\r\n            BackgroundGlobals.messageDispatcher.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n          else\r\n          {\r\n            BackgroundIPC.sendTelemetry(JSON.stringify(telemetryMessage));\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /* Accepts the paramters required for detecting the respective telemetry */\r\n  static handle(options)\r\n  {\r\n    const messageModifiers = new TelemetryMessageModifiers(options);\r\n    const telemetryHandlers = messageModifiers.fetchTelemetryHandlers(options.identifier);\r\n    telemetryHandlers.forEach((handler) =>\r\n    {\r\n      this.sendTelemetryMessages(options, handler);\r\n    });\r\n  }\r\n}\r\n","import { extension } from '@extension/common/webextension';\n/////////////////////////////////\n//////////////////////////////////\n//////////\nexport default class Utils\n{\n  /**\n   * Creates a debounced function that delays invoking func until after wait\n   * milliseconds have elapsed since the last time the debounced function was invoked.\n   * source: http://davidwalsh.name/javascript-debounce-function\n  */\n  static debounce(func, wait, immediate)\n  {\n    let timeout;\n    return (...args) =>\n    {\n      const later = () =>\n      {\n        timeout = null;\n        if (!immediate) func(...args);\n      };\n\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(later, wait);\n      if (callNow) func(...args);\n    };\n  }\n\n  static isBrowserEN()\n  {\n    const language = extension.i18n.getUILanguage();\n    return language.toLowerCase().startsWith('en');\n  }\n\n  static isChromeBrowser()\n  {\n    // window.opr is only defined for opera. Edge Chromium has user agent Edg. So avoid these two as\n    // chrome extension can be installed even in these two popular browsers, window.navigator\n    const ua = navigator.userAgent.toLowerCase();\n\n    // Check if browser is chromium based, window.chrome\n    if (!ua.includes('chrome') || !!chrome === false) return false;\n\n    // check if it is opera browser, window.opr\n    if (ua.includes('opr')) return false;\n\n    // check if it is edge browser\n    if (ua.includes('edg')) return false;\n\n    return true;\n  }\n}\n\n/**\n * Vanilla JS solution to JQuery's $(document).ready() API\n */\nexport const onDOMContentReady = (cb) =>\n{\n  if (typeof document === 'undefined' || document === null)\n  {\n    return;\n  }\n\n  if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll))\n  {\n    cb();\n  }\n  else\n  {\n    document.addEventListener('DOMContentLoaded', cb);\n  }\n};\n\nexport const getBrowserInfo = () =>\n{\n  const ua = navigator.userAgent.toLowerCase();\n\n  const match = /(edge)\\/([\\w.]+)/.exec(ua)\n        || /(edg)\\/([\\w.]+)/.exec(ua)\n        || /(opr)[/]([\\w.]+)/.exec(ua)\n        || /(chrome)[ /]([\\w.]+)/.exec(ua)\n        || /(iemobile)[/]([\\w.]+)/.exec(ua)\n        || /(version)(applewebkit)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+).*(version)[ /]([\\w.]+).*(safari)[ /]([\\w.]+)/.exec(ua)\n        || /(webkit)[ /]([\\w.]+)/.exec(ua)\n        || /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua)\n        || /(msie) ([\\w.]+)/.exec(ua)\n        || (ua.indexOf('trident') >= 0 && /(rv)(?::| )([\\w.]+)/.exec(ua))\n        || (ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua))\n        || [];\n\n  const platformMatch = /(ipad)/.exec(ua)\n        || /(ipod)/.exec(ua)\n        || /(windows phone)/.exec(ua)\n        || /(iphone)/.exec(ua)\n        || /(kindle)/.exec(ua)\n        || /(silk)/.exec(ua)\n        || /(android)/.exec(ua)\n        || /(win)/.exec(ua)\n        || /(mac)/.exec(ua)\n        || /(linux)/.exec(ua)\n        || /(cros)/.exec(ua)\n        || /(playbook)/.exec(ua)\n        || /(bb)/.exec(ua)\n        || /(blackberry)/.exec(ua)\n        || [];\n\n  const matched = {\n    browser: match[5] || match[3] || match[1] || '',\n    version: match[4] || match[2] || '0',\n    platform: platformMatch[0] || '',\n  };\n\n  if (matched.browser === 'mozilla')\n  {\n    matched.browser = 'firefox';\n  }\n\n  if (matched.browser === 'edg')\n  {\n    matched.browser = 'edge';\n  }\n\n  return matched;\n};\n\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\n */\nexport async function digestMessage(message)\n{\n  const msgUint8 = new TextEncoder().encode(message); // encode as (utf-8) Uint8Array\n  const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8); // hash the message\n  const hashArray = Array.from(new Uint8Array(hashBuffer)); // convert buffer to byte array\n  const hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join(''); // convert bytes to hex string\n  return hashHex;\n}\n/////////////////////////////////\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////\n \n/////\n///\n////////////////////\n/////////////////\n///////////////////////\n///////////////////\n////////////////////////\n//////////////////////\n////////////////////////////\n//////////////////\n/////////////////////////////\n///////\n//////\n\n////////////////////////////////////////////\n///\n///////////////\n///\n//////////////\n///\n \n//////////\n","// Util\nimport UIStrings from '@extension/utilities/ui_strings';\n// Common\nimport BackgroundIPC from '@extension/common/background_ipc';\nimport { WhitelistTypes, WhitelistActions } from '@extension/common/whitelist_variables';\nimport { extension } from '@extension/common/webextension';\n// Telemetry\nimport ContextTelemetry from '@extension/telemetry/context_telemetry';\nimport { EventNames, TelemetryTerms } from '@extension/telemetry/common_telemetry';\n/////////////////////////////////\n////////\n//////////////////////////////////////////////////////////\n//////////\n\nexport default class TopbarCryptoBlock\n{\n  constructor(componentData, containerHandler)\n  {\n    this.componentData = componentData;\n    this.domain = componentData.cryptoBlockData.domain;\n    this.miner = componentData.cryptoBlockData.miner;\n\n    // containerHandler related:\n    this.shadowRoot = containerHandler.shadowRoot;\n    this.query = containerHandler.query;\n    this.showContainer = containerHandler.showContainer;\n    this.closeContainer = containerHandler.closeContainer;\n    this.clickListener = containerHandler.clickListener;\n\n    // For handling Telemetry\n    this.options = {\n      identifier: EventNames.CRYPTOJACKING_BLOCK,\n      state: TelemetryTerms.MISC.LOADED,\n      domain: this.domain,\n      miner: this.miner,\n      containerMeta: containerHandler\n    };\n  }\n\n  async init()\n  {\n    const strConvertor = new UIStrings(null, this.shadowRoot);\n    strConvertor.init();\n\n    const cryptoLearnUrl = extension.runtime.getURL('html/mcafee_wa_crypto_learn.html');\n    const cryptoLink = `<a id='cryptojacking_learn_link' href=${cryptoLearnUrl} target='_blank'>${strConvertor.localeData('cryptojacking_banner_learn_more')}</a>`;\n    let cryptLearnText = strConvertor.localeData('cryptojacking_banner_message', [cryptoLink]);\n\n/////////////////////////////////////\n//////////////////////////////////////////////////\n//////////////\n    this.query('.crypto-block-body__message').innerHTML = cryptLearnText;\n\n    this.initListeners();\n\n    // Show topbar after everything has loaded\n    this.showContainer();\n    this.query('#crypto-block-logo').focus();\n    // Handle Telemetry\n    ContextTelemetry.handle(this.options);\n  }\n\n  initListeners()\n  {\n    this.clickListener('#cryptojacking_banner_close_btn', () =>\n    {\n      this.closeContainer();\n    });\n\n    this.clickListener('#cryptojacking_banner_allow_btn', () =>\n    {\n      BackgroundIPC.whitelist(WhitelistActions.ADD, WhitelistTypes.CRYPTOJACKING, { domains: [this.domain] });\n      window.location.reload();\n    });\n  }\n}\n","// Components\r\nimport TopbarContainer from '@extension/components/topbar_container';\r\n// Common\r\nimport { TopBarCommands } from '@extension/common/commands';\r\nimport BackgroundIPC from '@extension/common/background_ipc';\r\n// Topbar\r\nimport TopbarIframeBlock from '@extension/ui/topbar/topbar_iframe_block';\r\nimport TopbarCryptoBlock from '@extension/ui/topbar/topbar_crypto_block';\r\n\r\nexport default class TopbarUIHandler\r\n{\r\n  constructor()\r\n  {\r\n    this.iframeBlockShown = false;\r\n    this.iframeBlockedUrls = {};\r\n    this.cryptoBlockBannerShown = false;\r\n    this.topbarContainer = new TopbarContainer();\r\n\r\n    this.componentMap = {\r\n      [TopBarCommands.IFRAME_BLOCK]: {\r\n        template: {\r\n          htmlPath: 'html/topbar/topbar_iframe_block.html',\r\n          cssPath: 'css/topbar_iframe_block.css',\r\n        },\r\n        Component: TopbarIframeBlock,\r\n      },\r\n      [TopBarCommands.CRYPTO_BLOCK]: {\r\n        template: {\r\n          htmlPath: 'html/topbar/topbar_crypto_block.html',\r\n          cssPath: 'css/topbar_crypto_block.css',\r\n        },\r\n        Component: TopbarCryptoBlock,\r\n      },\r\n    };\r\n    this.getBkGlobals();\r\n  }\r\n\r\n  async getBkGlobals()\r\n  {\r\n    const bkGlobals = await BackgroundIPC.getBkGlobals();\r\n    this.waImageSecret = bkGlobals.WA_IMAGE_SECRET;\r\n    this.injectSecretToTemplate();\r\n  }\r\n\r\n  injectSecretToTemplate()\r\n  {\r\n    const templateKeys = Object.keys(this.componentMap);\r\n    templateKeys.forEach((obj) =>\r\n    {\r\n      this.componentMap[obj].template.waImageSecret = this.waImageSecret;\r\n    });\r\n  }\r\n\r\n  processMessage(payload, isForegroundPage = false)\r\n  {\r\n    this.isForegroundPage = isForegroundPage;\r\n    const { subcommand } = payload;\r\n    if (!subcommand) return;\r\n\r\n    switch (subcommand)\r\n    {\r\n      case TopBarCommands.IFRAME_BLOCK:\r\n        if (this.iframeBlockShown) return;\r\n        this.iframeBlockShown = true;\r\n        break;\r\n      case TopBarCommands.CRYPTO_BLOCK:\r\n        if (this.cryptoBlockBannerShown) return;\r\n        this.cryptoBlockBannerShown = true;\r\n        break;\r\n    }\r\n\r\n    this.RenderUIContainer(payload);\r\n  }\r\n\r\n  async RenderUIContainer(payload)\r\n  {\r\n    const { subcommand, componentData } = payload;\r\n    if (!subcommand) return;\r\n\r\n    const componentDetails = this.componentMap[subcommand];\r\n\r\n    if (!componentDetails) return;\r\n    const { template, Component } = componentDetails;\r\n\r\n    const success = await this.topbarContainer.init(template, componentData);\r\n    if (!success) return;\r\n\r\n    new Component(componentData, this.topbarContainer).init();\r\n  }\r\n\r\n  getFrameUrls()\r\n  {\r\n    const frameUrls = [];\r\n    const frames = document.getElementsByTagName('iframe');\r\n    for (let index = 0; index < frames.length; ++index)\r\n    {\r\n      frameUrls.push(frames[index].src);\r\n    }\r\n    return frameUrls;\r\n  }\r\n\r\n  async recheckIframeBlock()\r\n  {\r\n    if (this.iframeBlockShown) return;\r\n\r\n    const frameUrls = this.getFrameUrls();\r\n\r\n    if (frameUrls.length === 0)\r\n    {\r\n      return;\r\n    }\r\n\r\n    const blockedIframes = await BackgroundIPC.anyBlockedIframes(frameUrls);\r\n    if (blockedIframes)\r\n    {\r\n      if (this.iframeBlockShown) return;\r\n      this.iframeBlockShown = true;\r\n      const iframeBlockData = {};\r\n      const { template, Component } = this.componentMap[TopBarCommands.IFRAME_BLOCK];\r\n      const success = await this.topbarContainer.init(template, { iframeBlockData });\r\n      if (!success) return;\r\n\r\n      new Component({ iframeBlockData }, this.topbarContainer).init();\r\n    }\r\n  }\r\n\r\n  async recheckCryptoBlock()\r\n  {\r\n    if (this.cryptoBlockBannerShown) return;\r\n\r\n    const cryptoBlockData = await BackgroundIPC.anyBlockedCryptoScripts();\r\n    if (cryptoBlockData)\r\n    {\r\n      if (this.cryptoBlockBannerShown) return;\r\n\r\n      this.cryptoBlockBannerShown = true;\r\n      const { template, Component } = this.componentMap[TopBarCommands.CRYPTO_BLOCK];\r\n      const success = await this.topbarContainer.init(template, { cryptoBlockData });\r\n\r\n      if (!success) return;\r\n\r\n      new Component({ cryptoBlockData }, this.topbarContainer).init();\r\n    }\r\n  }\r\n}\r\n","export default class ScriptBase\r\n{\r\n  constructor(pingCommand)\r\n  {\r\n    this.pingCommand = pingCommand;\r\n    this.basePingListener();\r\n  }\r\n\r\n  basePingListener(callback = null)\r\n  {\r\n    chrome.runtime.onMessage.addListener((request, sender, responseCb) =>\r\n    {\r\n      if (sender.id !== chrome.runtime.id)\r\n      {\r\n        return;\r\n      }\r\n\r\n      const { command } = request;\r\n      if (command === this.pingCommand)\r\n      {\r\n        responseCb({ content: true });\r\n        if (typeof callback === 'function') callback();\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { ContentCommands } from '@extension/common/commands';\r\nimport TopbarUIHandler from '@extension/scripts/ui_handler/topbar_ui_handler';\r\nimport ScriptBase from '@extension/scripts/content_base';\r\n\r\nexport default class ContentCryptoBlock extends ScriptBase\r\n{\r\n  constructor()\r\n  {\r\n    super(ContentCommands.PING_CONTENT_CRYPTO_BLOCK);\r\n    this.topbarUIHandler = new TopbarUIHandler();\r\n  }\r\n\r\n  main()\r\n  {\r\n    const handler = this.topbarUIHandler;\r\n    handler.recheckCryptoBlock();\r\n  }\r\n}\r\n\r\nconst contentCryptoBlock = new ContentCryptoBlock();\r\ncontentCryptoBlock.main();\r\n"],"names":["BackgroundCommands","ContentCommands","TopBarCommands","ExternalCommands","PING","DISCONNECT_NATIVE","SET_PROPERTY_EX","SET_PROPERTY","GET_PROPERTY","CLEAR_GTI_CACHE","RESET_CRYPTO","CLEAN_TYPOSQUATING_WHITELIST","CLEAR_TYPOSQUATING_CACHE","CLEAN_CRYPTO_WHITELIST","CLEAN_RAT_WHITELIST","CLEAN_RAT_CACHE","REPLACE_TRUSTED_DOMAIN","VERIFY_GTI_REQUEST","VERIFY_TYPOSQUAT_SERVER","GET_ALL_WA_SETTINGS","SET_STORAGE_PROPERTY","GET_STORAGE_PROPERTY","REINIT_SCHEDULED_TASKS","OPEN_SETTINGS","OPEN_ACTION_PANEL","GET_MEMORY_FOOTPRINT","ENDURANCE_TEST_RESET","FORM_DETECTION_RESULT","SHOW_UNUSED_SELECTORS","SET_MTI_GLOBALS","chrome","HttpService","onHttpResponse","response","ok","message","status","statusText","Promise","reject","Error","sendHttpRequest","url","headers","body","method","fetch","then","this","HandlePromise","static","customCallback","resolve","runtime","sendMessage","data","lastError","defaultCallback","BackgroundIPC","action","command","handlePromiseMessage","requestData","referer","request","commandId","params","type","bIncludeSearchEngines","val","JSON","parse","showInNewTab","domain","id","x","y","telemetry","frameUrls","engine","payload","extension_id","showed","searchTerm","setting","username","hostname","completeLogin","email","name","value","personal","activity","SocialMediaTypes","NONE","LINKEDIN","INSTAGRAM","YOUTUBE","FACEBOOK","TWITTER","REDDIT","AnnotationOptions","Object","values","reduce","sum","ONLY_SECURE_SEARCH","ALL","Symbol","iterator","key","keys","NonZeroSocialMediaTypes","LocalStorageVariables","options","TabData","blockedIframes","cryptoBlockData","tabDomainTrusted","getResetValues","reset","tabId","update","get","BackgroundGlobals","cacheStore","getDefaultValues","set","newTabData","cache","delete","currentTabData","setTabBlockPageData","blockPageData","addBlockedFrame","push","getBlockedFrames","resetBlockedFrames","BlockState","GREEN","YELLOW","RED","UNKNOWN","HACKERSAFE","TYPOSQUATTING","PHISHING","prop","BrowserType","BuildSettings","Color","Score","KEY_CODES_RANGE","start","end","Array","from","slice","BackgroundConstants","TrustedDomains","Set","NativeSettingsPreprocess","trim","split","CH","FF","EDGE","IE","suffixBrowserMap","SYSTEM","USER","_browser","getBrowserSuffix","NativeSettings","DEV_MODE","scope","AFF_ID","BINARY_VERSION","EXTENSION_VERSION_CH","writeOnly","EXTENSION_VERSION_FF","EXTENSION_VERSION_ED","BROWSER_TYPE","USER_AGENT","SUGGESTION_URL","SCRIPT_GENERATED_DEFAULT_SS_URL","SECURE_SEARCH_REGEXES","preprocess","PreprocessSecureSearchRegEx","SHOW_SEARCH_SETTINGS","SECURE_SEARCH_TOAST_STAMP","SECURE_SEARCH_ANNOTATION_ONLY","SECURE_SEARCH_SHOW_ICONS","SECURE_SEARCH_CHOICE","SS_DEF","ANNOTATIONS_CHOICE_EXPLICIT","CURRENT_SAO_IN_EXTENSION","FF_EXTENSION_LAST_TOAST_TIME","FF_EXTENSION_TOAST_COUNT","CHECKLIST_START_INGORE_DATE_AV","CHECKLIST_START_IGNORE_DATE_FW","CHECKLIST_IGNORE_DURACTION","CHECKLIST_GRACE_PERIOD_AV","CHECKLIST_GRACE_PERIOD_FW","CHECKLIST_GRACE_PERIOD_DURATION","CRYPTOJACKING_DISABLED","SMA_USER_TOGGLE","SMA_ANNOTATION_OPTIONS","PAGES_SCANNED","PAGES_BLOCKED","DOWNLOADS_SCANNED","DOWNLOADS_BLOCKED","CRYPTO_BLOCKED","BLOCKPAGE_WHITELIST","TS_WHITELIST","CSP_ID_SETTING","UNINSTALL_SURVEY_ENABLED","UNINSTALL_SURVEY_URL","RAT_DETECTION_ENABLED","IDPS_FEATURE_ENABLED","APS_COHORT","APS_TOGGLE_SETTING","ALT_TRIGGER","IFRAME_FORM_CHECK_ENABLED","ANNOTATION_JOURNEY_COHORT","ANNOTATION_JOURNEY_TOAST","HTI_THROTTLE","MTI_CLIENT_ID","isTrustCheckRequired","ExtensionTelemetryUrl","scheduleManager","schedules","isNativeConnected","telemetryEngine","postInstallationPage","listenerManager","firefoxInternalUUID","shadowMode","browserType","ffViewports","garbageCollector","typoCache","logger","loglevel","messageDispatcher","port","tabData","tabIdToLastClickTime","Map","useNativeLogger","wasm","userAgentInBase64","typoSquattingServer","tldParser","cryptoBlacklist","trustedDomains","nativeSettings","searchSuggest","ratBlacklist","urls","updatedByNative","wssMessageDispatcher","wssNativeClient","WSS_INSTALLED","isWPSInstalled","searchEngines","enginesVersionUrl","engineCheckInterval","ENGINES_VERSION","AUTO_PLAY_NOTIFICATION_ENABLED","ALLOW_LOCALHOST","IDPS_AUTH_URL","IDPS_BREACH_COUNT_URL","IDPS_CSP_CLIENT_ID","IDPS_IS_ENTITLED","IDPS_PROVISION_ID","IDPS_LOGIN_DOMAIN","UA_CLIENT","TYPOSQUATTING_MAX_CACHE","TYPOSQUATTING_EXPIRY","WA_IMAGE_SECRET","apsUrlList","shopping","paths","selector","apsAnimationTimeout","downloadUrls","wpsRequestedSettings","permittedContentTypes","SUPPORTED_WEBSITE_LIST","isHTI","mtiRequestor","gtiServer","htiServer","cspClientId","ForegroundGlobals","LogLevels","INFO","ERROR","WARN","DEBUG","LogTypes","ProcessTypes","BACKGROUND","CONTENT","TELEMETRY","SMART_NATIVE_CLIENT","ProcessStyleMap","DEFAULT","Logger","logType","process","includes","undefined","storage","local","isBackground","details","processType","extensionType","consoleLog","state","processLog","async","logLevel","getLogLevel","logMessage","Date","toLocaleString","hour","minute","hour12","styleRegular","hightlight","console","error","log","uniqueHighlight","context","level","getStorageLogLevelAsync","Number","isInteger","storageLocalGetAsync","storageLogLevel","UIContentUtils","properties","baseTemplate","childTemplate","hostStyles","hostNode","document","createElement","property","style","mode","getBkGlobals","shadowRoot","attachShadow","populateContainer","appendChild","templateData","htmlPath","cssPath","containerId","waImageSecret","template","getTemplate","querySelector","baseTemplateData","innerHTML","httpService","responseText","htmlText","text","stylesText","responseStyles","cleanHTML","image","content","querySelectorAll","source","getAttribute","secretParam","src","cloneNode","poppinsUrl","poppinsPromise","FontFace","load","openSansUrl","openSansPromise","poppins","openSans","all","fonts","add","element","opacity","display","fade","window","requestAnimationFrame","cb","stopTransition","Globals","uid","externalMsgDispatcher","isvalidRequestType","requestType","valid","validateMsg","sendExtnMsg","extnId","request_type","defaultCb","reputationReqCount","imageCounter","isSearchHitSend","resourceRequestor","clientFunctions","activeURI","eventHandler","bkGlobals","searchEngine","searchAnnotationOption","socialMediaOption","socialMediaToggle","hasReportPage","ShadowDomContainer","constructor","closing","showing","animateReload","allowReplace","componentData","showContainer","bind","closeContainer","query","clickListener","bgGrayout","bgGrayoutElement","isSameObject","stringify","reloadContainer","HIDE","loadTemplate","object1","object2","reloadTemplate","setBackgroundOverlay","show","styles","cssText","append","overflow","fadeIn","bgOverlay","fadeOut","showBackgroundGrayout","hideBackgroundGrayOut","SHOW","clear","animate","close","remove","styleObj","setTimeout","callback","addEventListener","event","isTrusted","topbarStyles","top","padding","margin","zIndex","position","border","left","boxShadow","transition","transform","width","backgroundColor","TopbarContainer","super","initContainer","ResourceRequestor","http","geti18nRes","attr","placeholders","str","productName","replace","getResStr","resourceId","UIStrings","iframeId","pageDocument","resourcerequestor","iframeContainer","contentDocument","localeData","fillText","getElementById","insertAdjacentText","textContent","fillLocalizedTexts","fillInputPlaceHolders","setAttribute","fillPlaceHolderInternal","getPlaceholderText","catch","fillPlaceHolders","init","TopbarIframeBlock","containerHandler","telemetryData","initListeners","focus","unblockAllIframes","WhitelistTypes","WhitelistActions","FEATURE_TAB_ID","EventNames","BLOCK_PAGE","BROWSER_ACTION_CLICKED","BROWSER_NAVIGATE","CRYPTOJACKING_BLOCK","DARK_WEB_SCAN","DOWNLOAD_BLOCK","GET_SEARCH_EXTENSION","PROFILE_INFO","REMOTE_ACCESS_TROJAN","SEARCH_SUGGEST_BLOCK_PAGE","SEARCH_SUGGEST","SECURE_SEARCH_HIT","SIDEBAR_PANEL","SITE_REPORT","SMA_REPUTATION","TOAST","WSS_ANALYTICS","APS","EVENT_NAME","IMPRESSION_BALLOON","IMPRESSION_HOVER","CLOSE_BALLOON","TOAST_CLOSE","BALLOON","ToastTypes","ImpressionNames","InteractionTypes","LEARN_MORE_CLICKED","WHITELISTED","ACKNOWLEDGED","PageLevel","SETTING_TABS","TelemetryColor","TelemetryBlockState","SearchType","TelemetryTerms","ACTION","CLICK","KEYDOWN","RETURN_KEY_CODE","SEARCH_SUGGEST_KEY_CODES","MISC","LOADED","CHECKED","ACTION_PANEL","ACCEPTED","DECLINED","SETTINGS_TAB_PREFIX","PREFERENCE","SEARCH_ENGINE","GOOGLE","YAHOO","SOCIAL_MEDIA","CommonTelemetry","color","colorStr","blockState","blockStateStr","tabName","tabNameStr","ANNOTATION","BackgroundCommons","ContextTelemetry","TelemetryEventNames","UrlParser","Utils","Commands","CommonConstants","extension","SearchEngineHelper","prevLink","ResourceManager","BackgroundCommon","categories","includeDescription","getRes","l10nId","getResString","res","getCategoryStrings","categoryId","newCategory","description","promises","category","toLowerCase","imageName","imagePath","startsWith","size16","size20","size32","size40","toImagePaths","annotationItem","imageClass","toColor","annItem","colorVal","isPhishingURI","isNaN","trust","escape","urlSplit","length","isSiteAdvisorUrl","isExtensionUrl","isPropertyWebURL","number","decimal","toFixed","substring","initialEpochInSeconds","timePassedinSeconds","getTime","rules","filter","rule","condition","urlFilter","addRules","domains","resourceTypes","TelemetryMessageModifiers","_options","TELEMETRY_HANDLERS","initializeTelemetryHandler","fetchTelemetryHandlers","identifier","handlers","forEach","handler","trigger","sendTelemetry","isFromBackground","messages","analyticsSDK","interaction_type","colour","toTelemetryBlockState","blockPageStyle","_event_name","browser","browserTypeToString","badge_count","count","is_shown","crypto_miner","miner","process_name","file_name","ui_type","tab","toTelemetrySettingTab","search_type","selected","SEARCH_SUGGEST_TYPOSQUATTING","type_tag","typeTag","provider_type","engineName","block_state","site_categories","siteCategories","displayUrl","site","triggerType","action_type","provider","toastData","toastType","metadata","eventAction","flow_id","flowId","sequence","gotItButton","triggerAction","permittedActionList","containerMeta","selectedTag","sendMessages","readyState","documentElement","doScroll","spec","telemetryMessage","shouldSendMessage","worthyAction","whitelistedKeys","eventCode","keyCode","sendTelemetryMessages","TopbarCryptoBlock","strConvertor","cryptoLink","cryptLearnText","handle","whitelist","location","reload","TopbarUIHandler","iframeBlockShown","iframeBlockedUrls","cryptoBlockBannerShown","topbarContainer","componentMap","Component","injectSecretToTemplate","obj","processMessage","isForegroundPage","subcommand","RenderUIContainer","componentDetails","getFrameUrls","frames","getElementsByTagName","index","anyBlockedIframes","iframeBlockData","anyBlockedCryptoScripts","ScriptBase","pingCommand","basePingListener","onMessage","addListener","sender","responseCb","topbarUIHandler","main","recheckCryptoBlock"],"sourceRoot":""}